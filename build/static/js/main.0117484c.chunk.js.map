{"version":3,"sources":["API/EntityGroups/BaseEntityGroup.js","models/Role.js","models/User.js","models/UserAction.js","models/GroceryList.js","models/UnitType.js","models/IngredientCategory.js","models/RecipeCategory.js","models/Ingredient.js","models/RequirementsListIngredient.js","models/Recipe.js","models/KitchenIngredient.js","API/EntityGroups/CustomEntityGroup.js","API/EntityGroups/IngredientEntityGroup.js","API/EntityGroups/UserEntityGroup.js","API/EntityGroups/RoleEntityGroup.js","API/EntityGroups/RecipeEntityGroup.js","API/EntityGroups/KitchenEntityGroup.js","API/EntityGroups/RequirementsListEntityGroup.js","API/EntityGroups/UnitTypeEntityGroup.js","API/EntityGroups/IngredientCategoryEntityGroup.js","API/EntityGroups/RecipeCategoryEntityGroup.js","API/EntityGroups/GroceryListEntityGroup.js","API/api.js","API/api-context.js","API/account.js","components/Loading.js","components/Drawer/DrawerItem.js","components/Global/Thumbnail.js","components/Global/ImageInputComponent.js","components/Global/UserInputComponent.js","components/Global/UserMultiSelectInputComponent.js","components/Global/UserSelectInputComponent.js","components/RecipeBook/preparationStepsInputComponent.js","components/Global/EntityList.js","components/Global/SelectIngredientComponent.js","components/RecipeBook/RequirementsInputComponent.js","API/CRUDPagesInfo.js","components/Drawer/AppDrawer.js","components/Home/Index.js","components/Global/RowActions.js","components/Kitchen/index.js","components/Kitchen/AddIngredients.js","components/Kitchen/WhatToBuy.js","components/RecipeBook/index.js","components/RecipeBook/details.js","components/RecipeBook/tutorial.js","components/RecipeBook/edit.js","components/RecipeBook/create.js","components/Accounts/index.js","components/Accounts/update.js","components/Accounts/details.js","components/CRUD/CRUDPage.js","components/CRUD/details.js","components/CRUD/edit.js","components/CRUD/create.js","components/Onboarding/AuthorizationCallback.js","MainContent.js","components/SignIn/Register.js","components/SignIn/LogIn.js","components/Onboarding/WelcomePage.js","components/Onboarding/common-styles.js","components/Onboarding/Onboarding.js","app.js","serviceWorker.js","index.js"],"names":["accessToken","axios","require","default","protocol","serverIp","window","location","hostname","indexOf","api_url","AccessTokenHeaderName","AuthorizationHeaders","getAccessToken","HandlerError","error","response","console","log","status","data","Message","request","message","account","localStorage","getItem","JSON","parse","e","AccessToken","EntityGroup","groupName","api_path","ApiUrl","Name","this","length","a","get","headers","id","name","newObj","stringify","post","updatedObj","put","obj","delete","type","url","toUpperCase","info","Role","countId","CountId","Id","User","email","phoneNumber","passwordHashed","salt","dateOfBirth","creationDate","roles","Roles","Email","PhoneNumber","PasswordHashed","Salt","DateOfBirth","Date","CreationDate","UserAction","user","endpoint","requestType","description","refObject","actionPerformedOnTable","success","Endpoint","RequestType","Description","RefObject","ActionPerformedOnTable","Success","GroceryList","value","Value","UserId","UnitType","allowDecimals","AllowDecimals","IngredientCategory","RecipeCategory","Ingredient","imgLocation","avgkgPerUnit","avgLPerUnit","categories","unitTypes","Categories","UnitTypes","ImageLocation","AverageWeightInKgPerUnit","AverageVolumeInLiterPerUnit","RequirementsListIngredient","ingredient","units","unitType","recipe","IngredientId","Units","UnitTypeId","RecipeId","Recipe","imageLocation","isPublic","preparationSteps","videoTutorialLink","requirementsList","RequirementsList","PreparationSteps","VideoTutorialLink","IsPublic","KitchenIngredient","CustomEntityGroup","text","Text","res","Result","item","DOB","map","role","IngredientEntityGroup","fixedData","category","userId","Ingredients","requirement","UserEntityGroup","RefObjectid","RefObjectName","RoleEntityGroup","RecipeEntityGroup","KitchenEntityGroup","RequirementsListEntityGroup","UnitTypeEntityGroup","IngredientCategoryEntityGroup","RecipeCategoryEntityGroup","GroceryListEntityGroup","Api","authReturnUrlPath","params","port","AuthorizationPage","AuthReturnUrlPath","Url","Users","Recipes","Kitchens","RequirementsLists","IngredientCategories","RecipeCategories","GroceryLists","Custom","ApiContext","React","createContext","ApiProvider","children","API","contextValue","Provider","useAPI","useContext","ACCOUNT_LS","AccountContext","Authenticate","useState","setAccount","loaded","setLoaded","useEffect","getTokens","setTokens","GetUserByAccessToken","then","acc","setItem","catch","getParam","key","search","substr","split","forEach","segment","keyToValue","param","localAccStr","localAcc","pathname","ValidateAccessToken","accWithUser","correctedAcc","removeItem","RefreshAccessToken","newToken","refreshedAcc","access_token","checkLogin","registered","logIn","password","logOut","LogOut","useAccount","GetUserIdByName","UsersApi","GetByName","CreateAccount","username","updateByLogIn","api","createUserObject","newUser","Create","encryptSHA256","CustomApi","Encrypt","generateSalt","GetSalt","PerformCustom","EmailConfirmed","EmailConfirmationToken","PhoneNumberConfirmed","NAME_NORMALIZED","EMAIL_NORMALIZED","SecurityStamp","ConcurrencyStamp","LockoutEnabled","lockoutEnd","AccessFailedCount","Kitchen","Deleted","useStyles","makeStyles","theme","container","display","height","justifyContent","alignItems","Loading","classes","className","CircularProgress","DrawerItem","props","ListItem","button","component","Link","to","link","icon","style","marginRight","ListItemText","primary","onClick","inputBox","marginBottom","spacing","Thumbnail","source","size","Grid","border","width","toString","maxWidth","maxHeight","alt","src","ImageInputComponent","variant","defaultValue","onChange","isAsync","setValue","direction","xs","TextField","label","target","verticalAlign","UserInputComponent","inputProps","step","correction","parseInt","parseFloat","UserMultiSelectInputComponent","defaultValues","options","values","setValues","overrideOnChange","InputLabel","Select","multiple","option","MenuItem","selected","UserSelectInputComponent","PreparationStepsInputComponent","updateValue","newValue","index","updatedValue","i","join","addStep","newStepIndex","steps","Button","color","borderTop","paddingTop","paddingBottom","borderBottom","marginLeft","stepValue","replace","endsWith","substring","removeStep","tableContainer","minWidth","EntityList","rows","columns","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","align","TableBody","slice","row","hover","tabIndex","format","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","SelectIngredientComponent","ingredients","selectIngredient","setCategories","pop","GetAll","filterOptions","setFilterOptions","overflow","paddingLeft","alignContent","Typography","padding","filter","toLowerCase","c","x","image","select","RequirementsInputComponent","parentRecipe","setIngredients","setUnitTypes","propName","updatedValues","closeIngredientSelect","ingredientsSelects","ingredientSelectsOpen","setIngredientSelectsOpen","val","find","Dialog","open","onClose","DialogTitle","DialogContent","openIngredientSelect","min","max","unitTypeId","u","updateUnitType","vals","splice","removeRequirement","push","addRequirement","CreateEditPage","tableName","notEditableProps","ApiTables","onItemEdited","additionals","marginTop","cat","ingredientCategories","CreateIngredientEditPage","CreateIngredientCategoryEditPage","CreateUnitTypeEditPage","preparationStepsOpen","setPreparationStepsOpen","requirementsListOpen","setRequirementsListOpen","preparationStepsCount","requirementsCount","keepMounted","recipeCategories","CreateRecipeEditPage","CreateRecipeCategoryEditPage","CreateDetailsPage","Card","margin","CreateIngredientDetailsPage","CreateIngredientCategoryDetailsPage","CreateUnitTypeDetailsPage","href","CreateRecipeDetailsPage","CreateRecipeCategoryDetailsPage","generateCRUDInfo","displayName","context","DisplayName","getEditPage","getDetailsPage","CRUDPagesInfo","Pages","drawerWidth","drawer","flexShrink","drawerPaper","drawerheader","backgroundColor","mixins","toolbar","chevron","flex","AppDrawer","onOpen","isAdmin","isCreator","isCook","useTheme","Drawer","anchor","paper","noWrap","IconButton","Divider","List","faHome","faUtensils","faBookOpen","faListAlt","faMortarPestle","Object","keys","CRUD","faBook","faUsers","form","flexDirection","txt","textAlign","continue","HomePage","setTitle","innerHeight","textDecoration","fontSize","rowActionsContainer","RowActions","rowEntityId","onDetails","rowEntity","onEdit","onRemove","justify","faEye","faPen","faTrash","KitchenHomePage","kitchen","setKitchen","dialogOpened","editItem","setEditItem","setRemoveItem","updates","setUpdates","unitTypeChanges","setUnitTypeChanges","GetKitchenByUserId","Update","updatedKitchen","Delete","closeEditDialog","closeRemoveDialog","newUnits","newUnitType","updatedUnitType","actions","faPlus","ingredientSelectContainer","ingredientSelectedContainer","AddIngredients","selectedIngredient","setSelectedIngredient","saveIngredient","setSaveIngredient","faArrowRight","borderLeft","faBackward","WhatToBuyPage","listState","setListState","items","setItems","GetWhatToBuy","selectedItem","setSelectedItem","addIngredient","toAddIngredient","closeIngredientDialog","closeItemDialog","img","amount","r","recipeListState","faSync","RecipeBookHomePage","defaultRecipeListState","history","useHistory","setRecipeListState","recipes","setRecipes","GetAllFromCook","GetPreparableForUser","recipeId","ToggleRemove","faCross","public","boxSizing","RecipeDetailsPage","useParams","recipeDetails","setRecipeDetails","GetById","RecipeTutorialPage","setRecipe","tutorialMode","setTutorialMode","paddingbottom","faList","faVideo","title","errorTxt","inputComponent","EditRecipePage","currentRecipe","setCurrentRecipe","updateRecipe","setUpdateRecipe","onRecipeEdited","update","correctedRecipe","CreateRecipePage","onRecipeValueEdited","Category","AccountsPage","removeUser","setRemoveUser","users","setUsers","disableBackdropClick","disableEscapeKeyDown","faBan","EditAccountPage","currentUser","setCurrentUser","updateUser","setUpdateUser","setRoles","onUserEdited","d","defaultMinimumAgeDate","getFullYear","getMonth","getDate","db","defaultDate","AccountDetailsPage","userDetails","setUserDetails","userActions","setUserActions","GetActionsByUserId","cd","getHours","getMinutes","userAction","onTable","faCheckCircle","CRUDPage","TableName","entityGroup","entityListData","setEntityListData","useCallback","Array","isArray","el","textOverflow","whiteSpace","CRUDDetailsPage","currentItem","setCurrentItem","CRUDInfo","CRUDEditPage","updateItem","setUpdateItem","setIngredientCategories","setRecipeCategories","CRUDCreatePage","AuthorizationCallback","drawerHeader","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","MainContent","drawerOpen","isRegistered","clsx","overflowY","path","exact","strict","from","btn","RegisterPage","onSuccess","errorMsgs","setErrorMsgs","setEmail","userName","setUserName","setDOB","setPassword","confirmPassword","setConfirmPassword","Register","confirmpassword","newErrors","parts","year","month","date","minimumAgeYear","LogInPage","LogIn","AttemptLogIn","newErrorMsgs","WelcomePage","root","formstyles","Onboarding","authPageAvailable","setAuthPageAvailable","TestAuthPage","authPage","pageActive","handleConnectionSuccess","appBar","appBarShift","logoutButton","menuButton","hide","App","AppShell","setOpen","CssBaseline","AppBar","position","Toolbar","edge","faSignOutAlt","undefined","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0117484c.chunk.js","sourcesContent":["const axios = require('axios').default;\r\n\r\nconst protocol = \"https://\", serverIp = window.location.hostname === \"localhost\" ? \"localhost\" : \r\n                                        window.location.hostname === \"192.168.2.101\" ? \"192.169.2.101\" :\r\n                                        window.location.hostname.indexOf(\"sywapps.com\") > -1 ? \"recipefinderapi.sywapps.com\" : \"\",\r\n    port = 5001, apiPage = \"/api\",\r\n    api_url = protocol + serverIp + \":\" + port + apiPage;\r\n\r\nexport {\r\n    protocol,\r\n    serverIp,\r\n    port,\r\n    apiPage,\r\n    api_url,\r\n};\r\n\r\nconst defaultHeaders = (data) => ({ \"Accept\": \"*/*\", \"Content-Type\": \"application/json\" });\r\n\r\nexport const AccessTokenHeaderName = \"RecipeFinder_AccessToken\";\r\n\r\nvar accessToken;\r\nconst AuthorizationHeaders = () => {\r\n    if (!accessToken) {\r\n        accessToken = getAccessToken();\r\n    }\r\n\r\n    return ({ [AccessTokenHeaderName]: accessToken });\r\n};\r\n\r\nfunction HandlerError(error) {\r\n    if (error.response) {\r\n        console.log(`${error.response.status} - `, error.response.data.Message ?? error.response.data);\r\n    } else if (error.request) {\r\n        console.log(`Request failed: `, error.request);\r\n    } else {\r\n        console.log(`Axios request execution fail: ${error.message}`, error);\r\n    }\r\n\r\n    return \"Error\";\r\n};\r\n\r\nfunction getAccessToken() {\r\n    const ACCOUNT_LS = \"recipefinder_account\";\r\n\r\n    var account = localStorage.getItem(ACCOUNT_LS);\r\n\r\n    try\r\n    {\r\n        account = JSON.parse(account);\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n        account = {};\r\n    }\r\n\r\n    return account?.AccessToken;\r\n};\r\n\r\nexport class EntityGroup {\r\n    constructor(groupName = '', api_path = '') {\r\n        this.Name = groupName;\r\n        this.ApiUrl = api_url + (api_path.length > 0 ? \"/\" + api_path : '');\r\n\r\n        if (!accessToken) {\r\n            getAccessToken();\r\n        }\r\n    };\r\n\r\n    ApiUrl = '';\r\n    Name = '';\r\n\r\n    async GetAll() {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async GetById(id = '') {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl + \"/\" + id, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async GetByName(name = '') {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl + \"/byname/\" + name, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Create(newObj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(newObj, null, 4);\r\n\r\n            var response = await axios.post(this.ApiUrl,\r\n                data,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Update(id = '', updatedObj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(updatedObj, null, 4);\r\n\r\n            var response = await axios.put(this.ApiUrl + \"/\" + id,\r\n                data,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Delete(id = '', obj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(obj, null, 4);\r\n\r\n            var response = await axios.delete(this.ApiUrl + '/' + id,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async PerformCustom(type = 'get', url, obj = {}, headers = {}) {\r\n        try\r\n        {\r\n            var response = {};\r\n\r\n            headers = { ...AuthorizationHeaders(), ...headers };\r\n\r\n            if (type === 'get')\r\n            {\r\n                response = await axios.get(url, { headers: headers });\r\n            }\r\n            else if (type === 'post')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...defaultHeaders(data), ...headers };\r\n\r\n                response = await axios.post(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else if (type === 'put')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...defaultHeaders(data), ...headers };\r\n\r\n                response = await axios.put(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else if (type === 'delete')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...defaultHeaders(data), ...headers };\r\n\r\n                response = await axios.delete(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else response = 'Invalid request type!';\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            console.log(`Failed request to '${url}' as ${type.toUpperCase()}`, e);\r\n\r\n            HandlerError(e);\r\n\r\n            return { info: e, error: true, data: \"Error\" };\r\n        }\r\n    };\r\n};","export default class Role {\r\n    constructor(countId, id, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n    };\r\n};","import Role from \"./Role\"\r\n\r\nexport default class User {\r\n    constructor(countId, id, name, email, phoneNumber, passwordHashed, salt, dateOfBirth, creationDate, roles) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Email = email ?? '';\r\n        this.PhoneNumber = phoneNumber ?? '';\r\n        this.PasswordHashed = passwordHashed ?? '';\r\n        this.Salt = salt ?? '';\r\n        this.DateOfBirth = dateOfBirth ? new Date(Date.parse(dateOfBirth)) : null;\r\n        this.CreationDate = creationDate ? new Date(Date.parse(creationDate)) : null;\r\n        this.Roles = roles ?? [];\r\n    };\r\n    \r\n    Roles = [new Role()];\r\n};","import User from \"./User\"\r\n\r\nexport default class UserAction {\r\n    constructor(countId, user, endpoint, requestType, description, refObject, actionPerformedOnTable, success) {\r\n        this.CountId = countId ?? -1;\r\n        this.User = user ?? new User();\r\n        this.Endpoint = endpoint ?? '';\r\n        this.RequestType = requestType ?? '';\r\n        this.Description = description ?? '';\r\n        this.RefObject = refObject ?? {};\r\n        this.ActionPerformedOnTable = actionPerformedOnTable ?? '';\r\n        this.Success = success ?? false;\r\n    };\r\n\r\n    User = new User();\r\n};","import User from \"./User\"\r\n\r\nexport default class GroceryList {\r\n    constructor(id, name, value, user) {\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Value = value ?? '';\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user ?? new User();\r\n    };\r\n    \r\n    User = new User();\r\n};","export default class UnitType {\r\n    constructor(countId, name, allowDecimals) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n        this.AllowDecimals = allowDecimals ?? false;\r\n    };\r\n};","export default class IngredientCategory {\r\n    constructor(countId, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n    };\r\n};","export default class RecipeCategory {\r\n    constructor(countId, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n    };\r\n};","import IngredientCategory from \"./IngredientCategory\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class Ingredient {\r\n    constructor(countId, id, name, imgLocation, avgkgPerUnit, avgLPerUnit, categories, unitTypes) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.ImageLocation = imgLocation ?? '';\r\n        this.AverageWeightInKgPerUnit = avgkgPerUnit ?? 0.00;\r\n        this.AverageVolumeInLiterPerUnit = avgLPerUnit ?? 0.00;\r\n        this.Categories = categories ?? [];\r\n        this.UnitTypes = unitTypes ?? [];\r\n    };\r\n\r\n    Categories = [new IngredientCategory()];\r\n    UnitTypes = [new UnitType()];\r\n};","import Ingredient from \"./Ingredient\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class RequirementsListIngredient {\r\n    constructor(countId, ingredient, units, unitType, recipe) {\r\n        this.CountId = countId ?? -1;\r\n        this.IngredientId = ingredient?.Id ?? '';\r\n        this.Ingredient = ingredient ?? new Ingredient();\r\n        this.Units = units ?? 0.00;\r\n        this.UnitTypeId = unitType?.CountId ?? -1;\r\n        this.UnitType = unitType ?? new UnitType();\r\n        this.RecipeId = recipe?.Id ?? '';\r\n        this.Recipe = recipe ?? null;\r\n    };\r\n\r\n    Ingredient = new Ingredient();\r\n    UnitType = new UnitType();\r\n};","import RecipeCategory from \"./RecipeCategory\"\r\nimport RequirementsListIngredient from \"./RequirementsListIngredient\"\r\nimport User from \"./User\"\r\n\r\nexport default class Recipe {\r\n    constructor(countId, id, name, description, imageLocation, isPublic, preparationSteps, videoTutorialLink, categories, requirementsList, user) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Description = description ?? '';\r\n        this.ImageLocation = imageLocation ?? '';\r\n        this.PreparationSteps = preparationSteps ?? '';\r\n        this.VideoTutorialLink = videoTutorialLink ?? '';\r\n        this.IsPublic = isPublic ?? true;\r\n        this.Categories = categories ?? [];\r\n        this.RequirementsList = requirementsList ?? [];\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user ?? new User();\r\n    };\r\n\r\n    Categories = [new RecipeCategory()];\r\n    RequirementsList = [new RequirementsListIngredient()];\r\n    User = new User();\r\n};","import Ingredient from \"./Ingredient\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class KitchenIngredient {\r\n    constructor(countId, ingredient, units, unitType, user) {\r\n        this.CountId = countId ?? -1;\r\n        this.Ingredient = ingredient ?? new Ingredient();\r\n        this.Units = units ?? 0.00;\r\n        this.UnitType = unitType ?? new UnitType();\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user;\r\n    };\r\n\r\n    Ingredient = new Ingredient();\r\n    UnitType = new UnitType();\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { Role, User } from \"../../models\";\r\n\r\nexport class CustomEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Custom\", \"\");\r\n    };\r\n\r\n    async Encrypt(text, salt) {\r\n        var res = await super.PerformCustom('post', this.ApiUrl + '/Encrypt', { Text: text, Salt: salt });\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data.Result;\r\n    };\r\n\r\n    async GetSalt() {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Encrypt/getsalt');\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data.Result;\r\n    };\r\n\r\n    async LogOut(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/logout?show', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async ValidateAccessToken(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/Validate', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async RefreshAccessToken(headers) {\r\n        var res = await super.PerformCustom('post', this.ApiUrl + '/Authorize/Refresh', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async GetUserByAccessToken(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/Me', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        const item = res.data;\r\n\r\n        return new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { Ingredient, IngredientCategory, Recipe, RecipeCategory, RequirementsListIngredient, UnitType, User, Role } from \"../../models\";\r\n\r\nexport class IngredientEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Ingredients\", \"Ingredients\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLiterPerUnit,\r\n                item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetWhatToBuy(userId, type = 'recipes' || 'ingredients') {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + `/whattobuy${type}/` + userId);\r\n\r\n        const fixedData = res.data && res.data !== \"Error\" && res.data.map ?\r\n            type === 'recipes' ?\r\n                res.data.map((item) => {\r\n                    return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                        item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                        item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                            new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                                requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                                requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                            requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                            new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                                requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                                null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                                    requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                                    requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                        )) : [],\r\n                        new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                            item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n                })\r\n                :\r\n                res.data.map(requirement => {\r\n                    return new RequirementsListIngredient(requirement.CountId,\r\n                        new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                            requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                            requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                        requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                        new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                            requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                            null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                                requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                                requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                    )\r\n                })\r\n            : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLiterPerUnit,\r\n            item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLiterPerUnit,\r\n            item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { Role, User, UserAction } from \"../../models\";\r\n\r\nexport class UserEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Users\", \"Users\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n                item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetActionsByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/' + id + \"/actions\");\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new UserAction(item.CountId,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []),\r\n                item.Endpoint, item.RequestType, item.Description, item.RefObject ? item.RefObject : { Id: item.RefObjectid, Name: item.RefObjectName }, item.ActionPerformedOnTable, item.Success );\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRolesByUserId(id) {\r\n        var data = await super.PerformCustom('get', this.ApiUrl + '/getroles/' + id);\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Role(item.CountId, item.Id, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { Role } from \"../../models\";\r\n\r\nexport class RoleEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Roles\", \"Roles\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Role(item.CountId, item.Id, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Role(item.CountId, item.Id, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Role(item.CountId, item.Id, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { Ingredient, IngredientCategory, Recipe, RecipeCategory, RequirementsListIngredient, UnitType, User, Role } from \"../../models\";\r\n\r\nexport class RecipeEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Recipes\", \"Recipes\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetPreparableForUser(userId) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/preparable/' + userId);\r\n\r\n        const fixedData = res.data && res.data !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetAllFromCook(userId) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/bycook/' + userId);\r\n\r\n        const fixedData = res.data && res.data !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n            item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n            item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                    requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                        requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                        requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n            )) : [],\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n            item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n            item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                    requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                        requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                        requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n            )) : [],\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { KitchenIngredient, Ingredient, IngredientCategory, UnitType, User, Role } from \"../../models\";\r\n\r\nexport class KitchenEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Kitchens\", \"Kitchens\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n            item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n            item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetKitchenByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byuserid/' + id);\r\n\r\n        const fixedData = res.data;\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetKitchenByUserName(name) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byusername/' + name);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { RequirementsListIngredient, Ingredient, IngredientCategory, Recipe, RecipeCategory, UnitType, User, Role } from \"../../models\";\r\n\r\nexport class RequirementsListEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"RequirementsLists\", \"RequirementsLists\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []))\r\n                )\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new RequirementsListIngredient(item.CountId,\r\n            new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n            item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n            new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                item.Recipe.Categories ? item.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                    item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                    item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : [])));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRequirementsListByRecipeId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byrecipeid/' + id);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []))\r\n                )\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRequirementsListByRecipeName(name) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byrecipename/' + name);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : [])));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { UnitType } from \"../../models\";\r\n\r\nexport class UnitTypeEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"UnitTypes\", \"UnitTypes\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { IngredientCategory } from \"../../models\";\r\n\r\nexport class IngredientCategoryEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"IngredientCategories\", \"IngredientCategories\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new IngredientCategory(item.CountId, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new IngredientCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new IngredientCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { IngredientCategory, RecipeCategory } from \"../../models\";\r\n\r\nexport class RecipeCategoryEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"RecipeCategories\", \"RecipeCategories\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new RecipeCategory(item.CountId, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new RecipeCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new RecipeCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};","import { EntityGroup } from \"./BaseEntityGroup\";\r\n\r\nimport { GroceryList, User, Role } from \"../../models\";\r\n\r\nexport class GroceryListEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"GroceryLists\", \"GroceryLists\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new GroceryList(item.CountId, item.Name, item.Value,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                    item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetAllByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byuserid/' + id);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new GroceryList(item.CountId, item.Name, item.Value,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                    item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new GroceryList(item.CountId, item.Name, item.Value,\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new GroceryList(item.CountId, item.Name, item.Value,\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n};","import {\r\n    CustomEntityGroup,\r\n    IngredientEntityGroup,\r\n    UserEntityGroup,\r\n    RoleEntityGroup,\r\n    RecipeEntityGroup,\r\n    KitchenEntityGroup,\r\n    RequirementsListEntityGroup,\r\n    UnitTypeEntityGroup,\r\n    IngredientCategoryEntityGroup,\r\n    RecipeCategoryEntityGroup,\r\n    GroceryListEntityGroup,\r\n    \r\n    protocol, serverIp, port, api_url,\r\n    AccessTokenHeaderName,\r\n} from \"./EntityGroups\";\r\n\r\nexport default class Api {\r\n    constructor() {\r\n        const authReturnUrlPath = '/returnAuthorization';\r\n\r\n        const authPage = \"/api/authorize/login\",\r\n            params = `?ReturnUrl=${window.location.protocol}//${window.location.hostname}:${window.location.port}${authReturnUrlPath}`;\r\n\r\n        this.AuthorizationPage = protocol + serverIp + \":\" + port + authPage + params;\r\n\r\n        this.AuthReturnUrlPath = authReturnUrlPath;\r\n\r\n        this.Url = api_url;\r\n        this.AccessTokenHeaderName = AccessTokenHeaderName;\r\n\r\n        this.Ingredients = new IngredientEntityGroup();\r\n        this.Users = new UserEntityGroup();\r\n        this.Roles = new RoleEntityGroup();\r\n        this.Recipes = new RecipeEntityGroup();\r\n        this.Kitchens = new KitchenEntityGroup();\r\n        this.RequirementsLists = new RequirementsListEntityGroup();\r\n        this.UnitTypes = new UnitTypeEntityGroup();\r\n        this.IngredientCategories = new IngredientCategoryEntityGroup();\r\n        this.RecipeCategories = new RecipeCategoryEntityGroup();\r\n        this.GroceryLists = new GroceryListEntityGroup();\r\n        this.Custom = new CustomEntityGroup();\r\n    };\r\n};","import React, { useContext } from \"react\";\r\nimport Api from \"../API/api\";\r\n\r\nconst ApiContext = React.createContext({});\r\n\r\nexport function ApiProvider({ children }) {\r\n    \r\n    const API = new Api();\r\n\r\n    var contextValue = {\r\n        Api: API,\r\n        Ingredients: API.Ingredients,\r\n        Users: API.Users,\r\n        Roles: API.Roles,\r\n        Recipes: API.Recipes,\r\n        Kitchens: API.Kitchens,\r\n        RequirementsLists: API.RequirementsLists,\r\n        UnitTypes: API.UnitTypes,\r\n        IngredientCategories: API.IngredientCategories,\r\n        RecipeCategories: API.RecipeCategories,\r\n        GroceryLists: API.GroceryLists,\r\n        Custom: API.Custom,\r\n    };\r\n\r\n    console.log(\"Loading API...\");\r\n\r\n    return (\r\n        <ApiContext.Provider value={contextValue}>\r\n            {children}\r\n        </ApiContext.Provider>\r\n    );\r\n};\r\n\r\nexport function useAPI() {\r\n    return useContext(ApiContext);\r\n};","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useAPI } from \"../API/api-context\";\r\n\r\nconst ACCOUNT_LS = \"recipefinder_account\";\r\n\r\nconst AccountContext = React.createContext({});\r\n\r\nexport function Authenticate({ children }) {\r\n\r\n    const { Api } = useAPI();\r\n\r\n    const [account, setAccount] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        async function checkLogin() {\r\n\r\n            function getTokens() {\r\n                function getParam(key) {\r\n                    const segments = window.location.search.substr(1).split('&');\r\n            \r\n                    var value;\r\n            \r\n                    segments.forEach((segment) => {\r\n                        var keyToValue = segment.split('=');\r\n            \r\n                        var param = { key: keyToValue[0], value: keyToValue[1] };\r\n            \r\n                        if (param.key === key) {\r\n                            value = param.value;\r\n                            return;\r\n                        }\r\n                    });\r\n            \r\n                    return value;\r\n                }\r\n            \r\n                var error;\r\n                if ((error = getParam(\"Error\")))\r\n                {\r\n                    console.log(error);\r\n\r\n                    setLoaded(true);\r\n                }\r\n                else\r\n                {\r\n                    var accessToken;\r\n                    var userId;\r\n                    if ((accessToken = getParam('Token')) && (userId = getParam('UserId'))) {\r\n                        setTokens(accessToken, userId);\r\n                    }\r\n                }\r\n            };\r\n        \r\n            function setTokens(accessToken, userId) {\r\n                if (account?.AccessToken === accessToken && account?.Id) {\r\n                    return;\r\n                }\r\n        \r\n                Api.Custom.GetUserByAccessToken({ [Api.AccessTokenHeaderName]: accessToken }).then((user) => {\r\n                    var acc = {\r\n                        ...account,\r\n                        Id: user.Id,\r\n                        Name: user.Name,\r\n                        Email: user.Email,\r\n                        Roles: user.Roles,\r\n                        AccessToken: accessToken,\r\n                    };\r\n            \r\n                    localStorage.setItem(ACCOUNT_LS, JSON.stringify(acc));\r\n                    setAccount(acc);\r\n                    \r\n                    setLoaded(true);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n        \r\n                    setLoaded(true);\r\n                });\r\n            };\r\n\r\n            var localAccStr = localStorage.getItem(ACCOUNT_LS);\r\n            var localAcc = {};\r\n\r\n            try\r\n            {\r\n                localAcc = JSON.parse(localAccStr);\r\n            }\r\n            catch (e)\r\n            {\r\n                console.log(e);\r\n            }\r\n\r\n            if (!account?.Id && localAcc) {\r\n                setAccount(localAcc);\r\n            }\r\n\r\n            if (window.location.pathname === '/returnAuthorization' && !(localAcc?.AccessToken && localAcc?.Id)) {\r\n                getTokens();\r\n\r\n                return;\r\n            }\r\n\r\n            if (!localAcc) {\r\n                console.log(\"No local account found.\");\r\n\r\n                setLoaded(true);\r\n\r\n            } else if (!localAcc.AccessToken || localAcc.AccessToken.length !== 45) {\r\n                console.log('User not authenticated.');\r\n\r\n                setLoaded(true);\r\n\r\n            } else {\r\n                const tokenValidation = await Api.Custom.ValidateAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                if (tokenValidation.Result === \"Success.\") {\r\n                    console.log(\"Token validated.\");\r\n\r\n                    if (account?.AccessToken !== localAcc.AccessToken) {\r\n                        var accWithUser = account;\r\n\r\n                        if (!(accWithUser?.Id)) {\r\n                            var user = await Api.Custom.GetUserByAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                            accWithUser = {\r\n                                ...accWithUser,\r\n                                Id: user.Id,\r\n                                Name: user.Name,\r\n                                Email: user.Email,\r\n                                Roles: user.Roles,\r\n                            };\r\n                        }\r\n\r\n                        var correctedAcc = {\r\n                            ...accWithUser,\r\n                            AccessToken: localAcc.AccessToken,\r\n                        }\r\n    \r\n                        localStorage.setItem(ACCOUNT_LS, JSON.stringify(correctedAcc));\r\n\r\n                        setAccount(correctedAcc);\r\n\r\n                        setLoaded(true);\r\n                    }\r\n\r\n                } else {\r\n                    if (window.location.pathname === '/returnAuthorization') {\r\n                        localStorage.removeItem(ACCOUNT_LS);\r\n\r\n                        getTokens();\r\n\r\n                        return;\r\n                    }\r\n\r\n                    console.log(\"Token invalid. Refreshing...\");\r\n\r\n                    const newToken = await Api.Custom.RefreshAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                    if (newToken !== \"Error\") {\r\n                        console.log(\"New token received.\");\r\n\r\n                        var refreshedAcc = {\r\n                            ...account,\r\n                            AccessToken: newToken.access_token,\r\n                        }\r\n\r\n                        localStorage.setItem(ACCOUNT_LS, JSON.stringify(refreshedAcc));\r\n                        setAccount(refreshedAcc);\r\n\r\n                        setLoaded(true);\r\n                    }\r\n                    else {\r\n                        localStorage.removeItem(ACCOUNT_LS);\r\n                        setAccount({});\r\n\r\n                        setLoaded(true);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        checkLogin();\r\n    }, [account, Api, loaded]);\r\n    \t\r\n    const logIn = (name, password) => {\r\n        \r\n    };\r\n\r\n    const logOut = () => {\r\n        Api.Custom.LogOut({ [Api.AccessTokenHeaderName]: account?.AccessToken });\r\n\r\n        localStorage.removeItem(ACCOUNT_LS);\r\n        setAccount({});\r\n    };\r\n\r\n    var contextValue = {\r\n        loaded: loaded,\r\n        registered: account?.Id && account?.AccessToken ? true : false,\r\n        roles: account?.Roles ? account.Roles : [],\r\n        accessToken: account?.AccessToken,\r\n        id: account?.Id,\r\n        name: account?.Name,\r\n        logIn,\r\n        logOut,\r\n    };\r\n\r\n    return (\r\n        <AccountContext.Provider value={contextValue}>\r\n            {children}\r\n        </AccountContext.Provider>\r\n    );\r\n};\r\n\r\nexport function useAccount() {\r\n    return useContext(AccountContext);\r\n};\r\n\r\n/*************************/\r\n/* Local Login Functions */\r\n/*************************/\r\nexport async function GetUserIdByName(name, UsersApi) {\r\n    if (!name && name.length < 1) { return; }\r\n\r\n    const user = await UsersApi.GetByName(name);\r\n\r\n    if (user) {\r\n        return user.Id;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport async function CreateAccount(username, email, password, updateByLogIn, api) {\r\n\r\n    const newUser = await createUserObject(api.Custom, username, email, password);\r\n\r\n    var res = await api.Users.Create(newUser);\r\n\r\n    if (res === 'Error') { return false; }\r\n\r\n    updateByLogIn(newUser);\r\n\r\n    return true;\r\n};\r\n\r\nasync function encryptSHA256(CustomApi, value = '', salt = '') {\r\n    try\r\n    {\r\n        return await CustomApi.Encrypt(value, salt);\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nasync function generateSalt(CustomApi) {\r\n    try\r\n    {\r\n        return await CustomApi.GetSalt();\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nasync function createUserObject(CustomApi, username = '', email = '', password) {\r\n    const salt = await generateSalt(CustomApi);\r\n\r\n    return {\r\n        CountId: 0,\r\n        Id: '',\r\n        Name: username,\r\n        Email: email,\r\n        EmailConfirmed: false,\r\n        EmailConfirmationToken: '',\r\n        PasswordHashed: await encryptSHA256(CustomApi, password, salt),\r\n        Salt: salt,\r\n        PhoneNumber: \"00 000 0000\",\r\n        PhoneNumberConfirmed: false,\r\n        DOB: new Date(),\r\n        CreationDate: new Date(),\r\n        NAME_NORMALIZED: username.toUpperCase(),\r\n        EMAIL_NORMALIZED: email.toUpperCase(),\r\n        SecurityStamp: '',\r\n        ConcurrencyStamp: '',\r\n        LockoutEnabled: false,\r\n        lockoutEnd: null,\r\n        AccessFailedCount: 0,\r\n        Kitchen: null,\r\n        Roles: ((await CustomApi.PerformCustom('get', CustomApi.ApiUrl + \"/Roles/byname/Default\"))?.data) ?? [],\r\n        Deleted: false,\r\n    };\r\n};","import React, { Fragment } from \"react\";\r\nimport { useAccount } from \"../API/index\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nexport const Loading = ({ children }) => {\r\n    const classes = useStyles();\r\n    \r\n    const { loaded: accountLoaded } = useAccount();\r\n\r\n    let loaded = accountLoaded;\r\n\r\n    if (!loaded) {\r\n        return (\r\n            <div className={classes.container}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <Fragment>{children}</Fragment>;\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function DrawerItem(props) {\r\n    return (\r\n        <ListItem button component={Link} to={props.link}>\r\n            <FontAwesomeIcon icon={props.icon} style={{ marginRight: '5px' }}/><ListItemText primary={props.text} onClick={props.onClick} />\r\n        </ListItem>\r\n    );\r\n};","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction Thumbnail({ source, size = 256 }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            style={{ border: 'solid 1px', width: ((size + 2) + \"px\").toString(), maxWidth: ((size + 2) + \"px\").toString(), height: ((size + 2) + \"px\").toString(), maxHeight: ((size + 2) + \"px\").toString() }}\r\n            className={classes.inputBox}\r\n        >\r\n            <img\r\n                alt=\"\"\r\n                src={source}\r\n                width={(size + \"px\").toString()}\r\n                height={(size + \"px\").toString()}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { Thumbnail };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\n\r\nimport { Thumbnail } from \"./Thumbnail\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction ImageInputComponent({ variant = \"outlined\", defaultValue, onChange, isAsync = false }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n            <Grid style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Grid item xs={9} style={{ marginRight: '5px', display: 'flex', justifyContent: 'center' }}>\r\n                    <TextField\r\n                        className={classes.inputBox}\r\n                        variant={variant}\r\n                        id=\"Image\"\r\n                        label=\"Image\"\r\n                        value={value}\r\n                        type=\"text\"\r\n                        onChange={isAsync ? async (e) => {\r\n                            setValue(e.target.value);\r\n                            await onChange(e.target.value);\r\n                        } : (e) => {\r\n                            setValue(e.target.value);\r\n                            onChange(e.target.value);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3} style={{ display: 'flex', justifyContent: 'center', verticalAlign: 'center' }}>\r\n                    <Thumbnail source={value} size={50}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { ImageInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserInputComponent({ name, variant = \"outlined\", type = 'text', inputProps, defaultValue, onChange, isAsync = false }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    if (type === 'number') {\r\n        if (inputProps.step && inputProps.step === 1.00 && value % 1 !== 0) {\r\n            var correction = parseInt((parseFloat(value) + 0.50).toString()).toString();\r\n            if (correction === 0) {\r\n                correction = 1;\r\n            }\r\n\r\n            setValue(correction);\r\n            onChange(correction);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <TextField\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={value}\r\n                type={type}\r\n                inputProps={inputProps}\r\n                onChange={isAsync ? async (e) => {\r\n                    setValue(e.target.value);\r\n                    await onChange(e.target.value);\r\n                } : (e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Select, MenuItem, InputLabel } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserMultiSelectInputComponent({ name, variant = \"outlined\", defaultValues = [], options, onChange }) {\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    if ((!values || values.length < 1) && (defaultValues && defaultValues.length > 0)) {\r\n        setValues(defaultValues);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    const overrideOnChange = (value) => {\r\n        setValues(value);\r\n        onChange(value);\r\n    };\r\n\r\n    return (\r\n        <Grid>\r\n            <InputLabel id={name}/>\r\n            <Select\r\n                multiple={true}\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={values}\r\n                onChange={(e) => {\r\n                    overrideOnChange(e.target.value);\r\n                }}\r\n            > \r\n            {\r\n                options.map(option =>\r\n                    <MenuItem key={name + \"-\" + option.name} id={name + \"-\" + option.name} value={option.value} selected={values.indexOf(option.value) > -1}>{option.name}</MenuItem>\r\n                )\r\n            }\r\n            </Select>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserMultiSelectInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserSelectInputComponent({ name, variant = \"outlined\", defaultValue = '', options, onChange }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Select\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n            > \r\n            {\r\n                options.map(option =>\r\n                    <MenuItem key={option.id ?? options.name + '-' + option.value} value={option.value} selected={option.value === defaultValue}>{option.name}</MenuItem>\r\n                )\r\n            }\r\n            </Select>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserSelectInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction PreparationStepsInputComponent({ name, defaultValue = '', onChange }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    const updateValue = (newValue, index) => {\r\n        var updatedValue = value.split('{NEXT}')\r\n            .map((step, i) => {\r\n                if (i === index) {\r\n                    return newValue;\r\n                }\r\n                else {\r\n                    return step;\r\n                }\r\n            })\r\n            .join('{NEXT}');\r\n\r\n        setValue(updatedValue);\r\n        onChange(updatedValue);\r\n    };\r\n\r\n    const addStep = (newStepIndex) => {\r\n        const steps = value.split('{NEXT}');\r\n\r\n        var updatedValue;\r\n\r\n        if (newStepIndex === steps.length) {\r\n            updatedValue = value + \"{NEXT}Next step\";\r\n        }\r\n        else {\r\n            updatedValue = steps\r\n                .map((step, i) => {\r\n                    if (i === newStepIndex) {\r\n                        return \"Next step{NEXT}\" + step;\r\n                    }\r\n                    else {\r\n                        return step;\r\n                    }\r\n                })\r\n                .join('{NEXT}');\r\n        }\r\n\r\n        setValue(updatedValue);\r\n        onChange(updatedValue);\r\n    };\r\n\r\n    const removeStep = (index) => {\r\n        var stepValue = value.split('{NEXT}')[index];\r\n\r\n        if (stepValue) {\r\n            if ((value.split(stepValue).length - 1) === 1) {\r\n                var updatedValue = value.replace(stepValue, '').replace('{NEXT}{NEXT}', '{NEXT}');\r\n\r\n                if (updatedValue.endsWith('{NEXT}')) {\r\n                    updatedValue = updatedValue.substring(0, updatedValue.length - (\"{NEXT}\".length));\r\n                }\r\n\r\n                setValue(updatedValue);\r\n                onChange(updatedValue);\r\n            } else {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                    onClick={() => { addStep(0); }}>Add Step here</Button>\r\n            </Grid>\r\n            {\r\n                value.split('{NEXT}').map((step, index) => {\r\n                    return (\r\n                        <Grid container direction=\"row\"  style={{ marginBottom: '15px', borderTop: 'solid 1px' }}>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                Step {index + 1}:\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px', paddingTop: '10px', paddingBottom: '10px', borderBottom: 'solid 1px' }}>\r\n                                <TextField\r\n                                    className={classes.inputBox}\r\n                                    variant=\"outlined\"\r\n                                    id={name + \"-\" + index}\r\n                                    label={name + \" \" + (index + 1)}\r\n                                    value={step}\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        updateValue(e.target.value, index);\r\n                                    }}\r\n                                />\r\n                                <Button variant=\"outlined\" style={{ color: 'red', marginLeft: '10px' }}\r\n                                    onClick={() => { removeStep(index); }}>Remove Step</Button>\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                                    onClick={() => { addStep(index + 1); }}>Add Step here</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { PreparationStepsInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TablePagination, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        marginBottom: theme.spacing(3),\r\n        minWidth: \"80%\",\r\n    },\r\n}));\r\n\r\nfunction EntityList({ rows, columns }) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer className={classes.tableContainer}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            style={{ minWidth: column.minWidth }}\r\n                        >\r\n                            {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id} onClick={row.onClick ? () => row.onClick(row.id) : () => {}}>\r\n                        {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                    {column.format ? (column.format(value)) ?? value : value}\r\n                                </TableCell>\r\n                            );\r\n                        })}\r\n                        </TableRow>\r\n                    );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { EntityList };","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Ingredient, IngredientCategory } from \"../../models\";\r\n\r\nfunction SelectIngredientComponent({ Api, ingredients, selectIngredient }) {\r\n    const [categories, setCategories] = useState([new IngredientCategory()]);\r\n    if (categories.length === 1 && categories[0].CountId === -1)\r\n    {\r\n        categories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [filterOptions, setFilterOptions] = useState({ name: '', categories: [] });\r\n\r\n    const filter = (ingredient = new Ingredient()) => {\r\n        return (\r\n            (filterOptions.name?.length > 0 ? ingredient.Name.toLowerCase().indexOf(filterOptions.name.toLowerCase()) > -1 : true) &&\r\n            (filterOptions.categories?.length > 0 ?\r\n                ingredient.Categories.filter(c => {\r\n                    return filterOptions.categories.filter(x => {\r\n                        return x === c.CountId;\r\n                    }).length > 0;\r\n                }).length > 0\r\n            : true)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container style={{ borderBottom: 'solid 1px', overflow: 'auto', paddingLeft: \"10px\" }}>\r\n                <Grid container direction=\"row\" style={{ marginBottom: '8px', display: 'flex', alignContent: 'center' }}><Typography variant=\"h5\">Filters</Typography></Grid>\r\n                <Grid container direction=\"column\" item xs={6} style={{ padding: '3px', display: 'flex', alignContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ marginRight: '5px', display: 'flex', alignContent: 'center' }}>Search:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center' }}>\r\n                        <UserInputComponent\r\n                            defaultValue={filterOptions.name}\r\n                            name=\"search by name\"\r\n                            onChange={(value) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ name: value } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"column\" item xs={6} style={{ padding: '3px', display: 'flex', alignContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ marginRight: '5px', display: 'flex', alignContent: 'center' }}>Categories:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center' }}>\r\n                        <UserMultiSelectInputComponent\r\n                            name=\"select categories\"\r\n                            defaultValue={filterOptions.categories}\r\n                            options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                            onChange={(values) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ categories: values } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ paddingLeft: \"10px\" }}>\r\n                <Typography variant=\"h3\">Select an ingredient</Typography>\r\n                <EntityList\r\n                    columns={[\r\n                        { id: 'image', label: '', minWidth: 50 },\r\n                        { id: 'name', label: 'Name', minWidth: 100 },\r\n                        { id: 'unitTypes', label: 'Available Types', minWidth: 125 },\r\n                        { id: 'categories', label: 'Categories', minWidth: 125 },\r\n                        { id: 'select', label: 'Choose', minWidth: 100 },\r\n                    ]}\r\n                    rows={ingredients.filter(i => filter(i)).map(ingredient => {\r\n                        return {\r\n                            id: ingredient.Id,\r\n                            image: <Thumbnail source={ingredient.ImageLocation} size={50} />,\r\n                            name: ingredient.Name,\r\n                            unitTypes: ingredient.UnitTypes.map((unitType, index) => { if (index > 0) return \", \" + unitType.Name; else return unitType.Name; }),\r\n                            categories: ingredient.Categories.map((category, index) => { if (index > 0) return \", \" + category.Name; else return category.Name; }),\r\n                            select: <Button onClick={() => selectIngredient(ingredient)} style={{ color: 'forestgreen' }}>Select</Button>,\r\n                            onClick: () => selectIngredient(ingredient)\r\n                        };\r\n                    })}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { SelectIngredientComponent };","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Button, Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\n\r\nimport { SelectIngredientComponent } from \"../Global/SelectIngredientComponent\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\n\r\nimport { Ingredient, RequirementsListIngredient, UnitType } from \"../../models\";\r\n\r\nfunction RequirementsInputComponent({ Api, defaultValues = [new RequirementsListIngredient()], parentRecipe, onChange }) {\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    if (!values && defaultValues) {\r\n        setValues(defaultValues);\r\n    }\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1)\r\n    {\r\n        ingredients?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((ingredients) => {\r\n            if (ingredients === \"Error\") { return; }\r\n        \r\n            setIngredients(ingredients);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1)\r\n    {\r\n        unitTypes?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((unitTypes) => {\r\n            if (unitTypes === \"Error\") { return; }\r\n        \r\n            setUnitTypes(unitTypes);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n    \r\n    const removeRequirement = (index) => {\r\n        setValues(values => { var vals = [...values]; vals.splice(index, 1); return vals; });\r\n\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects.pop();\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const addRequirement = () => {\r\n        setValues([...values, new RequirementsListIngredient(null, null, null, null, parentRecipe)]);\r\n\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects.push(false);\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const updateValue = (newValue, index, propName) => {\r\n        var updatedValues = [...values];\r\n\r\n        updatedValues[index][propName] = newValue;\r\n\r\n        setValues(updatedValues);\r\n        onChange(updatedValues);\r\n    };\r\n\r\n    const selectIngredient = (ingredient, index) => {\r\n        updateValue(ingredient, index, \"Ingredient\");\r\n        updateValue(ingredient.Id, index, \"IngredientId\");\r\n\r\n        closeIngredientSelect(index);\r\n    };\r\n\r\n    const openIngredientSelect = (index) => {\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects[index] = true;\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const closeIngredientSelect = (index) => {\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects[index] = false;\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const updateUnitType = (unitTypeId, index) => {\r\n        var unitType = unitTypes.find(u => u.CountId === unitTypeId);\r\n\r\n        updateValue(unitType, index, \"UnitType\");\r\n        updateValue(unitType.CountId, index, \"UnitTypeId\");\r\n    };\r\n\r\n    const [ingredientSelectsOpen, setIngredientSelectsOpen] = useState(defaultValues.map(val => false));\r\n\r\n    return (\r\n        <Grid>\r\n            {\r\n                values.map((requirement, index) => {\r\n                    const allowDecimals = ingredients.find(x => x.CountId === requirement.Ingredient?.CountId)?.UnitTypes.find(x => x.CountId === requirement.UnitType?.CountId)?.AllowDecimals ?? false;\r\n\r\n                    return (\r\n                        <Grid container direction=\"row\"  style={{ marginBottom: '15px', borderTop: 'solid 1px' }}>\r\n                            <Dialog open={ingredientSelectsOpen[index] ?? false} onClose={() => closeIngredientSelect(index)}>\r\n                                <DialogTitle>Ingredient</DialogTitle>\r\n                                <DialogContent>\r\n                                    <SelectIngredientComponent\r\n                                        Api={Api}\r\n                                        ingredients={ingredients.filter(i => values.filter(x => x.CountId === requirement.CountId).filter(x => x.Ingredient.CountId === i.CountId).length === 0)}\r\n                                        selectIngredient={(ingredient) => { selectIngredient(ingredient, index); }}\r\n                                    />\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                Requirement {index + 1}:\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                    <Button variant=\"outlined\" onClick={() => { openIngredientSelect(index); }}>{requirement.Ingredient?.Name.length > 0 ? requirement.Ingredient.Name : \"Choose Ingredient\"}</Button>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                    <UserInputComponent\r\n                                        name=\"Amount\"\r\n                                        defaultValue={requirement.Units}\r\n                                        inputProps={{ min: allowDecimals ? 0.01 : 1.00, max: 1000.00, step: allowDecimals ? 0.01 : 1.00 }}\r\n                                        type=\"number\"\r\n                                        onChange={(value) => {\r\n                                            updateValue(value, index, \"Units\");\r\n                                        }}\r\n                                    />\r\n                                    <UserSelectInputComponent\r\n                                        name=\"UnitTypes\"\r\n                                        defaultValue={requirement.UnitType.CountId}\r\n                                        options={requirement.Ingredient?.UnitTypes.map(unitType => { return { name: unitType.Name, value: unitType.CountId }; })}\r\n                                        onChange={(value) => {\r\n                                            updateUnitType(value, index);\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                                    <Button variant=\"outlined\" style={{ color: 'red', marginLeft: '10px' }}\r\n                                        onClick={() => { removeRequirement(index); }}>Remove Requirement</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                    onClick={() => { addRequirement(); }}>Add Requirement</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RequirementsInputComponent };","import { Button, Card, Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\n\r\nimport { ImageInputComponent } from \"../components/Global/ImageInputComponent\";\r\nimport { Thumbnail } from \"../components/Global/Thumbnail\";\r\nimport { UserInputComponent } from \"../components/Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../components/Global/UserMultiSelectInputComponent\";\r\nimport { UserSelectInputComponent } from \"../components/Global/UserSelectInputComponent\";\r\nimport { PreparationStepsInputComponent } from \"../components/RecipeBook/preparationStepsInputComponent\";\r\nimport { RequirementsInputComponent } from \"../components/RecipeBook/RequirementsInputComponent\";\r\n\r\n//import { Ingredient, IngredientCategory, Recipe, RecipeCategory, UnitType } from \"../models\";\r\n\r\nfunction CreateIngredientEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <ImageInputComponent\r\n                    defaultValue={item?.ImageLocation}\r\n                    onChange={(value) => { onItemEdited({ ImageLocation: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"UnitTypes\"\r\n                    defaultValues={item?.UnitTypes.map(unitType => unitType.CountId)}\r\n                    options={ApiTables.unitTypes.map(unitType => { return { name: unitType.Name, value: unitType.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ UnitTypes: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Weight /Unit (Kg)\"\r\n                    defaultValue={item?.AverageWeightInKgPerUnit}\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        step: 0.00,\r\n                        min: 0.01,\r\n                        max: 1000.00,\r\n                    }}\r\n                    onChange={(value) => { onItemEdited({ AverageWeightInKgPerUnit: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Volume /Unit (L)\"\r\n                    defaultValue={item?.AverageVolumeInLiterPerUnit}\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        step: 0.00,\r\n                        min: 0.01,\r\n                        max: 1000.00,\r\n                    }}\r\n                    onChange={(value) => { onItemEdited({ AverageVolumeInLiterPerUnit: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    defaultValues={item?.Categories.map(cat => cat.CountId)}\r\n                    options={ApiTables.ingredientCategories.map(cat => { return { name: cat.Name, value: cat.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ Categories: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateIngredientCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateUnitTypeEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserSelectInputComponent\r\n                    name=\"AllowDecimals\"\r\n                    defaultValue={item?.AllowDecimals}\r\n                    options={[{ name: 'Decimals', value: true }, { name: 'Integers', value: false }]}\r\n                    onChange={(value) => { onItemEdited({ AllowDecimals: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeEditPage(item, notEditableProps, ApiTables, onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen, preparationStepsCount = 0, requirementsCount = 0 }) {\r\n    \r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Dialog keepMounted open={preparationStepsOpen ?? false} onClose={() => setPreparationStepsOpen(false)}>\r\n                <DialogTitle>Preparation Steps</DialogTitle>\r\n                <DialogContent>\r\n                    <PreparationStepsInputComponent\r\n                        name=\"Preparation Step\"\r\n                        defaultValue={item?.PreparationSteps}\r\n                        onChange={(value) => { onItemEdited({ PreparationSteps: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog keepMounted open={requirementsListOpen ?? false} onClose={() => setRequirementsListOpen(false)}>\r\n                <DialogTitle>RequirementsList</DialogTitle>\r\n                <DialogContent>\r\n                    <RequirementsInputComponent\r\n                        Api={Api}\r\n                        defaultValues={item?.RequirementsList}\r\n                        parentRecipe={item}\r\n                        onChange={(value) => { onItemEdited({ RequirementsList: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Description\"\r\n                    defaultValue={item?.Description}\r\n                    onChange={(value) => { onItemEdited({ Description: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <ImageInputComponent\r\n                    defaultValue={item?.ImageLocation}\r\n                    onChange={(value) => { onItemEdited({ ImageLocation: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Tutorial Video\"\r\n                    defaultValue={item?.VideoTutorialLink}\r\n                    onChange={(value) => { onItemEdited({ VideoTutorialLink: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <Button variant=\"outlined\" onClick={() => setPreparationStepsOpen(true)}>\r\n                    {preparationStepsCount} Steps\r\n                </Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <Button variant=\"outlined\" onClick={() => setRequirementsListOpen(true)}>\r\n                    {requirementsCount} Requirements\r\n                </Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserSelectInputComponent\r\n                    Name={\"Public?\"}\r\n                    defaultValue={item?.IsPublic}\r\n                    options={[\r\n                        { name: \"Public\", value: true },\r\n                        { name: \"Private\", value: false },\r\n                    ]}\r\n                    onChange={(value) => { onItemEdited({ IsPublic: value }) }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    defaultValues={item?.Categories.map(cat => cat.CountId)}\r\n                    options={ApiTables.recipeCategories.map(cat => { return { name: cat.Name, value: cat.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ Categories: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateEditPage(item, tableName, notEditableProps, ApiTables, onItemEdited, Api, additionals) {\r\n    switch (tableName) {\r\n        case \"Ingredients\":\r\n            return CreateIngredientEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"IngredientCategories\":\r\n            return CreateIngredientCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"UnitTypes\":\r\n            return CreateUnitTypeEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"Recipes\":\r\n            return CreateRecipeEditPage(item, notEditableProps, ApiTables, onItemEdited, Api, additionals);\r\n\r\n        case \"RecipeCategories\":\r\n            return CreateRecipeCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        default:\r\n            return (\r\n                <></>\r\n            );\r\n    };\r\n};\r\n\r\nfunction CreateIngredientDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Image:\r\n                {\r\n                    item?.ImageLocation ?\r\n                        <Thumbnail source={item.ImageLocation} size={50} />\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                UnitTypes:\r\n                {\r\n                    item?.UnitTypes.map(unitType => <Card key={unitType.CountId} style={{ margin: '2px', padding: '3px' }}>{unitType.Name}</Card>)\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Average Weight per Unit: {item?.AverageWeightInKgPerUnit} Kg / Unit\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Average Volume per Unit: {item?.AverageVolumeInLiterPerUnit} L / Unit\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Categories:\r\n                {\r\n                    item?.Categories.map(cat => <Card key={cat.CountId} style={{ margin: '2px', padding: '3px' }}>{cat.Name}</Card>)\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateIngredientCategoryDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateUnitTypeDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Allow Decimals: {item?.AllowDecimals ? \"True\" : \"False\"}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeDetailsPage(item) {\r\n    \r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Description: {item?.Description}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Image:\r\n                {\r\n                    item?.ImageLocation ?\r\n                        <Thumbnail source={item.ImageLocation} size={50} />\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Tutorial Video: {item?.VideoTutorialLink ? <a href={item?.VideoTutorialLink}>Click here to watch</a> : \"Not set\"}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Preparation Steps:\r\n                {\r\n                    item?.PreparationSteps ?\r\n                    item.PreparationSteps.split('{NEXT}').map((step, index) =>\r\n                        <Card key={index} style={{ margin: '2px', padding: '3px' }}>\r\n                            Step {index}. {step}\r\n                        </Card>\r\n                    )\r\n                    : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Requirements:\r\n                {\r\n                    item?.RequirementsList ?\r\n                        item.RequirementsList.map((requirement, index) =>\r\n                            <Card key={requirement.CountId} style={{ margin: '2px', padding: '3px' }}>\r\n                                {requirement.Ingredient.Name} - {requirement.Units} {requirement.UnitType.Name}\r\n                            </Card>\r\n                        )\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Public: {item?.IsPublic ? \"Public\" : \"Private\"}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Categories:\r\n                {\r\n                    item?.Categories.map(cat => <Card key={cat.CountId} style={{ margin: '2px', padding: '3px' }}>{cat.Name}</Card>)\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeCategoryDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateDetailsPage(item, tableName) {\r\n    switch (tableName) {\r\n        case \"Ingredients\":\r\n            return CreateIngredientDetailsPage(item);\r\n\r\n        case \"IngredientCategories\":\r\n            return CreateIngredientCategoryDetailsPage(item);\r\n\r\n        case \"UnitTypes\":\r\n            return CreateUnitTypeDetailsPage(item);\r\n\r\n        case \"Recipes\":\r\n            return CreateRecipeDetailsPage(item);\r\n\r\n        case \"RecipeCategories\":\r\n            return CreateRecipeCategoryDetailsPage(item);\r\n\r\n        default:\r\n            return (\r\n                <></>\r\n            );\r\n    };\r\n};\r\n\r\nfunction generateCRUDInfo(tableName, displayName, notEditableProps, context) {\r\n    context[tableName] = {\r\n        DisplayName: displayName,\r\n        getEditPage: (item, ApiTables, onItemEdited, Api, additionals) => {\r\n            return (\r\n                <Grid container direction=\"row\">\r\n                    {\r\n                        CreateEditPage(item, tableName, notEditableProps, ApiTables, onItemEdited, Api, additionals)\r\n                    }\r\n                </Grid>\r\n            );\r\n        },\r\n        getDetailsPage: (item, ApiTables, onItemEdited, Api, additionals) => {\r\n            return (\r\n                <Grid container direction=\"row\">\r\n                    {\r\n                        CreateDetailsPage(item, tableName)\r\n                    }\r\n                </Grid>\r\n            );\r\n        },\r\n    };\r\n};\r\n\r\nclass CRUDPagesInformation {\r\n    constructor() {\r\n        this.Pages = {};\r\n\r\n        generateCRUDInfo('Ingredients', 'Ingredients', [\"CountId\", \"Id\"], this.Pages);\r\n\r\n        generateCRUDInfo('IngredientCategories', 'Ingredient Categories', [\"CountId\"], this.Pages);\r\n\r\n        generateCRUDInfo('UnitTypes', 'Unit Types',[\"CountId\"], this.Pages);\r\n\r\n        generateCRUDInfo('Recipes', 'Recipes', [\"CountId\", \"Id\", \"User\", \"UserId\"], this.Pages);\r\n\r\n        generateCRUDInfo('RecipeCategories', 'Recipe Categories', [\"CountId\"], this.Pages);\r\n    };\r\n\r\n    Pages = {};\r\n};\r\n\r\nconst CRUDPagesInfo = new CRUDPagesInformation();\r\n\r\nexport default CRUDPagesInfo;","import React from \"react\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Typography, Drawer, IconButton, Divider, List } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nimport { faBook, faBookOpen, faHome, faListAlt, faMortarPestle, faUsers, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport DrawerItem from \"./DrawerItem\";\r\n\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerheader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        backgroundColor: '#ffbb00',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    chevron: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nfunction AppDrawer({ open, onOpen, isAdmin, isCreator, isCook }) {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerheader}>\r\n                <Typography variant=\"h5\" noWrap style={{ marginLeft: \"8px\" }}>\r\n                    Recipe Finder\r\n                </Typography>\r\n                <div className={classes.chevron}>\r\n                    <IconButton onClick={() => onOpen(false)}>\r\n                        {\r\n                            theme.direction === \"itr\" ? (\r\n                                <ChevronLeftIcon />\r\n                            ) : (\r\n                                <ChevronRightIcon />\r\n                            )\r\n                        }\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                <div>\r\n                    <i style={{ marginLeft: '10px' }}>Pages</i>\r\n                    <DrawerItem icon={faHome} link=\"/home/index\" text=\"Home\" />\r\n                    <DrawerItem icon={faUtensils} link=\"/kitchen/index\" text=\"Your Kitchen\" />\r\n                    <DrawerItem icon={faBookOpen} link=\"/recipebook/index\" text=\"Recipe Book\" />\r\n                    <DrawerItem icon={faListAlt} link=\"/grocerylists/index\" text=\"Grocery Lists\" />\r\n                </div>\r\n            </List>\r\n            {\r\n                isCook ? (\r\n                    <>\r\n                        <Divider />\r\n                        <List>\r\n                            <i style={{ marginLeft: '10px' }}>Cook</i>\r\n                            <DrawerItem icon={faMortarPestle} link=\"/recipebook/custom/index\" text=\"Your Recipes\" />\r\n                        </List>\r\n                    </>\r\n                ) : (\r\n                    <></>\r\n                )\r\n            }\r\n            {\r\n                isCreator ? (\r\n                    <>\r\n                        <Divider />\r\n                        <List>\r\n                        <i style={{ marginLeft: '10px' }}>Creator</i>\r\n                            {\r\n                                Object.keys(CRUDPagesInfo.Pages).map((CRUD, index) => {\r\n                                    return (\r\n                                        <DrawerItem icon={faBook} key={`${CRUD}-${index}`} link={`/${CRUD}/index`} text={CRUDPagesInfo.Pages[CRUD].DisplayName} />\r\n                                    );\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </>\r\n                ) : (\r\n                    <></>\r\n                )\r\n            }\r\n            {\r\n                isAdmin ? (\r\n                    <>\r\n                        <Divider />\r\n                        <List>\r\n                            <i style={{ marginLeft: '10px' }}>Admin</i>\r\n                            <DrawerItem icon={faUsers} link=\"/accounts/index\" text=\"Accounts\" />\r\n                        </List>\r\n                    </>\r\n                ) : (\r\n                    <></>\r\n                )\r\n            }\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport { AppDrawer, drawerWidth };","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBookOpen, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction HomePage({ setTitle, name, userId }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Home\");\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.form} style={{ height: window.innerHeight * 0.6 }}>\r\n            <Typography className={classes.txt} variant=\"h1\">\r\n                Hello {name}!\r\n            </Typography>\r\n            <Link to=\"/kitchen/index\" style={{ width: '100%', height: '50%', margin: '.5rem', textDecoration: 'none' }}>\r\n                <Button style={{ backgroundColor: 'skyblue', marginBottom: '10px', width: \"100%\", height: \"100%\", fontSize: 25 }}><FontAwesomeIcon icon={faUtensils} style={{ marginRight: '5px' }}/>Your Kitchen</Button>\r\n            </Link>\r\n            <Link to=\"/recipebook/index\" style={{ width: '100%', height: '50%', margin: '.5rem', textDecoration: 'none' }}>\r\n                <Button style={{ backgroundColor: 'forestgreen', marginBottom: '10px', width: \"100%\", height: \"100%\", fontSize: 25 }}><FontAwesomeIcon icon={faBookOpen} style={{ marginRight: '5px' }}/>Recipe Book</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { HomePage };","import React from 'react';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    rowActionsContainer: {\r\n\r\n    }\r\n}));\r\n\r\nfunction RowActions({ rowEntityId, rowEntity, onDetails, onEdit, onRemove })\r\n{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.rowActionsContainer}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                {onDetails ? <Button id={rowEntityId} onClick={(e) => onDetails(rowEntityId)} style={{ color: 'skyblue' }}><FontAwesomeIcon icon={faEye} /></Button> : ''}\r\n                {onEdit ? <Button id={rowEntityId} onClick={(e) => onEdit(rowEntityId)} style={{ color: 'gold' }}><FontAwesomeIcon icon={faPen} /></Button> : ''}\r\n                {onRemove ? <Button id={rowEntityId} onClick={(e) => onRemove(rowEntityId)} style={{ color: 'red' }}><FontAwesomeIcon icon={faTrash} /></Button> : ''}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RowActions };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Dialog, DialogContent, DialogTitle, Grid, Button } from \"@material-ui/core\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { KitchenIngredient } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction KitchenHomePage({ setTitle, userId, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Kitchen\");\r\n    });\r\n    \r\n    const [kitchen, setKitchen] = useState({\r\n        UserId: '',\r\n        User: '',\r\n        Ingredients: [new KitchenIngredient()],\r\n    });\r\n    if (kitchen?.Ingredients.length === 1 && kitchen.Ingredients[0].Units === 0.00)\r\n    {\r\n        kitchen.Ingredients.pop();\r\n    }\r\n\r\n    const [editItem, setEditItem] = useState({ item: {}, dialogOpened: false });\r\n    const [removeItem, setRemoveItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const [updates, setUpdates] = useState({});\r\n    const [unitTypeChanges, setUnitTypeChanges] = useState(0);\r\n    if (!updates && unitTypeChanges) {\r\n        setUpdates({});\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        Api.Kitchens.GetKitchenByUserId(userId).then((kitchen) => {\r\n            if (kitchen === \"Error\") { return; }\r\n        \r\n            setKitchen(kitchen);\r\n        });\r\n    }, [Api.Kitchens, userId]);\r\n\r\n    const onEdit = async (id) => {\r\n        if (!updates[id]) return;\r\n\r\n        \r\n\r\n        await Api.Kitchens.Update(updates[id].CountId, updates[id]);\r\n    };\r\n\r\n    const onUnitsEdited = (id, newUnits) => {\r\n        if (!updates[id]) updates[id] = kitchen.Ingredients.find(x => x.IngredientId === id);\r\n\r\n        updates[id].Units = parseFloat(newUnits);\r\n\r\n        setUpdates(updates => updates);\r\n    };\r\n\r\n    const onUnitTypeEdited = (id, newUnitType) => {\r\n        if (!updates[id]) updates[id] = kitchen.Ingredients.find(x => x.IngredientId === id);\r\n\r\n        updates[id].UnitTypeId = parseInt(newUnitType);\r\n\r\n        setUpdates(x => updates);\r\n\r\n        setUnitTypeChanges(unitTypeChanges => unitTypeChanges + 1);\r\n    };\r\n\r\n    const onRemove = (id) => {\r\n        var ingredient = kitchen.Ingredients.find(x => x.Ingredient.Id === id);\r\n\r\n        var updatedKitchen = [...kitchen.Ingredients];\r\n        updatedKitchen.splice(kitchen.Ingredients.indexOf(ingredient), 1);\r\n\r\n        setKitchen({ ...kitchen, Ingredients: updatedKitchen });\r\n\r\n        Api.Kitchens.Delete(kitchen.UserId + \"/\" + ingredient.IngredientId, ingredient);\r\n    };\r\n\r\n    const closeEditDialog = () => {\r\n        setEditItem({ ...removeItem, dialogOpened: false });\r\n    };\r\n\r\n    const closeRemoveDialog = () => {\r\n        setRemoveItem({ ...removeItem, dialogOpened: false });\r\n    };\r\n\r\n    return (\r\n        <Grid className={classes.form}>\r\n            <Dialog open={removeItem.dialogOpened} onClose={closeRemoveDialog}>\r\n                <DialogTitle>Remove {removeItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove this ingredient?\r\n                    <Button id={removeItem.item.IngredientId} style={{ backgroundColor: 'red', marginRight: '5px' }} onClick={async (e) => await onRemove(removeItem.item.IngredientId)}>Remove</Button>\r\n                    <Button style={{ backgroundColor: 'forestgreen' }} onClick={closeRemoveDialog}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog open={editItem.dialogOpened} onClose={closeEditDialog}>\r\n                <DialogTitle>Edit {editItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    <UserInputComponent onChange={(value) => onUnitsEdited(editItem.item.IngredientId, value)} name=\"Units\" defaultValue={editItem.item.Units}\r\n                        type=\"number\" inputProps={{ min: editItem.allowDecimals ? 0.01 : 1.00, max: 1000.00, step: editItem.allowDecimals ? 0.01 : 1.00 }} />\r\n                    <UserSelectInputComponent onChange={(value) => onUnitTypeEdited(editItem.item.IngredientId, value)} name=\"Unit Type\" defaultValue={editItem.item.UnitType?.CountId} type=\"number\"\r\n                        options={editItem.item.Ingredient?.UnitTypes.map(unitType => { return { id: unitType.CountId, name: unitType.Name, value: unitType.CountId } }) ?? []} />\r\n                    <Button id={editItem.item.IngredientId} style={{ backgroundColor: 'forestgreen', marginRight: '5px' }} onClick={async (e) => await onEdit(editItem.item.IngredientId)}>Save</Button>\r\n                    <Button style={{ backgroundColor: 'gold' }} onClick={closeEditDialog}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Typography className={classes.txt} variant=\"h3\">\r\n                {kitchen?.User.Name}'s Kitchen\r\n            </Typography>\r\n\r\n            {!kitchen || kitchen.Ingredients.length < 1 ?\r\n                \"No ingredients in your kitchen.\" :\r\n                <EntityList\r\n                    columns={[\r\n                        { id: 'image', label: '', minWidth: 50 },\r\n                        { id: 'name', label: 'Name', minWidth: 150 },\r\n                        { id: 'units', label: 'Amount', minWidth: 100 },\r\n                        { id: 'actions', label: 'Actions', minWidth: 200 },\r\n                    ]}\r\n                    rows={kitchen?.Ingredients.map(ingredient => {\r\n                        const updatedUnitType = ingredient.Ingredient.UnitTypes.find(x => x.CountId === updates[ingredient.IngredientId]?.UnitTypeId);\r\n\r\n                        const allowDecimals = updatedUnitType ? updatedUnitType.AllowDecimals : ingredient.UnitType.AllowDecimals;\r\n\r\n                        return {\r\n                            id: ingredient.IngredientId,\r\n                            image: <Thumbnail source={ingredient.Ingredient.ImageLocation} size=\"50px\" />,\r\n                            name: ingredient.Ingredient.Name,\r\n                            units: ingredient.Units + \" \" + ingredient.UnitType.Name,\r\n                            actions: <RowActions rowEntity={ingredient} rowEntityId={ingredient.IngredientId}\r\n                                onEdit={() => setEditItem({ item: ingredient, allowDecimals: allowDecimals, dialogOpened: true })}\r\n                                onRemove={() => setRemoveItem({ item: ingredient, dialogOpened: true })} />,\r\n                        }\r\n                    }) ?? []}\r\n                />\r\n            }\r\n            <Grid style={{ marginRight: '5px', marginBottom: '20px' }}>\r\n                <Link to=\"/kitchen/add\">\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faPlus} /> Add Ingredients</Button>\r\n                </Link>\r\n            </Grid>\r\n            <Grid style={{ marginRight: '5px' }}>\r\n                <Link to=\"/kitchen/whattobuy\">\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faPlus} /> What to Buy</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { KitchenHomePage };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Grid, Button, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faBackward, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\nimport { SelectIngredientComponent } from \"../Global/SelectIngredientComponent\";\r\n\r\nimport { Ingredient } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ingredientSelectContainer: {\r\n\r\n    },\r\n    ingredientSelectedContainer: {\r\n\r\n    }\r\n}));\r\n\r\nfunction AddIngredients({ setTitle, userId, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Add Ingredients\");\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const [unitTypeChanges, setUnitTypeChanges] = useState(0);\r\n    const [selectedIngredient, setSelectedIngredient] = useState({});\r\n    const [saveIngredient, setSaveIngredient] = useState({\r\n        UserId: userId,\r\n        IngredientId: '',\r\n        Units: 0.0,\r\n        UnitTypeId: 1,\r\n    });\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1 && unitTypeChanges)\r\n    {\r\n        ingredients?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((ingredients) => {\r\n            if (ingredients === \"Error\") { return; }\r\n        \r\n            setIngredients(ingredients);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const selectIngredient = (ingredient) => {\r\n        setSelectedIngredient(ingredient);\r\n\r\n        saveIngredient.IngredientId = ingredient.Id;\r\n        saveIngredient.UnitTypeId = ingredient.UnitTypes[0].CountId;\r\n        saveIngredient.Units = 1.00;\r\n        setSaveIngredient(saveIngredient);\r\n    };\r\n\r\n    const SaveIngredient = () => {\r\n        if (saveIngredient.IngredientId && saveIngredient.UserId &&\r\n            saveIngredient.Units && saveIngredient.UnitTypeId) {\r\n            \r\n            Api.Kitchens.Create(saveIngredient);\r\n        }\r\n    };\r\n\r\n    const allowDecimals = ingredients.find(x => x.Id === selectedIngredient.Id)?.UnitTypes.find(x => x.CountId === saveIngredient.UnitTypeId)?.AllowDecimals;\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n        >\r\n            <Grid container style={{ width: '100%', marginBottom: '10px', padding: '5px' }}>\r\n                <Grid\r\n                    container\r\n                    item\r\n                    direction=\"column\"\r\n                    className={classes.ingredientSelectedContainer}\r\n                    style={{ display: 'inline-block', verticalAlign: 'top', width: '50%', height: window.innerHeight * 0.8 }}\r\n                    xs={6}\r\n                >\r\n                    {selectedIngredient && selectedIngredient.Id ?\r\n                        <>\r\n                            <Grid container direction=\"row\" style={{ marginTop: '10%' }}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid>\r\n                                        <Thumbnail source={selectedIngredient.ImageLocation} size={50} />\r\n                                    </Grid>\r\n                                    <Grid style={{ marginLeft: '5px' }}>\r\n                                        <Typography variant=\"h5\">{selectedIngredient.Name}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid>\r\n                                        <UserInputComponent type=\"number\" name=\"Amount\" defaultValue={1.0} inputProps={{ min: allowDecimals ? 0.01 : 1.00, max: 1000.00, step: allowDecimals ? 0.01 : 1.00 }}\r\n                                            onChange={(value) => { saveIngredient.Units = parseFloat(value); setSaveIngredient(saveIngredient); }} />\r\n                                    </Grid>\r\n                                    <Grid style={{ marginLeft: '5px' }}>\r\n                                        <UserSelectInputComponent name=\"Unit Type\" options={selectedIngredient.UnitTypes.map(unitType => { return { value: unitType.CountId, name: unitType.Name }; })}\r\n                                            onChange={(value) => { saveIngredient.UnitTypeId = parseInt(value); setSaveIngredient(saveIngredient); setUnitTypeChanges(unitTypeChanges => unitTypeChanges + 1); }} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button onClick={SaveIngredient} variant=\"outlined\" style={{ marginTop: \"20px\", color: 'green' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add Ingredient</Button>\r\n                        </>\r\n                        :\r\n                        <Typography variant=\"h5\">Select an ingredient on the right. <FontAwesomeIcon icon={faArrowRight}/></Typography>\r\n                    }\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    item\r\n                    direction=\"column\"\r\n                    className={classes.ingredientSelectContainer}\r\n                    style={{ borderLeft: \"solid 1px\", display: 'inline-block', height: window.innerHeight * 0.8 }}\r\n                    xs={6}\r\n                >\r\n                    <SelectIngredientComponent\r\n                        Api={Api}\r\n                        ingredients={ingredients}\r\n                        selectIngredient={selectIngredient}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/kitchen/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Kitchen</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { AddIngredients };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { Card, Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Recipe, RecipeCategory, RequirementsListIngredient } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction WhatToBuyPage({ setTitle, userId, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"What to Buy\");\r\n    });\r\n\r\n    const [listState, setListState] = useState(1);\r\n    \r\n    const [items, setItems] = useState([listState === 1 ? new Recipe() : new RequirementsListIngredient()]);\r\n    if (items.length === 1 && items[0].CountId === -1)\r\n    {\r\n        items.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetWhatToBuy(userId, (listState === 1 ? 'recipes' : 'ingredients')).then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setItems(items);\r\n        });\r\n    }, [Api.Ingredients, userId, listState]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const [selectedIngredient, setSelectedIngredient] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n    if (categories.length === 1 && categories[0].CountId === -1)\r\n    {\r\n        categories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api[`${listState === 1 ? 'Recipe' : 'Ingredient'}Categories`].GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api, listState]);\r\n\r\n    const [filterOptions, setFilterOptions] = useState({ name: '', categories: [] });\r\n\r\n    const filter = (recipe = listState === 1 ? new Recipe() : new RequirementsListIngredient()) => {\r\n        return (\r\n            (filterOptions.name?.length > 0 ? recipe.Name.toLowerCase().indexOf(filterOptions.name.toLowerCase()) > -1 : true) &&\r\n            (filterOptions.categories?.length > 0 ?\r\n                recipe.Categories.filter(c => {\r\n                    return filterOptions.categories.filter(x => {\r\n                        return x === c.CountId;\r\n                    }).length > 0;\r\n                }).length > 0\r\n            : true)\r\n        );\r\n    };\r\n\r\n    const addIngredients = (toAddIngredients) => {\r\n        toAddIngredients.forEach(ingredient => {\r\n            addIngredient(ingredient);\r\n        });\r\n\r\n        closeItemDialog();\r\n    };\r\n\r\n    const addIngredient = (toAddIngredient) => {\r\n        setSelectedIngredient(selectedIngredient => { selectedIngredient.dialogOpened = false; return selectedIngredient });\r\n\r\n        closeIngredientDialog();\r\n    };\r\n\r\n    const closeItemDialog = () => {\r\n        setSelectedItem({ ...selectedItem, dialogOpened: false });\r\n    };\r\n\r\n    const closeIngredientDialog = () => {\r\n        setSelectedIngredient({ ...selectedIngredient, dialogOpened: false });\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n        >\r\n            <Dialog open={selectedItem.dialogOpened} onClose={closeItemDialog}>\r\n                <DialogTitle>Missing ingredients for {selectedItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Your kitchen is missing the following ingredients to prepare {selectedItem.item.Name}:<br />\r\n                    <Grid>\r\n                        <EntityList\r\n                            columns={[\r\n                                { id: 'img', label: '', minWidth: 100 },\r\n                                { id: 'name', label: 'Name', minWidth: 100 },\r\n                                { id: 'category', label: 'Categories', minWidth: 150 },\r\n                                { id: 'amount', label: 'Amount', minWidth: 50 },\r\n                            ]}\r\n                            rows={selectedItem.item.RequirementsList?.map(ingredient => {\r\n                                return {\r\n                                    img: <Thumbnail source={ingredient.Ingredient.ImageLocation} size={50} />,\r\n                                    name: ingredient.Ingredient.Name,\r\n                                    category: ingredient.Ingredient.Categories.map(category => <Card>{category.Name}</Card>),\r\n                                    amount: `${ingredient.Units} ${ingredient.UnitType.Name}`,\r\n                                    onClick: () => { setSelectedIngredient({ item: ingredient, dialogOpened: true }) },\r\n                                };\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Button onClick={() => addIngredients(selectedItem.item.RequirementsList)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem', marginRight: '20px' }}>\r\n                        <FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} />Add All\r\n                    </Button>\r\n                    <Button onClick={closeItemDialog} style={{ backgroundColor: 'red', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog open={selectedIngredient.dialogOpened} onClose={closeIngredientDialog}>\r\n                <DialogTitle>\r\n                    Missing: {selectedIngredient.item.Ingredient?.Name}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid>\r\n                        <Grid>\r\n                            Ingredient: {selectedIngredient.item.Ingredient?.Name}\r\n                        </Grid>\r\n                        <Grid>\r\n                            Amount: {selectedIngredient.item.Units} {selectedIngredient.item.UnitType?.Name}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button onClick={() => addIngredient(selectedIngredient.item)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem', marginRight: '20px' }}>\r\n                        <FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} />Add\r\n                    </Button>\r\n                    <Button onClick={closeIngredientDialog} style={{ backgroundColor: 'red', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid item xs={7}>\r\n                <Typography className={classes.txt} variant=\"h3\">\r\n                    What to Buy\r\n                </Typography>\r\n\r\n                {items.length < 1 ?\r\n                    \"Nothing found missing in your kitchen.\" :\r\n                    <EntityList\r\n                        columns={(() => {\r\n                            var columns = [\r\n                                { id: 'image', label: '', minWidth: 50 },\r\n                                { id: 'name', label: 'Name', minWidth: 150 },\r\n                                { id: 'category', label: 'Category', minWidth: 100 },\r\n                                { id: 'amount', label: 'Amount', minWidth: 50 },\r\n                            ];\r\n\r\n                            return columns;\r\n                        })()}\r\n                        rows={items.filter(r => filter(r)).map(item => {\r\n                            var row = {\r\n                                id: item.Id ?? item.IngredientId,\r\n                                image: <Thumbnail source={item.ImageLocation ?? item.Ingredient.ImageLocation} size={50} />,\r\n                                name: item.Name ?? item.Ingredient.Name,\r\n                                category: item.Categories ? item.Categories.map(category => <Card>{category.Name}</Card>)\r\n                                    : item.Ingredient.Categories.map(category => <Card>{category.Name}</Card>),\r\n                                amount: item.RequirementsList?.length ? (item.RequirementsList?.length + ' ingredients') : (item.Units + ' ' + item.UnitType.Name),\r\n                                onClick: () => listState === 1 ? setSelectedItem({ item: item, dialogOpened: true }) : setSelectedIngredient({ item: item, dialogOpened: true }),\r\n                            };\r\n\r\n                            return row;\r\n                        })}\r\n                    />\r\n                }\r\n            </Grid>\r\n            <Grid item xs={4} style={{ borderLeft: 'solid 1px', marginLeft: '5px', padding: '5px', overflow: 'auto' }}>\r\n                <Grid container direction=\"row\" style={{ marginBottom: '8px', display: 'flex', alignContent: 'center' }}><Typography variant=\"h5\">Filters</Typography></Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center', marginBottom: '2px' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Showing:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={() => setListState(recipeListState => recipeListState === 1 ? 0 : 1)}\r\n                            style={{ width: '80%', backgroundColor: listState === 1 ? \"#ffbb00\" : \"green\" }}>\r\n                            {listState === 1 ? \"Recipes\" : \"Ingredients\"}\r\n                            <FontAwesomeIcon icon={faSync} style={{ marginLeft: '5px' }} />\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <UserInputComponent\r\n                        defaultValue={filterOptions.name}\r\n                        name=\"search by name\"\r\n                        onChange={(value) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ name: value } }; })}\r\n                    />\r\n                </Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Categories:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <UserMultiSelectInputComponent\r\n                            name=\"select categories\"\r\n                            defaultValue={filterOptions.categories}\r\n                            options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                            onChange={(values) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ categories: values } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/kitchen/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Kitchen</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { WhatToBuyPage };","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Dialog, DialogContent, DialogTitle, Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCross, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction RecipeBookHomePage({ setTitle, isCook, userId, Api, defaultRecipeListState = 1 }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"RecipeBook\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [recipeListState, setRecipeListState] = useState(defaultRecipeListState);\r\n    \r\n    const [recipes, setRecipes] = useState([new Recipe()]);\r\n    if (recipes.length === 1 && recipes[0].CountId === -1)\r\n    {\r\n        recipes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        (recipeListState === 0 ? Api.Recipes.GetAllFromCook(userId) :\r\n        recipeListState === 1 ? Api.Recipes.GetPreparableForUser(userId) :\r\n        Api.Recipes.GetAll()).then((recipes) => {\r\n            if (recipes === \"Error\") { return; }\r\n        \r\n            setRecipes(recipes);\r\n        });\r\n    }, [Api.Recipes, userId, recipeListState]);\r\n\r\n    const onDetails = (recipeId) => {\r\n        history.push('/recipebook/details/' + recipeId);\r\n    };\r\n\r\n    const onEdit = (recipeId) => {\r\n        history.push('/recipebook/custom/edit/' + recipeId);\r\n    };\r\n\r\n    const [removeItem, setRemoveItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const ToggleRemove = (recipeId) => {\r\n        const item = recipes.find(x => x.CountId === recipeId);\r\n\r\n        if (item) {\r\n            setRemoveItem({ item: item, dialogOpened: !removeItem.dialogOpened });\r\n        }\r\n        else {\r\n            console.log(`No item found with key '${recipeId}'!`);\r\n        }\r\n    };\r\n\r\n    const onRemove = (recipeId) => {\r\n        Api.Recipes.Delete(recipeId);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n    if (categories.length === 1 && categories[0].CountId === -1)\r\n    {\r\n        categories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const [filterOptions, setFilterOptions] = useState({ name: '', categories: [] });\r\n\r\n    const filter = (recipe = new Recipe()) => {\r\n        return (\r\n            (filterOptions.name?.length > 0 ? recipe.Name.toLowerCase().indexOf(filterOptions.name.toLowerCase()) > -1 : true) &&\r\n            (filterOptions.categories?.length > 0 ?\r\n                recipe.Categories.filter(c => {\r\n                    return filterOptions.categories.filter(x => {\r\n                        return x === c.CountId;\r\n                    }).length > 0;\r\n                }).length > 0\r\n            : true)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n        >\r\n            <Dialog open={removeItem.dialogOpened} onClose={() => setRemoveItem(removeItem => { removeItem.dialogOpened = false; return removeItem })}>\r\n                <DialogTitle>Remove item {removeItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove this recipe: {removeItem.item.Name} ?<br />\r\n                    <Button onClick={() => onRemove(removeItem.item.CountId)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faCross} style={{ marginRight: '5px' }}/> Remove</Button>\r\n                    <Button onClick={() => ToggleRemove(removeItem.item.CountId)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid item xs={7}>\r\n                <Typography className={classes.txt} variant=\"h3\">\r\n                    {recipeListState === 0 ? \"Custom\" : recipeListState === 1 ? \"Preparable\" : \"Full\"} Recipe Book\r\n                </Typography>\r\n\r\n                {\r\n                    isCook && recipeListState === 0 ?\r\n                        <Grid>\r\n                            <Link to={\"/recipebook/custom/create\"}>\r\n                                <Button variant=\"outlined\" style={{ marginTop: \"20px\", color: 'green' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add Custom Recipe</Button>\r\n                            </Link>\r\n                        </Grid>\r\n                        : <></>\r\n                }\r\n                {recipes.length < 1 ?\r\n                    \"No recipes found.\" :\r\n                    <EntityList\r\n                        columns={(() => {\r\n                            var columns = [\r\n                                { id: 'image', label: '', minWidth: 50 },\r\n                                { id: 'name', label: 'Name', minWidth: 150 },\r\n                                { id: 'category', label: 'Category', minWidth: 100 },\r\n                                { id: 'actions', label: 'Actions', minWidth: 200 },\r\n                            ];\r\n\r\n                            if (isCook && recipeListState === 0) {\r\n                                columns.push({ id: 'public', label: 'Public', minWidth: 50 });\r\n                            }\r\n\r\n                            return columns;\r\n                        })()}\r\n                        rows={recipes.filter(r => filter(r)).map(recipe => {\r\n                            var row = {\r\n                                id: recipe.Id,\r\n                                image: <Thumbnail source={recipe.ImageLocation} size={50} />,\r\n                                name: recipe.Name,\r\n                                actions: isCook && recipeListState === 0 ? <RowActions rowEntity={recipe} rowEntityId={recipe.Id} onDetails={onDetails} onEdit={onEdit} onRemove={() => ToggleRemove(recipe.CountId)} />\r\n                                    : <RowActions rowEntity={recipe} rowEntityId={recipe.Id} onDetails={onDetails} />,\r\n                            };\r\n\r\n                            if (isCook && recipeListState === 0) {\r\n                                row.public = recipe.IsPublic ? \"Public\" : \"Private\";\r\n                            }\r\n\r\n                            return row;\r\n                        })}\r\n                    />\r\n                }\r\n            </Grid>\r\n            <Grid item xs={4} style={{ borderLeft: 'solid 1px', marginLeft: '5px', padding: '5px', overflow: 'auto' }}>\r\n                <Grid container direction=\"row\" style={{ marginBottom: '8px', display: 'flex', alignContent: 'center' }}><Typography variant=\"h5\">Filters</Typography></Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center', marginBottom: '2px' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Showing:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={() => setRecipeListState(recipeListState => recipeListState + 1 > 2 ? (isCook ? 0 : 1) : recipeListState + 1)}\r\n                            style={{ width: '80%', backgroundColor: recipeListState === 0 ? \"orange\" : recipeListState === 1 ? \"#ffbb00\" : \"green\" }}>\r\n                            {recipeListState === 0 ? \"Your Custom Recipes\" : recipeListState === 1 ? \"Recipes You Can Prepare\" : \"All Recipes\"}\r\n                            <FontAwesomeIcon icon={faSync} style={{ marginLeft: '5px' }} />\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <UserInputComponent\r\n                        defaultValue={filterOptions.name}\r\n                        name=\"search by name\"\r\n                        onChange={(value) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ name: value } }; })}\r\n                    />\r\n                </Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Categories:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <UserMultiSelectInputComponent\r\n                            name=\"select categories\"\r\n                            defaultValue={filterOptions.categories}\r\n                            options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                            onChange={(values) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ categories: values } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RecipeBookHomePage };","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Card, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Recipe } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function RecipeDetailsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Recipe Details\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [recipeDetails, setRecipeDetails] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setRecipeDetails(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onTutorial = () => {\r\n        history.push(`/recipebook/tutorial/${recipeId}`);\r\n    };\r\n\r\n    return (\r\n        <Grid className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {recipeDetails.Name} Details\r\n            </Typography>\r\n            <Grid style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px' }}>\r\n                <Typography>\r\n                    Name: {recipeDetails.Name}\r\n                </Typography>\r\n                <Typography>\r\n                    Created by: {recipeDetails.User.Name}\r\n                </Typography>\r\n                <Typography>\r\n                    Categories:\r\n                </Typography>\r\n                {recipeDetails.Categories.map(cat =>\r\n                        <Card key={`${cat.Name}-${cat.CountId}`} variant=\"outlined\" style={{ margin: '2px', padding: '5px' }}>{cat.Name}</Card>\r\n                    )}\r\n                <Button variant=\"outlined\" onClick={onTutorial} style={{ marginTop: '15px' }}>View Tutorial</Button>\r\n            </Grid>\r\n            <Link to=\"/recipebook/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Table, TableBody, TableCell, TableRow, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward, faList, faVideo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Recipe } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function RecipeTutorialPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Recipe Tutorial\");\r\n    });\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [recipe, setRecipe] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setRecipe(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const [tutorialMode, setTutorialMode] = useState(0);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {recipe.Name} Tutorial\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{ borderBottom: 'solid 1px', paddingbottom: '15px' }}>\r\n                <Button variant=\"outlined\" onClick={() => setTutorialMode(0)}><FontAwesomeIcon icon={faList} style={{ marginRight: '5px' }} />Preparation Steps</Button>\r\n                {recipe.VideoTutorialLink ? <Button onClick={() => setTutorialMode(1)}><FontAwesomeIcon icon={faVideo} style={{ marginRight: '5px' }} />Video Tutorial</Button> : <></>}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ paddingTop: '15px', paddingLeft: '10px' }}>\r\n                {\r\n                    tutorialMode === 0 ?\r\n                        <Grid container direction=\"row\">\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        recipe.PreparationSteps.split('{NEXT}').map((step, index) => {\r\n                                            return (\r\n                                                <TableRow>\r\n                                                    <TableCell>Step {index + 1}.</TableCell>\r\n                                                    <TableCell>{step}</TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n                        :\r\n                        <Grid container style={{ justifyContent: 'center', alignContent: 'center' }}>\r\n                            <iframe title={`Tutorial for ${recipe.Name}`} src={recipe.VideoTutorialLink} style={{ width: '90%', height: '90%' }}/>\r\n                        </Grid>\r\n                }\r\n            </Grid>\r\n            <Link to=\"/recipebook/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\nimport { Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\nimport { PreparationStepsInputComponent } from \"./preparationStepsInputComponent\";\r\nimport { RequirementsInputComponent } from \"./RequirementsInputComponent\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    },\r\n    inputComponent: {\r\n        marginBottom: '15px',\r\n    }\r\n}));\r\n\r\nexport default function EditRecipePage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Edit Recipe\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [currentRecipe, setCurrentRecipe] = useState(new Recipe());\r\n\r\n    const [updateRecipe, setUpdateRecipe] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setCurrentRecipe(recipe);\r\n            setUpdateRecipe(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onRecipeEdited = (update) => {\r\n        setUpdateRecipe({\r\n            ...updateRecipe,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        var correctedRecipe = { ...updateRecipe };\r\n\r\n        correctedRecipe.RequirementsList = {\r\n            Ingredients: updateRecipe.RequirementsList,\r\n            RecipeId: updateRecipe.Id,\r\n        };\r\n\r\n        Api.Recipes.Update(recipeId, correctedRecipe);\r\n\r\n        history.push('/recipebook/custom/index');\r\n    };\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid className={classes.paper}>\r\n            <Dialog open={preparationStepsOpen} onClose={() => setPreparationStepsOpen(false)}>\r\n                <DialogTitle>Preparation Steps</DialogTitle>\r\n                <DialogContent>\r\n                    <PreparationStepsInputComponent\r\n                        name=\"Preparation Step\"\r\n                        defaultValue={currentRecipe.PreparationSteps}\r\n                        onChange={(value) => { onRecipeEdited({ PreparationSteps: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog open={requirementsListOpen} onClose={() => setRequirementsListOpen(false)}>\r\n                <DialogTitle>RequirementsList</DialogTitle>\r\n                <DialogContent>\r\n                    <RequirementsInputComponent\r\n                        Api={Api}\r\n                        defaultValues={currentRecipe.RequirementsList}\r\n                        parentRecipe={updateRecipe}\r\n                        onChange={(value) => { onRecipeEdited({ RequirementsList: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Edit Recipe:<br />{currentRecipe.Name}\r\n            </Typography>\r\n            <Grid style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px' }}>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.Name}\r\n                        name=\"Name\"\r\n                        onChange={(value) => onRecipeEdited({ Name: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        name=\"Description\"\r\n                        defaultValue={currentRecipe?.Description}\r\n                        onChange={(value) => { onRecipeEdited({ Description: value }); }}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.ImageLocation}\r\n                        name=\"Image\"\r\n                        onChange={(value) => onRecipeEdited({ ImageLocation: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.VideoTutorialLink}\r\n                        name=\"Tutorial Video\"\r\n                        onChange={(value) => onRecipeEdited({ VideoTutorialLink: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button variant=\"outlined\" onClick={() => setPreparationStepsOpen(true)}>\r\n                        {updateRecipe.PreparationSteps.split('{NEXT}').length} Steps\r\n                    </Button>\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button variant=\"outlined\" onClick={() => setRequirementsListOpen(true)}>\r\n                        {updateRecipe.RequirementsList.length} Requirements\r\n                    </Button>\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserSelectInputComponent\r\n                        defaultValue={currentRecipe.IsPublic}\r\n                        Name={\"Public?\"}\r\n                        options={[\r\n                            { name: \"Public\", value: true },\r\n                            { name: \"Private\", value: false },\r\n                        ]}\r\n                        onChange={(value) => { onRecipeEdited({ IsPublic: value }) }}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserMultiSelectInputComponent\r\n                        defaultValues={currentRecipe.Categories.map(category => category.CountId)}\r\n                        name=\"Categories\"\r\n                        options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                        onChange={(values) => onRecipeEdited({ Categories: values })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/recipebook/custom/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CreateRecipePage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Create Recipe\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [recipe, setRecipe] = useState(new Recipe());\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onRecipeValueEdited = (update) => {\r\n        setRecipe({\r\n            ...recipe,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onCreate = () => {\r\n        var correctedRecipe = { ...recipe };\r\n\r\n        correctedRecipe.RequirementsList = {\r\n            Ingredients: recipe.RequirementsList,\r\n            RecipeId: recipe.Id,\r\n        };\r\n\r\n        Api.Recipes.Create(correctedRecipe);\r\n\r\n        history.push('/recipebok/custom/index');\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Create New Recipe\r\n            </Typography>\r\n            <div>\r\n                <Grid container direction=\"row\" style={{ marginTop: '15px' }}>\r\n                    <UserInputComponent\r\n                        name=\"Name\"\r\n                        defaultValue={recipe?.Name}\r\n                        onChange={(value) => { onRecipeValueEdited({ Name: value }); }}\r\n                    />\r\n                </Grid>\r\n                    <Grid container direction=\"row\" style={{ marginTop: '15px' }}>\r\n                    <UserInputComponent\r\n                        name=\"Description\"\r\n                        defaultValue={recipe?.Description}\r\n                        onChange={(value) => { onRecipeValueEdited({ Description: value }); }}\r\n                    />\r\n                </Grid>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    options={categories.map(category => { return { name: category.Name, value: category.Id }; })}\r\n                    onChange={(values) => onRecipeValueEdited({ Category: values })}\r\n                />\r\n                <Button onClick={onCreate} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </div>\r\n            <Link to=\"/recipebook/custom/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Button, Card, Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n}));\r\n\r\nexport default function AccountsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Accounts\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [removeUser, setRemoveUser] = useState({ user: {}, dialogOpened: false });\r\n\r\n    const [users, setUsers] = useState([\r\n        {\r\n            Id: '',\r\n            Name: '',\r\n            Roles: [\r\n                {\r\n                    Id: '',\r\n                    Name: '',\r\n                }\r\n            ],\r\n            Email: '',\r\n            PhoneNumber: '',\r\n        }\r\n    ]);\r\n    if (users.length === 1 && users[0].Id === '') {\r\n        users.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetAll().then((users) => {\r\n            if (users === \"Error\") { return; }\r\n        \r\n            setUsers(users);\r\n        });\r\n    }, [Api.Users]);\r\n\r\n    const onDetails = (userId) => {\r\n        history.push('/accounts/details/' + userId);\r\n    };\r\n\r\n    const onEdit = (userId) => {\r\n        history.push('/accounts/edit/' + userId);\r\n    };\r\n\r\n    const ToggleRemove = (userId) => {\r\n        setRemoveUser({ user: users.find(x => x.Id === userId), dialogOpened: !removeUser.dialogOpened });\r\n    };\r\n\r\n    const onRemove = (userId) => {\r\n        const user = users.find(x => x.Id === userId);\r\n\r\n        Api.Users.Delete(userId, user);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={removeUser.dialogOpened} onClose={() => setRemoveUser(removeUser => { removeUser.dialogOpened = false; return removeUser })}>\r\n                <DialogTitle>Remove user {removeUser.user?.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove user: {removeUser.user?.Name}<br />\r\n                    <Button onClick={() => onRemove(removeUser.user.Id)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faBan} style={{ marginRight: '5px' }}/> Ban</Button>\r\n                    <Button onClick={() => ToggleRemove(removeUser.user.Id)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Accounts\r\n            </Typography>\r\n            <div className={classes.form}>\r\n                <EntityList\r\n                    columns={[\r\n                        { id: 'name', label:'Name', minWidth: 50 },\r\n                        { id: 'email', label:'Email', minWidth: 50 },\r\n                        { id: 'roles', label:'Roles', minWidth: 150 },\r\n                        { id: 'actions', label: 'Actions', minWidth: 100 },\r\n                    ]}\r\n                    rows={users.map(user => {\r\n                        return {\r\n                            id: user.Id,\r\n                            name: user.Name,\r\n                            email: user.Email,\r\n                            roles: user.Roles.map(role => { return <Card key={role.Id} style={{ margin: '2px', padding: '3px' }}>{role.Name}</Card>; }),\r\n                            actions: <RowActions rowEntityId={user.Id} rowEntity={user} onDetails={onDetails} onEdit={onEdit} onRemove={ToggleRemove} />\r\n                        }\r\n                    })}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Role, User } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function EditAccountPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Edit Account\");\r\n    });\r\n\r\n    const { userId } = useParams();\r\n\r\n    const [currentUser, setCurrentUser] = useState(new User());\r\n\r\n    const [updateUser, setUpdateUser] = useState(new User());\r\n    const [roles, setRoles] = useState([new Role()])\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetById(userId).then((user) => {\r\n            if (user === \"Error\") { return; }\r\n        \r\n            setCurrentUser(user);\r\n            setUpdateUser(user);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    useEffect(() => {\r\n        Api.Roles.GetAll().then((roles) => {\r\n            if (roles === \"Error\") { return; }\r\n        \r\n            setRoles(roles);\r\n        });\r\n    }, [Api.Roles]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onUserEdited = (update) => {\r\n        setUpdateUser({\r\n            ...updateUser,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        Api.Users.Update(updateUser);\r\n    };\r\n\r\n    const minimumAge = 13;\r\n    var d = new Date();\r\n    const defaultMinimumAgeDate = `${d.getFullYear() - minimumAge}-${(d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : (d.getMonth() + 1)}-${d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate()}`;\r\n\r\n    var db = currentUser.DateOfBirth;\r\n    let defaultDate = db && db === typeof Date ?\r\n        `${(db.getFullYear() < 1000 ? db.getFullYear() < 100 ? db.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + db.getFullYear()}-${(db.getMonth() + 1) < 10 ? \"0\" + (db.getMonth() + 1) : (db.getMonth() + 1)}-${db.getDate() < 10 ? \"0\" + db.getDate() : db.getDate()}`\r\n         : defaultMinimumAgeDate;\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Edit {currentUser.Name}\r\n            </Typography>\r\n            <div>\r\n                <UserInputComponent\r\n                    \r\n                    defaultValue={currentUser.Name}\r\n                    name=\"Name\"\r\n                    onChange={(value) => onUserEdited({ Name: value })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={currentUser.Email}\r\n                    name=\"Email\"\r\n                    onChange={(value) => onUserEdited({ Email: value })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={defaultDate}\r\n                    name=\"Date Of Birth\"\r\n                    type=\"date\"\r\n                    inputProps={{ min: defaultMinimumAgeDate }}\r\n                    onChange={(value) => onUserEdited({ DateOfBirth: new Date(Date.parse(value)) })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={currentUser.PhoneNumber}\r\n                    name=\"Phone\"\r\n                    onChange={(value) => onUserEdited({ PhoneNumber: value })}\r\n                />\r\n                <UserMultiSelectInputComponent\r\n                    defaultValues={currentUser.Roles.map(role => role.Id)}\r\n                    name=\"Roles\"\r\n                    options={roles.map(role => { return { name: role.Name, value: role.Id }; })}\r\n                    onChange={(values) => onUserEdited({ Roles: values })}\r\n                />\r\n                <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle, faCross } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\n\r\nimport { User, UserAction } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function AccountDetailsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Account Details\");\r\n    });\r\n\r\n    const { userId } = useParams();\r\n\r\n    const [userDetails, setUserDetails] = useState(new User());\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetById(userId).then((user) => {\r\n            if (user === \"Error\") { return; }\r\n        \r\n            setUserDetails(user);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    const [userActions, setUserActions] = useState([new UserAction()]);\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetActionsByUserId(userId).then((userActions) => {\r\n            if (userActions === \"Error\") { return; }\r\n        \r\n            setUserActions(userActions);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const db = userDetails.DateOfBirth;\r\n    const cd = userDetails.CreationDate;\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {userDetails.Name} Details\r\n            </Typography>\r\n            {\r\n                userDetails.CountId > 0 ?\r\n                <div>\r\n                    <Typography>\r\n                        Name: {userDetails.Name}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Email: {userDetails.Email}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Phone: {userDetails.PhoneNumber}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Date Of Birth: {`${db.getDate() < 10 ? \"0\" + db.getDate() : db.getDate()}-${(db.getMonth() + 1) < 10 ? \"0\" + (db.getMonth() + 1) : (db.getMonth() + 1)}-${(db.getFullYear() < 1000 ? db.getFullYear() < 100 ? db.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + db.getFullYear()}`}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Creation Date: {`${cd.getDate() < 10 ? \"0\" + cd.getDate() : cd.getDate()}-${(cd.getMonth() + 1) < 10 ? \"0\" + (cd.getMonth() + 1) : (cd.getMonth() + 1)}-${(cd.getFullYear() < 1000 ? cd.getFullYear() < 100 ? cd.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + cd.getFullYear()}` +\r\n                        ` ${cd.getHours() < 10 ? \"0\" + cd.getHours() : cd.getHours()}:${cd.getMinutes() < 10 ? \"0\" + cd.getMinutes() : cd.getMinutes()}`}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Roles:\r\n                    </Typography>\r\n                        {userDetails.Roles.map(role => <Card key={role.Id} style={{ margin: '2px', padding: '3px' }}>{role.Name}</Card>)}\r\n                    <Typography>\r\n                        Actions:\r\n                    </Typography>\r\n                    {\r\n                        userActions && userActions.length > 0 ?\r\n                        <EntityList\r\n                            columns={[\r\n                                { id: 'description', label:'Description', minWidth: 100 },\r\n                                { id: 'endpoint', label:'Endpoint', minWidth: 50 },\r\n                                { id: 'onTable', label:'Table', minWidth: 50 },\r\n                                { id: 'refObject', label:'Object', minWidth: 100,\r\n                                    format: (obj) => {\r\n                                        return Object.keys(obj).map((key) => { return \"(\" + key + \"): [ \" + obj[key]?.toString() + \" ]\" }).join(\", \");\r\n                                    },\r\n                                },\r\n                                { id: 'success', label:'Was successful?', minWidth: 50 },\r\n                            ]}\r\n                            rows={userActions.map((userAction) => {\r\n                                return {\r\n                                    id: userAction.CountId,\r\n                                    description: userAction.Description,\r\n                                    endpoint: userAction.Endpoint,\r\n                                    refObject: userAction.RefObject,\r\n                                    onTable: userAction.ActionPerformedOnTable,\r\n                                    success: userAction.Success ? <FontAwesomeIcon icon={faCheckCircle} style={{ color: 'forestgreen' }} /> : <FontAwesomeIcon icon={faCross} style={{ color: 'red' }} />,\r\n                                };\r\n                            })}\r\n                        /> :\r\n                        <Typography>\r\n                            No actions have been logged for this user.\r\n                        </Typography>\r\n                    }\r\n                </div>\r\n                : <></>\r\n            }\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Dialog, DialogContent, DialogTitle, Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCross, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\n\r\nimport { Ingredient, IngredientCategory, Recipe, RecipeCategory, RequirementsListIngredient, UnitType, User } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction CRUDPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"CRUD \" + TableName);\r\n    });\r\n\r\n    const [entityGroup] = useState(Api[TableName]);\r\n    \r\n    const history = useHistory();\r\n\r\n    const [entityListData, setEntityListData] = useState({ columns: [], rows: [] });\r\n\r\n    const onDetails = useCallback((id) => {\r\n        history.push(`/${TableName}/details/${id}`);\r\n    }, [TableName, history]);\r\n\r\n    const onEdit = useCallback((id) => {\r\n        history.push(`/${TableName}/edit/${id}`);\r\n    }, [TableName, history]);\r\n\r\n    const [removeItem, setRemoveItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const ToggleRemove = useCallback((id) => {\r\n        const item = entityListData.rows.find(x => x.Id === id || x.CountId === id);\r\n\r\n        if (item) {\r\n            setRemoveItem({ item: item, dialogOpened: !removeItem.dialogOpened });\r\n        }\r\n        else {\r\n            console.log(`No item found with key '${id}'!`);\r\n        }\r\n    }, [removeItem.dialogOpened, entityListData.rows]);\r\n\r\n    const onRemove = (id) => {\r\n        entityGroup.Delete(id);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        entityGroup.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            const columns = [];\r\n            const rows = [];\r\n\r\n            if (items.length > 0) {\r\n                var keys = Object.keys(items[0]);\r\n\r\n                keys.forEach(key => {\r\n                    if (key.indexOf(\"Id\") > -1) {\r\n                        return;\r\n                    }\r\n\r\n                    columns.push({\r\n                        id: key,\r\n                        label: key,\r\n                        align: 'center',\r\n                        minWidth: 50,\r\n                    });\r\n                });\r\n                columns.push({\r\n                    id: 'actions',\r\n                    label: 'Actions',\r\n                    align: 'center',\r\n                    minWidth: 100,\r\n                });\r\n\r\n                items.forEach((item, index) => {\r\n                    var obj = {\r\n                        id: index,\r\n                    };\r\n\r\n                    keys.forEach((key) => {\r\n                        var value;\r\n\r\n                        if (Array.isArray(item[key])) {\r\n                            value = item[key].map(el => (el instanceof IngredientCategory || el instanceof RecipeCategory) ? <Card key={el.Name + \"-\" + el.CountId} style={{ margin: '2px', padding: '3px' }}>{el.Name}</Card> :\r\n                                                         el instanceof UnitType ? <Card key={el.Name + \"-\" + el.CountId} style={{ margin: '2px', padding: '3px' }}>{el.Name} ({el.AllowDecimals ? \"decimals\" : \"integers\"})</Card> :\r\n                                                         el instanceof RequirementsListIngredient ? <Card key={el.Ingredient.Id} style={{ margin: '2px', padding: '3px' }}>{el.Ingredient.Name} ({el.Units} {el.UnitType.Name})</Card> : <Card key={el} style={{ margin: '2px', padding: '3px' }}>{el}</Card>);\r\n                        }\r\n                        else if (item[key] instanceof Object ||\r\n                                 item[key] instanceof Ingredient ||\r\n                                 item[key] instanceof IngredientCategory ||\r\n                                 item[key] instanceof UnitType ||\r\n                                 item[key] instanceof Recipe ||\r\n                                 item[key] instanceof RecipeCategory ||\r\n                                 item[key] instanceof User) {\r\n                            value = item[key].Name;\r\n                        }\r\n                        else if (key === \"Id\" || key === \"CountId\") {\r\n                            return;\r\n                        }\r\n                        else if (key === \"AllowDecimals\") {\r\n                            value = item[key] ? 'Decimals' : 'Integers'\r\n                        }\r\n                        else if (key === \"ImageLocation\") {\r\n                            value = <>\r\n                                        <Thumbnail source={item[key]} size={50}/>\r\n                                        <a href={item[key]}>to location</a>\r\n                                    </>\r\n                        }\r\n                        else if (key === \"VideoTutorialLink\") {\r\n                            value = item[key] ? <a href={item[key]}>to location</a> : 'Not set.'\r\n                        }\r\n                        else if (key === \"IsPublic\") {\r\n                            value = item[key] ? 'Public' : 'Private'\r\n                        }\r\n                        else if (key === \"Description\") {\r\n                            value = <div style={{ textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap', width: 100 }}>{item[key]}</div>\r\n                        }\r\n                        else if (key === \"PreparationSteps\") {\r\n                            value = <div style={{ textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap', width: 100 }}>{item[key].split('{NEXT}')[0]}...</div>\r\n                        }\r\n                        else value = item[key];\r\n\r\n                        obj[key] = value;\r\n                    });\r\n\r\n                    obj.actions = <RowActions rowEntity={item} rowEntityId={item.Id ?? item.CountId} onDetails={onDetails} onEdit={onEdit} onRemove={ToggleRemove} />\r\n\r\n                    rows.push(obj);\r\n                });\r\n            }\r\n\r\n            setEntityListData({ columns: columns, rows: rows });\r\n        });\r\n    }, [entityGroup, ToggleRemove, onEdit, onDetails]);\r\n\r\n    return (\r\n        <Grid className={classes.form}>\r\n            <Dialog open={removeItem.dialogOpened} onClose={() => setRemoveItem(removeItem => { removeItem.dialogOpened = false; return removeItem })}>\r\n                <DialogTitle>Remove item {removeItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove this item: {removeItem.item.Name} ?<br />\r\n                    <Button onClick={() => onRemove(removeItem.item.Id ?? removeItem.item.CountId)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faCross} style={{ marginRight: '5px' }}/> Remove</Button>\r\n                    <Button onClick={() => ToggleRemove(removeItem.item.Id ?? removeItem.item.CountId)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h3\">\r\n                {DisplayName} CRUD\r\n            </Typography>\r\n\r\n            {entityListData.rows.length < 1 ?\r\n                \"No items found in this table.\" :\r\n                <EntityList\r\n                    columns={[...entityListData.columns]}\r\n                    rows={[...entityListData.rows]}\r\n                />\r\n            }\r\n            <Link to={`/${TableName}/create`}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add {DisplayName}</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { CRUDPage };","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function CRUDDetailsPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Details\");\r\n    });\r\n\r\n    const { id } = useParams();\r\n\r\n    const [currentItem, setCurrentItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        Api[TableName].GetById(id).then((obj) => {\r\n            if (obj === \"Error\") { return; }\r\n        \r\n            setCurrentItem(obj);\r\n        });\r\n    }, [Api, TableName, id]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Details:<br />{currentItem.Name}\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getDetailsPage(currentItem.CountId && currentItem.CountId > 0 ? currentItem : null)\r\n                }\r\n                <Link to={`/${TableName}/edit/${id}`}>\r\n                    <Button style={{ backgroundColor: 'yellow' }}>Edit</Button>\r\n                </Link>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\n\r\nimport { Ingredient, IngredientCategory, RecipeCategory, UnitType } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CRUDEditPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Edit\");\r\n    });\r\n\r\n    const { id } = useParams();\r\n\r\n    const [currentItem, setCurrentItem] = useState({});\r\n\r\n    const [updateItem, setUpdateItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        Api[TableName].GetById(id).then((obj) => {\r\n            if (obj === \"Error\") { return; }\r\n        \r\n            setCurrentItem(obj);\r\n            setUpdateItem(obj);\r\n        });\r\n    }, [Api, TableName, id]);\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1) {\r\n        unitTypes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setUnitTypes(items);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1) {\r\n        ingredients.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredients(items);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [ingredientCategories, setIngredientCategories] = useState([new IngredientCategory()]);\r\n    if (ingredientCategories.length === 1 && ingredientCategories[0].CountId === -1) {\r\n        ingredientCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredientCategories(items);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [recipeCategories, setRecipeCategories] = useState([new RecipeCategory()]);\r\n    if (recipeCategories.length === 1 && recipeCategories[0].CountId === -1) {\r\n        recipeCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setRecipeCategories(items);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onItemEdited = (update) => {\r\n        setUpdateItem({\r\n            ...updateItem,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        if (TableName === \"Recipes\") {\r\n            var correctedRecipe = { ...updateItem };\r\n\r\n            correctedRecipe.RequirementsList = {\r\n                Ingredients: updateItem.RequirementsList,\r\n                RecipeId: updateItem.Id,\r\n            };\r\n\r\n            Api[TableName].Update(id, correctedRecipe);\r\n        }\r\n        else {\r\n            Api[TableName].Update(id, updateItem);\r\n        }\r\n    };\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Edit:<br />{currentItem.Name}\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getEditPage(currentItem.CountId && currentItem.CountId > 0 ? currentItem : null, { unitTypes, ingredients, ingredientCategories, recipeCategories },\r\n                        onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen,\r\n                                             preparationStepsCount: updateItem?.PreparationSteps?.split('{NEXT}').length ?? currentItem?.PreparationSteps?.split('{NEXT}').length,\r\n                                             requirementsCount: updateItem?.RequirementsList?.length ?? currentItem?.RequirementsList?.length })\r\n                }\r\n                <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\nimport { Ingredient, IngredientCategory, RecipeCategory, UnitType } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CRUDCreatePage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Create\");\r\n    });\r\n\r\n    const [item, setItem] = useState({});\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1) {\r\n        unitTypes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setUnitTypes(items);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1) {\r\n        ingredients.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredients(items);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [ingredientCategories, setIngredientCategories] = useState([new IngredientCategory()]);\r\n    if (ingredientCategories.length === 1 && ingredientCategories[0].CountId === -1) {\r\n        ingredientCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredientCategories(items);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [recipeCategories, setRecipeCategories] = useState([new RecipeCategory()]);\r\n    if (recipeCategories.length === 1 && recipeCategories[0].CountId === -1) {\r\n        recipeCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setRecipeCategories(items);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onItemEdited = (update) => {\r\n        setItem({\r\n            ...item,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onCreate = () => {\r\n        if (TableName === \"Recipes\") {\r\n            var correctedRecipe = { ...item };\r\n\r\n            correctedRecipe.RequirementsList = {\r\n                Ingredients: item.RequirementsList,\r\n                RecipeId: item.Id,\r\n            };\r\n\r\n            Api[TableName].Create(correctedRecipe);\r\n        }\r\n        else {\r\n            Api[TableName].Create(item);\r\n        }\r\n    };\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Create\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getEditPage(null, { unitTypes, ingredients, ingredientCategories, recipeCategories },\r\n                        onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen,\r\n                                             preparationStepsCount: item?.PreparationSteps?.split('{NEXT}').length ?? item?.PreparationSteps?.split('{NEXT}').length,\r\n                                             requirementsCount: item?.RequirementsList?.length })\r\n                }\r\n                <Button onClick={onCreate} style={{ backgroundColor: 'forestgreen' }}>Create</Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nfunction AuthorizationCallback({ Api }) {\r\n    const history = useHistory();\r\n\r\n    function getParam(key) {\r\n        const segments = window.location.search.substr(1).split('&');\r\n\r\n        var value;\r\n\r\n        segments.forEach((segment) => {\r\n            var keyToValue = segment.split('=');\r\n\r\n            var param = { key: keyToValue[0], value: keyToValue[1] };\r\n\r\n            if (param.key === key) {\r\n                value = param.value;\r\n                return;\r\n            }\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    if (getParam(\"Error\"))\r\n    {\r\n        return (\r\n            <div>\r\n                <Typography\r\n                    variant=\"h1\"\r\n                >\r\n                    Error occurred during authorization!\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        history.push('/home/index');\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            Login completed!\r\n            <Link to=\"/home/index\">\r\n                <Button variant=\"outlined\">Go on</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { AuthorizationCallback }","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { drawerWidth } from \"./components/Drawer/AppDrawer\";\r\n\r\nimport { HomePage } from \"./components/Home/Index\";\r\n\r\nimport { KitchenHomePage } from \"./components/Kitchen/index\";\r\nimport { AddIngredients } from \"./components/Kitchen/AddIngredients\";\r\nimport { WhatToBuyPage } from \"./components/Kitchen/WhatToBuy\";\r\n\r\nimport { RecipeBookHomePage } from \"./components/RecipeBook/index\";\r\nimport RecipeDetailsPage from \"./components/RecipeBook/details\";\r\nimport RecipeTutorialPage from \"./components/RecipeBook/tutorial\";\r\nimport RecipeEditPage from \"./components/RecipeBook/edit\";\r\nimport RecipeCreatePage from \"./components/RecipeBook/create\";\r\n\r\nimport AccountsPage from \"./components/Accounts/index\";\r\nimport EditAccountPage from \"./components/Accounts/update\";\r\nimport AccountDetailsPage from \"./components/Accounts/details\";\r\n\r\nimport { CRUDPage } from \"./components/CRUD/CRUDPage\";\r\nimport CRUDPagesInfo from \"./API/CRUDPagesInfo\";\r\nimport CRUDDetailsPage from \"./components/CRUD/details\";\r\nimport CRUDEditPage from \"./components/CRUD/edit\";\r\nimport CRUDCreatePage from \"./components/CRUD/create\";\r\nimport { AuthorizationCallback } from \"./components/Onboarding/AuthorizationCallback\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction MainContent({ setTitle, drawerOpen, isRegistered, name, userId, Api, isAdmin, isCreator, isCook }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: drawerOpen\r\n            })}\r\n        >\r\n            <div className={classes.drawerHeader} />\r\n            <div\r\n                style={{\r\n                    width: \"70%\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    overflowY: \"auto\",\r\n                }}\r\n            >\r\n                <Switch>\r\n                    <Route path={Api.AuthReturnUrlPath}>\r\n                        <AuthorizationCallback Api={Api} />\r\n                    </Route>\r\n                    <Route path={[\"/home/index\", \"/home\"]}>\r\n                        <HomePage setTitle={setTitle} name={name} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path={[\"/kitchen/index\", \"/kitchen\"]}>\r\n                        <KitchenHomePage setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/kitchen/add\">\r\n                        <AddIngredients setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/kitchen/whattobuy\">\r\n                        <WhatToBuyPage setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path={[\"/grocerylists/index\", \"/grocerylists\"]}>\r\n                        <WhatToBuyPage setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/grocerylists/whattobuy\">\r\n                        <WhatToBuyPage setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path={[\"/recipebook/index\", \"/recipebook\"]}>\r\n                        <RecipeBookHomePage setTitle={setTitle} isCook={isCook} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/recipebook/details/:recipeId\">\r\n                        <RecipeDetailsPage setTitle={setTitle} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/recipebook/tutorial/:recipeId\">\r\n                        <RecipeTutorialPage setTitle={setTitle} Api={Api} />\r\n                    </Route>\r\n                    {\r\n                        isRegistered ? (\r\n                            <Redirect exact strict from=\"/\" to=\"/home/index\" />\r\n                        ) : (\r\n                            <></>\r\n                        )\r\n                    }\r\n                </Switch>\r\n                {\r\n                    isCook ?\r\n                    <Switch>\r\n                        <Route path={[\"/recipebook/custom/index\", \"/recipebook/custom\"]}>\r\n                            <RecipeBookHomePage setTitle={setTitle} isCook={isCook} userId={userId} Api={Api} defaultRecipeListState={0} />\r\n                        </Route>\r\n                        <Route path=\"/recipebook/custom/edit/:recipeId\">\r\n                            <RecipeEditPage setTitle={setTitle} userId={userId} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/recipebook/custom/create\">\r\n                            <RecipeCreatePage setTitle={setTitle} userId={userId} Api={Api} />\r\n                        </Route>\r\n                    </Switch>\r\n                    : null\r\n                }\r\n                {\r\n                    isCreator ?\r\n                    Object.keys(CRUDPagesInfo.Pages).map((CRUD, index) => {\r\n                        return (\r\n                            <Switch key={`CRUDSwitch-${index}`}>\r\n                                <Route path={[`/${CRUD}/index`, `/${CRUD}`]}>\r\n                                    <CRUDPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/details/:id`}>\r\n                                    <CRUDDetailsPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/edit/:id`}>\r\n                                    <CRUDEditPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/create`}>\r\n                                    <CRUDCreatePage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                            </Switch>\r\n                        );\r\n                    })\r\n                    : null\r\n                }\r\n                {\r\n                    isAdmin ?\r\n                    <Switch>\r\n                         <Route path={[\"/accounts/index\", \"/accounts\"]}>\r\n                             <AccountsPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/accounts/edit/:userId\">\r\n                            <EditAccountPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/accounts/details/:userId\">\r\n                            <AccountDetailsPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                    </Switch>\r\n                    : null\r\n                }\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport { MainContent };","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\n\r\nimport { useAccount, CreateAccount } from \"../../API/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"red\" },\r\n    form: {\r\n\r\n    },\r\n    btn: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nexport default function RegisterPage({ setTitle, onSuccess, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Register\");\r\n    });\r\n\r\n    const minimumAge = 13;\r\n    var d = new Date();\r\n    const defaultMinimumAgeDate = `${d.getFullYear() - minimumAge}-${(d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : (d.getMonth + 1)}-${d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate()}`;\r\n\r\n    const { updateByLogIn } = useAccount();\r\n\r\n    const [errorMsgs, setErrorMsgs] = useState([]);\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [DOB, setDOB] = useState(defaultMinimumAgeDate);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    async function Register(username, email, DOB, password, confirmpassword) {\r\n        var newErrors = [''];\r\n        newErrors.pop();\r\n\r\n        if (password !== confirmpassword) {\r\n            newErrors.push('Passwords are not equal!');\r\n        }\r\n        if (userName.length < 2) {\r\n            newErrors.push('Invalid username!');\r\n        }\r\n        if (email.indexOf('@') === -1 || email.indexOf('.') === -1) {\r\n            newErrors.push('Invalid email!');\r\n        }\r\n\r\n        var parts = DOB.split(' ');\r\n        let year = parseInt(parts[3]);\r\n        let month = ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'].indexOf(parts[1]);\r\n        let date = parseInt(parts[2]);\r\n        var dateOfBirth = new Date(year, month, date, 0, 0, 0, 0);\r\n        var d = new Date();\r\n        const minimumAgeYear = d.getFullYear() - minimumAge;\r\n        if (dateOfBirth.getFullYear() > minimumAgeYear ||\r\n        (dateOfBirth.getFullYear() === minimumAgeYear && dateOfBirth.getMonth() > d.getMonth()) ||\r\n        (dateOfBirth.getFullYear() === minimumAgeYear && dateOfBirth.getMonth() === d.getMonth() && dateOfBirth.getDate() > d.getDate()))\r\n        {\r\n            newErrors.push(`You need to be older than ${minimumAge} years to create an account!`);\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrorMsgs(newErrors);\r\n        } else {\r\n            const success = await CreateAccount(username, email, password, updateByLogIn, Api);\r\n            if (success)\r\n            {\r\n                onSuccess();\r\n            }\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Register\r\n            </Typography>\r\n            <div className={classes.form}>\r\n            {\r\n                    errorMsgs.length > 0 ? (\r\n                        <div className={classes.errorTxt}>\r\n                            <ul>\r\n                                {\r\n                                    errorMsgs.map((error, key) =>\r\n                                        (<li>{error}</li>)\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n                \r\n\r\n                <UserInputComponent name=\"Email\" onChange={(value) => { setEmail(value); }} />\r\n                <UserInputComponent name=\"UserName\" onChange={(value) => { setUserName(value); }} />\r\n                <UserInputComponent name=\"Date of Birth\" type=\"date\" defaultValue={defaultMinimumAgeDate} onChange={(value) => { setDOB(value); }} />\r\n                <UserInputComponent name=\"Password\" type=\"password\" onChange={(value) => { setPassword(value); }} />\r\n                <UserInputComponent name=\"ConfirmPassword\" type=\"password\" onChange={(value) => { setConfirmPassword(value); }} />\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Button\r\n                        className={classes.btn}\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={async () => { await Register(userName, email, DOB, password, confirmPassword); }}\r\n                    >\r\n                        Register\r\n                    </Button>\r\n                </Grid>\r\n                \r\n                <Typography\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Already have an account? <Link to=\"/signin/login\">login here</Link>\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\n\r\nimport { useAccount, GetUserIdByName } from \"../../API/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    btn: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nexport default function LogInPage({ setTitle, isAdmin, onSuccess, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Log In\");\r\n    });\r\n\r\n    const { LogIn } = useAccount();\r\n\r\n    const [errorMsgs, setErrorMsgs] = useState([]);\r\n\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    async function AttemptLogIn(username, password) {\r\n        var newErrorMsgs = [''];\r\n        newErrorMsgs.pop();\r\n\r\n        var userId = await GetUserIdByName(username, Api.Users);\r\n\r\n        if (!userId) {\r\n            newErrorMsgs.push(\"Either username or password are misspelled!\");\r\n            return false;\r\n        }\r\n\r\n        let success = await LogIn(userId, password);\r\n        \r\n        if (success) {\r\n            onSuccess();\r\n            window.location.href = \"/\";\r\n        } else {\r\n            newErrorMsgs.push(\"Either username or password are misspelled!\");\r\n            setErrorMsgs(newErrorMsgs);\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Log In\r\n            </Typography>\r\n            <div className={classes.form}>\r\n                {\r\n                    errorMsgs.length > 0 ? (\r\n                        <div className={classes.errorTxt}>\r\n                            <ul>\r\n                                {\r\n                                    errorMsgs.map((error, key) =>\r\n                                        (<li>{error}</li>)\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n                <UserInputComponent name=\"UserName\" onChange={(value) => { setUserName(value); }} />\r\n                <UserInputComponent name=\"Password\" type=\"password\" onChange={(value) => { setPassword(value); }} />\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Button\r\n                        className={classes.btn}\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={async () => { await AttemptLogIn(userName, password); }}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Typography\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Don't have an account yet? <Link to=\"/signin/register\">register here</Link>\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from  \"@material-ui/core/styles\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction WelcomePage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.form}>\r\n            <Typography className={classes.txt} variant=\"h1\">\r\n                Welcome!\r\n            </Typography>\r\n            <Typography className={classes.txt} variant=\"subtitle1\">\r\n                to Recipe Finder!\r\n            </Typography>\r\n            <Button\r\n                className={classes.continue}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                component={Link}\r\n                to={\"/signin/register\"}\r\n            >\r\n                Register\r\n            </Button>\r\n            <Typography className={classes.txt}>\r\n                Or if you already have an account <Link to=\"/signin/login\">Log in here</Link>\r\n            </Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { WelcomePage }","export const form = {\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Register from \"../SignIn/Register\";\r\nimport LogIn from \"../SignIn/LogIn\";\r\nimport { WelcomePage } from \"./WelcomePage\";\r\nimport { AuthorizationCallback } from \"./AuthorizationCallback\";\r\n\r\nimport { form as formstyles } from \"./common-styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    form: formstyles,\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n\r\n}));\r\n\r\nfunction Onboarding({ setTitle, Api }) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [authPageAvailable, setAuthPageAvailable] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const TestAuthPage = async () => {\r\n            const authPage = (await Api.Custom.PerformCustom('get', Api.AuthorizationPage))?.data;\r\n\r\n            console.log(\"auth page data:\", authPage);\r\n\r\n            const pageActive = authPage && authPage.length && authPage.length > 1 && authPage !== 'Error';\r\n\r\n            console.log(\"auth page: \" + (pageActive === true ? 'active' : 'inactive'));\r\n\r\n            setAuthPageAvailable(pageActive === true);\r\n        }\r\n\r\n        if (window.location.pathname.indexOf('returnAuthorization') < 0) {\r\n            TestAuthPage();\r\n        }\r\n    }, [Api.AuthorizationPage, Api.Custom]);\r\n\r\n    const handleConnectionSuccess = () => {\r\n        history.push(\"/register\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {authPageAvailable ?\r\n                <Route component={() => { \r\n                    console.log(\"redirecting to api authorization page.\")\r\n                    window.location.href = Api.AuthorizationPage; \r\n                    return null;\r\n                }}/>\r\n                    : \r\n                <Switch>\r\n                    <Route path=\"/signin/register\">\r\n                        <div className={classes.form}>\r\n                            <Register setTitle={setTitle} authPageAvailable={authPageAvailable} onSuccess={handleConnectionSuccess} Api={Api} />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/signin/login\">\r\n                        <div className={classes.form}>\r\n                            <LogIn setTitle={setTitle} authPageAvailable={authPageAvailable} onSuccess={handleConnectionSuccess} Api={Api} />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path={Api.AuthReturnUrlPath}>\r\n                        <AuthorizationCallback Api={Api} />\r\n                    </Route>\r\n                    \r\n                    <Route>\r\n                        <WelcomePage />\r\n                    </Route>\r\n                </Switch>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Onboarding };","import React, { useState } from \"react\";\r\nimport \"./app.css\";\r\nimport { Loading } from \"./components/Loading\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { AppDrawer, drawerWidth } from \"./components/Drawer/AppDrawer\";\r\nimport { MainContent } from \"./MainContent\";\r\nimport { Onboarding } from \"./components/Onboarding/Onboarding\";\r\n\r\nimport { Authenticate, useAccount, ApiProvider, useAPI } from \"./API/index\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        height: \"100%\",\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#ffbb00',\r\n        color: 'black',\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px])`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    logoutButton: {\r\n        \r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 2,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ApiProvider>\r\n            <Authenticate>\r\n                <Loading>\r\n                    <Router>\r\n                        <div className={classes.root}>\r\n                            <AppShell />\r\n                        </div>\r\n                    </Router>\r\n                </Loading>\r\n            </Authenticate>\r\n        </ApiProvider>\r\n    );\r\n};\r\n\r\nfunction AppShell() {\r\n    const { id, name, registered, loaded, roles, logOut } = useAccount();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const classes = useStyles();\r\n\r\n    const { Api } = useAPI();\r\n\r\n    if (!loaded) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!registered) {\r\n        return <Onboarding setTitle={setTitle} Api={Api} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={() => setOpen(true)}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" noWrap className={classes.title}>\r\n                        logged in as: {name}\r\n                    </Typography>\r\n                    <Button\r\n                        className={classes.logoutButton}\r\n                        onClick={() => { logOut(); window.location.href = \"/signin/login\" }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faSignOutAlt} style={{ marginRight: '5px' }}/> log Out\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppDrawer\r\n                open={open}\r\n                onOpen={setOpen}\r\n                setTitle={setTitle}\r\n                isRegistered={registered}\r\n                isAdmin={roles.filter(r => r.name === 'admin') !== undefined}\r\n                isCreator={roles.filter(r => r.name === 'creator') !== undefined}\r\n                isCook={roles.filter(r => r.name === 'cook') !== undefined}\r\n            />\r\n            <MainContent setTitle={setTitle} drawerOpen={open} isRegistered={registered} name={name} userId={id ?? \"unknown\"} Api={Api}\r\n                isAdmin={roles.filter(r => r.name === 'admin') !== undefined}\r\n                isCreator={roles.filter(r => r.name === 'creator') !== undefined}\r\n                isCook={roles.filter(r => r.name === 'cook') !== undefined}\r\n            />\r\n        </>\r\n    );\r\n};","\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"[::1]\" ||\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served by cache-first by a service \" +\r\n                        \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker =registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                \"tabs fpr this page are closed. See https://bit.ly/CRA-PWA\"\r\n                            );\r\n\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n};\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" },\r\n    })\r\n    .then((response) => {\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (\r\n            response.status === 404 ||\r\n            (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n        ) {\r\n            navigator.serviceWorker.ready.then((registration) => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        } else {\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n    .catch(() => {\r\n        console.log(\r\n            \"No internet connection found. App is runnning in offline mode.\"\r\n        );\r\n    });\r\n};\r\n\r\nexport function unregister() {\r\n    if (\"serviceworker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n            registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n        });\r\n    }\r\n};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}