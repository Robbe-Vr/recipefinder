{"version":3,"sources":["API/api.js","models/Role.js","models/User.js","models/UserAction.js","models/GroceryList.js","models/UnitType.js","models/IngredientCategory.js","models/RecipeCategory.js","models/Ingredient.js","models/RequirementsListIngredient.js","models/Recipe.js","models/KitchenIngredient.js","API/api-context.js","API/account.js","components/Loading.js","components/Drawer/DrawerItem.js","components/Global/Thumbnail.js","components/Global/ImageInputComponent.js","components/Global/UserInputComponent.js","components/Global/UserMultiSelectInputComponent.js","components/Global/UserSelectInputComponent.js","components/RecipeBook/preparationStepsInputComponent.js","components/Global/EntityList.js","components/Global/SelectIngredientComponent.js","components/RecipeBook/RequirementsInputComponent.js","API/CRUDPagesInfo.js","components/Drawer/AppDrawer.js","components/Home/Index.js","components/Kitchen/KitchenList.js","components/Global/RowActions.js","components/Kitchen/index.js","components/Kitchen/AddIngredients.js","components/RecipeBook/RecipeList.js","components/RecipeBook/index.js","components/RecipeBook/details.js","components/RecipeBook/tutorial.js","components/RecipeBook/edit.js","components/RecipeBook/create.js","components/Accounts/index.js","components/Accounts/update.js","components/Accounts/details.js","components/CRUD/CRUDPage.js","components/CRUD/details.js","components/CRUD/edit.js","components/CRUD/create.js","MainContent.js","components/SignIn/Register.js","components/SignIn/LogIn.js","components/Onboarding/WelcomePage.js","components/Onboarding/AuthorizationCallback.js","components/Onboarding/common-styles.js","components/Onboarding/Onboarding.js","app.js","serviceWorker.js","index.js"],"names":["accessToken","Role","countId","id","name","this","CountId","Id","Name","User","email","phoneNumber","passwordHashed","salt","dateOfBirth","creationDate","roles","Roles","Email","PhoneNumber","PasswordHashed","Salt","DateOfBirth","Date","parse","CreationDate","UserAction","user","endpoint","requestType","description","refObject","actionPerformedOnTable","success","Endpoint","RequestType","Description","RefObject","ActionPerformedOnTable","Success","GroceryList","value","Value","UserId","UnitType","allowDecimals","AllowDecimals","IngredientCategory","RecipeCategory","Ingredient","imgLocation","avgkgPerUnit","avgLPerUnit","categories","unitTypes","Categories","UnitTypes","ImageLocation","AverageWeightInKgPerUnit","AverageVolumeInLiterPerUnit","RequirementsListIngredient","ingredient","units","unitType","recipe","IngredientId","Units","UnitTypeId","RecipeId","Recipe","imageLocation","isPublic","preparationSteps","videoTutorialLink","requirementsList","RequirementsList","PreparationSteps","VideoTutorialLink","IsPublic","KitchenIngredient","axios","require","default","api_url","protocol","AccessTokenHeaderName","AuthorizationHeaders","getAccessToken","HandlerError","error","response","console","log","status","data","Message","request","message","account","localStorage","getItem","JSON","e","AccessToken","EntityGroup","groupName","api_path","ApiUrl","length","a","get","headers","newObj","stringify","post","updatedObj","put","obj","delete","type","url","toUpperCase","info","CustomEntityGroup","text","Text","res","Result","item","DOB","map","role","IngredientEntityGroup","fixedData","AverageVolumeInLPerUnit","category","UserEntityGroup","RefObjectid","RefObjectName","RoleEntityGroup","RecipeEntityGroup","Ingredients","requirement","userId","KitchenEntityGroup","RequirementsListEntityGroup","UnitTypeEntityGroup","IngredientCategoryEntityGroup","RecipeCategoryEntityGroup","GroceryListEntityGroup","Api","authReturnUrlPath","AuthorizationPage","AuthReturnUrlPath","Url","Users","Recipes","Kitchens","RequirementsLists","IngredientCategories","RecipeCategories","GroceryLists","Custom","ApiContext","React","createContext","ApiProvider","children","API","contextValue","Provider","useAPI","useContext","ACCOUNT_LS","AccountContext","Authenticate","useState","setAccount","loaded","setLoaded","useEffect","getTokens","setTokens","GetUserByAccessToken","then","acc","setItem","catch","getParam","key","window","location","search","substr","split","forEach","segment","keyToValue","param","localAccStr","localAcc","pathname","ValidateAccessToken","accWithUser","correctedAcc","removeItem","RefreshAccessToken","newToken","refreshedAcc","access_token","checkLogin","registered","logIn","password","logOut","LogOut","useAccount","GetUserIdByName","UsersApi","GetByName","CreateAccount","username","updateByLogIn","api","createUserObject","newUser","Create","encryptSHA256","CustomApi","Encrypt","generateSalt","GetSalt","PerformCustom","EmailConfirmed","EmailConfirmationToken","PhoneNumberConfirmed","NAME_NORMALIZED","EMAIL_NORMALIZED","SecurityStamp","ConcurrencyStamp","LockoutEnabled","lockoutEnd","AccessFailedCount","Kitchen","Deleted","useStyles","makeStyles","theme","container","display","height","justifyContent","alignItems","Loading","classes","className","CircularProgress","DrawerItem","props","ListItem","button","component","Link","to","link","icon","style","marginRight","ListItemText","primary","onClick","inputBox","marginBottom","spacing","Thumbnail","source","size","Grid","border","width","toString","maxWidth","maxHeight","alt","src","ImageInputComponent","variant","defaultValue","onChange","isAsync","setValue","direction","xs","TextField","label","target","verticalAlign","UserInputComponent","inputProps","step","correction","parseInt","parseFloat","UserMultiSelectInputComponent","defaultValues","options","values","setValues","overrideOnChange","InputLabel","Select","multiple","option","MenuItem","selected","indexOf","UserSelectInputComponent","PreparationStepsInputComponent","updateValue","newValue","index","updatedValue","i","join","addStep","newStepIndex","steps","Button","color","borderTop","paddingTop","paddingBottom","borderBottom","marginLeft","stepValue","replace","endsWith","substring","removeStep","tableContainer","minWidth","EntityList","rows","columns","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","align","TableBody","slice","row","hover","tabIndex","format","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","SelectIngredientComponent","ingredients","selectIngredient","setCategories","pop","GetAll","filterOptions","setFilterOptions","overflow","paddingLeft","alignContent","Typography","padding","filter","toLowerCase","c","x","image","select","RequirementsInputComponent","parentRecipe","setIngredients","setUnitTypes","propName","updatedValues","closeIngredientSelect","ingredientsSelects","ingredientSelectsOpen","setIngredientSelectsOpen","val","find","Dialog","open","onClose","DialogTitle","DialogContent","openIngredientSelect","min","max","unitTypeId","u","updateUnitType","vals","splice","removeRequirement","push","addRequirement","CreateEditPage","tableName","notEditableProps","ApiTables","onItemEdited","additionals","marginTop","cat","ingredientCategories","CreateIngredientEditPage","CreateIngredientCategoryEditPage","CreateUnitTypeEditPage","preparationStepsOpen","setPreparationStepsOpen","requirementsListOpen","setRequirementsListOpen","preparationStepsCount","requirementsCount","keepMounted","recipeCategories","CreateRecipeEditPage","CreateRecipeCategoryEditPage","CreateDetailsPage","Card","margin","CreateIngredientDetailsPage","CreateIngredientCategoryDetailsPage","CreateUnitTypeDetailsPage","href","CreateRecipeDetailsPage","CreateRecipeCategoryDetailsPage","generateCRUDInfo","displayName","context","DisplayName","getEditPage","getDetailsPage","CRUDPagesInfo","Pages","drawerWidth","drawer","flexShrink","drawerPaper","drawerheader","backgroundColor","mixins","toolbar","chevron","flex","AppDrawer","onOpen","isAdmin","isCreator","isCook","useTheme","Drawer","anchor","paper","noWrap","IconButton","Divider","List","faHome","faUtensils","faBookOpen","faListAlt","faMortarPestle","Object","keys","CRUD","faBook","faUsers","form","flexDirection","txt","textAlign","continue","HomePage","setTitle","innerHeight","textDecoration","fontSize","KitchenList","editComponent","removeComponent","rowActionsContainer","RowActions","rowEntityId","onDetails","rowEntity","onEdit","onRemove","justify","faEye","faPen","faTrash","KitchenHomePage","kitchen","setKitchen","editingIngredients","setEditingIngredients","removingIngredients","setRemovingIngredients","updates","setUpdates","unitTypeChanges","setUnitTypeChanges","GetKitchenByUserId","ToggleEdit","undefined","Update","reload","ToggleRemove","Delete","updatedUnitType","actions","newUnits","newUnitType","faPlus","ingredientSelectContainer","ingredientSelectedContainer","AddIngredients","selectedIngredient","setSelectedIngredient","saveIngredient","setSaveIngredient","faArrowRight","borderLeft","faBackward","RecipeList","RecipeBookHomePage","defaultRecipeListState","history","useHistory","recipeListState","setRecipeListState","recipes","setRecipes","GetAllFromCook","GetPreparableForUser","recipeId","dialogOpened","setRemoveItem","faCross","r","public","faSync","boxSizing","RecipeDetailsPage","useParams","recipeDetails","setRecipeDetails","GetById","RecipeTutorialPage","setRecipe","tutorialMode","setTutorialMode","paddingbottom","faList","faVideo","title","errorTxt","inputComponent","EditRecipePage","currentRecipe","setCurrentRecipe","updateRecipe","setUpdateRecipe","onRecipeEdited","update","correctedRecipe","CreateRecipePage","Category","AccountsPage","removeUser","setRemoveUser","users","setUsers","disableBackdropClick","disableEscapeKeyDown","faBan","EditAccountPage","currentUser","setCurrentUser","updateUser","setUpdateUser","setRoles","onUserEdited","d","defaultMinimumAgeDate","getFullYear","getMonth","getDate","db","defaultDate","AccountDetailsPage","userDetails","setUserDetails","userActions","setUserActions","GetActionsByUserId","cd","getHours","getMinutes","userAction","onTable","faCheckCircle","CRUDPage","TableName","entityListData","setEntityListData","useCallback","entityGroup","items","Array","isArray","el","CRUDDetailsPage","currentItem","setCurrentItem","CRUDInfo","CRUDEditPage","updateItem","setUpdateItem","setIngredientCategories","setRecipeCategories","CRUDCreatePage","drawerHeader","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","MainContent","drawerOpen","isRegistered","clsx","overflowY","path","exact","strict","from","btn","RegisterPage","onSuccess","errorMsgs","setErrorMsgs","setEmail","userName","setUserName","setDOB","setPassword","confirmPassword","setConfirmPassword","Register","confirmpassword","newErrors","parts","year","month","date","minimumAgeYear","LogInPage","LogIn","AttemptLogIn","newErrorMsgs","WelcomePage","AuthorizationCallback","root","formstyles","Onboarding","authPageAvailable","setAuthPageAvailable","authPage","pageActive","TestAuthPage","handleConnectionSuccess","appBar","appBarShift","logoutButton","menuButton","hide","App","AppShell","setOpen","CssBaseline","AppBar","position","Toolbar","edge","faSignOutAlt","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c1c5bd1.chunk.js","sourcesContent":["import { Role, User, GroceryList, UnitType, IngredientCategory, Ingredient,\r\n    RequirementsListIngredient, KitchenIngredient, RecipeCategory, Recipe, UserAction } from \"../models\";\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst protocol = \"https://\", serverIp = \"localhost\",//\"192.168.2.29\",\r\n    port = 5001, apiPage = \"/api\",\r\n    api_url = protocol + serverIp + \":\" + port + apiPage;\r\n\r\nconst defaultHeaders = (data) => ({ \"Accept\": \"*/*\", \"Content-Type\": \"application/json\" });\r\n\r\nconst AccessTokenHeaderName = \"RecipeFinder_AccessToken\";\r\n\r\nvar accessToken;\r\nconst AuthorizationHeaders = () => {\r\n    if (!accessToken) {\r\n        accessToken = getAccessToken();\r\n    }\r\n\r\n    return ({ [AccessTokenHeaderName]: accessToken });\r\n};\r\n\r\nfunction HandlerError(error) {\r\n    if (error.response) {\r\n        console.log(`${error.response.status} - `, error.response.data.Message ?? error.response.data);\r\n    } else if (error.request) {\r\n        console.log(`Request failed: `, error.request);\r\n    } else {\r\n        console.log(`Axios request execution fail: ${error.message}`, error);\r\n    }\r\n\r\n    return \"Error\";\r\n};\r\n\r\nfunction getAccessToken() {\r\n    const ACCOUNT_LS = \"recipefinder_account\";\r\n\r\n    var account = localStorage.getItem(ACCOUNT_LS);\r\n\r\n    try\r\n    {\r\n        account = JSON.parse(account);\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n        account = {};\r\n    }\r\n\r\n    return account?.AccessToken;\r\n};\r\n\r\nclass EntityGroup {\r\n    constructor(groupName = '', api_path = '') {\r\n        this.Name = groupName;\r\n        this.ApiUrl = api_url + (api_path.length > 0 ? \"/\" + api_path : '');\r\n\r\n        if (!accessToken) {\r\n            getAccessToken();\r\n        }\r\n    };\r\n\r\n    ApiUrl = '';\r\n    Name = '';\r\n\r\n    async GetAll() {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async GetById(id = '') {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl + \"/\" + id, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async GetByName(name = '') {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl + \"/byname/\" + name, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Create(newObj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(newObj, null, 4);\r\n\r\n            var response = await axios.post(this.ApiUrl,\r\n                data,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Update(id = '', updatedObj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(updatedObj, null, 4);\r\n\r\n            var response = await axios.put(this.ApiUrl + \"/\" + id,\r\n                data,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Delete(id = '', obj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(obj, null, 4);\r\n\r\n            var response = await axios.delete(this.ApiUrl + '/' + id,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async PerformCustom(type = 'get', url, obj = {}, headers = {}) {\r\n        try\r\n        {\r\n            var response = {};\r\n\r\n            headers = { ...headers, ...AuthorizationHeaders() };\r\n\r\n            if (type === 'get')\r\n            {\r\n                response = await axios.get(url, { headers: headers });\r\n            }\r\n            else if (type === 'post')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...headers, ...defaultHeaders(data) };\r\n\r\n                response = await axios.post(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else if (type === 'put')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...headers, ...defaultHeaders(data) };\r\n\r\n                response = await axios.put(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else if (type === 'delete')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...headers, ...defaultHeaders(data) };\r\n\r\n                response = await axios.delete(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else response = 'Invalid request type!';\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            console.log(`Failed request to '${url}' as ${type.toUpperCase()}`, e);\r\n\r\n            HandlerError(e);\r\n\r\n            return { info: e, error: true, data: \"Error\" };\r\n        }\r\n    };\r\n};\r\n\r\nclass CustomEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Custom\", \"\");\r\n    };\r\n\r\n    async Encrypt(text, salt) {\r\n        var res = await super.PerformCustom('post', this.ApiUrl + '/Encrypt', { Text: text, Salt: salt });\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data.Result;\r\n    };\r\n\r\n    async GetSalt() {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Encrypt/getsalt');\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data.Result;\r\n    };\r\n\r\n    async LogOut(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/logout?show', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async ValidateAccessToken(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/Validate', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async RefreshAccessToken(headers) {\r\n        var res = await super.PerformCustom('post', this.ApiUrl + '/Authorize/Refresh', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async GetUserByAccessToken(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/Me', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        const item = res.data;\r\n\r\n        return new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n    };\r\n};\r\n\r\nclass IngredientEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Ingredients\", \"Ingredients\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLPerUnit,\r\n                item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLPerUnit,\r\n            item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLPerUnit,\r\n            item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass UserEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Users\", \"Users\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n                item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetActionsByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/' + id + \"/actions\");\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new UserAction(item.CountId,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []),\r\n                item.Endpoint, item.RequestType, item.Description, item.RefObject ? item.RefObject : { Id: item.RefObjectid, Name: item.RefObjectName }, item.ActionPerformedOnTable, item.Success );\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRolesByUserId(id) {\r\n        var data = await super.PerformCustom('get', this.ApiUrl + '/getroles/' + id);\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Role(item.CountId, item.Id, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass RoleEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Roles\", \"Roles\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Role(item.CountId, item.Id, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Role(item.CountId, item.Id, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Role(item.CountId, item.Id, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass RecipeEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Recipes\", \"Recipes\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetPreparableForUser(userId) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/preparable/' + userId);\r\n\r\n        const fixedData = res.data && res.data !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetAllFromCook(userId) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/bycook/' + userId);\r\n\r\n        const fixedData = res.data && res.data !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n            item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n            item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLPerUnit,\r\n                    requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                    requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                        requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                        requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n            )) : [],\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n            item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n            item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLPerUnit,\r\n                    requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                    requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                        requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                        requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n            )) : [],\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass KitchenEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Kitchens\", \"Kitchens\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLPerUnit,\r\n            item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n            item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetKitchenByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byuserid/' + id);\r\n\r\n        const fixedData = res.data;\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetKitchenByUserName(name) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byusername/' + name);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass RequirementsListEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"RequirementsLists\", \"RequirementsLists\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []))\r\n                )\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new RequirementsListIngredient(item.CountId,\r\n            new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n            item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n            new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                item.Recipe.Categories ? item.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                    item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                    item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : [])));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRequirementsListByRecipeId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byrecipeid/' + id);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []))\r\n                )\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRequirementsListByRecipeName(name) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byrecipename/' + name);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : [])));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass UnitTypeEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"UnitTypes\", \"UnitTypes\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass IngredientCategoryEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"IngredientCategories\", \"IngredientCategories\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new IngredientCategory(item.CountId, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new IngredientCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new IngredientCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass RecipeCategoryEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"RecipeCategories\", \"RecipeCategories\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new RecipeCategory(item.CountId, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new RecipeCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new RecipeCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass GroceryListEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"GroceryLists\", \"GroceryLists\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new GroceryList(item.CountId, item.Name, item.Value,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                    item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetAllByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byuserid/' + id);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new GroceryList(item.CountId, item.Name, item.Value,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                    item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new GroceryList(item.CountId, item.Name, item.Value,\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new GroceryList(item.CountId, item.Name, item.Value,\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nexport default class Api {\r\n    constructor() {\r\n        const authReturnUrlPath = '/returnAuthorization';\r\n\r\n        const authPage = \"/api/authorize/login\",\r\n            params = `?ReturnUrl=https://localhost:3000` + authReturnUrlPath;\r\n\r\n        this.AuthorizationPage = protocol + serverIp + \":\" + port + authPage + params;\r\n\r\n        this.AuthReturnUrlPath = authReturnUrlPath;\r\n\r\n        this.Url = api_url;\r\n        this.AccessTokenHeaderName = AccessTokenHeaderName;\r\n\r\n        this.Ingredients = new IngredientEntityGroup();\r\n        this.Users = new UserEntityGroup();\r\n        this.Roles = new RoleEntityGroup();\r\n        this.Recipes = new RecipeEntityGroup();\r\n        this.Kitchens = new KitchenEntityGroup();\r\n        this.RequirementsLists = new RequirementsListEntityGroup();\r\n        this.UnitTypes = new UnitTypeEntityGroup();\r\n        this.IngredientCategories = new IngredientCategoryEntityGroup();\r\n        this.RecipeCategories = new RecipeCategoryEntityGroup();\r\n        this.GroceryLists = new GroceryListEntityGroup();\r\n        this.Custom = new CustomEntityGroup();\r\n    };\r\n};","export default class Role {\r\n    constructor(countId, id, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n    };\r\n};","import Role from \"./Role\"\r\n\r\nexport default class User {\r\n    constructor(countId, id, name, email, phoneNumber, passwordHashed, salt, dateOfBirth, creationDate, roles) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Email = email ?? '';\r\n        this.PhoneNumber = phoneNumber ?? '';\r\n        this.PasswordHashed = passwordHashed ?? '';\r\n        this.Salt = salt ?? '';\r\n        this.DateOfBirth = dateOfBirth ? new Date(Date.parse(dateOfBirth)) : null;\r\n        this.CreationDate = creationDate ? new Date(Date.parse(creationDate)) : null;\r\n        this.Roles = roles ?? [];\r\n    };\r\n    \r\n    Roles = [new Role()];\r\n};","import User from \"./User\"\r\n\r\nexport default class UserAction {\r\n    constructor(countId, user, endpoint, requestType, description, refObject, actionPerformedOnTable, success) {\r\n        this.CountId = countId ?? -1;\r\n        this.User = user ?? new User();\r\n        this.Endpoint = endpoint ?? '';\r\n        this.RequestType = requestType ?? '';\r\n        this.Description = description ?? '';\r\n        this.RefObject = refObject ?? {};\r\n        this.ActionPerformedOnTable = actionPerformedOnTable ?? '';\r\n        this.Success = success ?? false;\r\n    };\r\n\r\n    User = new User();\r\n};","import User from \"./User\"\r\n\r\nexport default class GroceryList {\r\n    constructor(id, name, value, user) {\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Value = value ?? '';\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user ?? new User();\r\n    };\r\n    \r\n    User = new User();\r\n};","export default class UnitType {\r\n    constructor(countId, name, allowDecimals) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n        this.AllowDecimals = allowDecimals ?? false;\r\n    };\r\n};","export default class IngredientCategory {\r\n    constructor(countId, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n    };\r\n};","export default class RecipeCategory {\r\n    constructor(countId, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n    };\r\n};","import IngredientCategory from \"./IngredientCategory\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class Ingredient {\r\n    constructor(countId, id, name, imgLocation, avgkgPerUnit, avgLPerUnit, categories, unitTypes) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.ImageLocation = imgLocation ?? '';\r\n        this.AverageWeightInKgPerUnit = avgkgPerUnit ?? 0.00;\r\n        this.AverageVolumeInLiterPerUnit = avgLPerUnit ?? 0.00;\r\n        this.Categories = categories ?? [];\r\n        this.UnitTypes = unitTypes ?? [];\r\n    };\r\n\r\n    Categories = [new IngredientCategory()];\r\n    UnitTypes = [new UnitType()];\r\n};","import Ingredient from \"./Ingredient\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class RequirementsListIngredient {\r\n    constructor(countId, ingredient, units, unitType, recipe) {\r\n        this.CountId = countId ?? -1;\r\n        this.IngredientId = ingredient?.Id ?? '';\r\n        this.Ingredient = ingredient ?? new Ingredient();\r\n        this.Units = units ?? 0.00;\r\n        this.UnitTypeId = unitType?.CountId ?? -1;\r\n        this.UnitType = unitType ?? new UnitType();\r\n        this.RecipeId = recipe?.Id ?? '';\r\n        this.Recipe = recipe ?? null;\r\n    };\r\n\r\n    Ingredient = new Ingredient();\r\n    UnitType = new UnitType();\r\n};","import RecipeCategory from \"./RecipeCategory\"\r\nimport RequirementsListIngredient from \"./RequirementsListIngredient\"\r\nimport User from \"./User\"\r\n\r\nexport default class Recipe {\r\n    constructor(countId, id, name, description, imageLocation, isPublic, preparationSteps, videoTutorialLink, categories, requirementsList, user) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Description = description ?? '';\r\n        this.ImageLocation = imageLocation ?? '';\r\n        this.PreparationSteps = preparationSteps ?? '';\r\n        this.VideoTutorialLink = videoTutorialLink ?? '';\r\n        this.IsPublic = isPublic ?? true;\r\n        this.Categories = categories ?? [];\r\n        this.RequirementsList = requirementsList ?? [];\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user ?? new User();\r\n    };\r\n\r\n    Categories = [new RecipeCategory()];\r\n    RequirementsList = [new RequirementsListIngredient()];\r\n    User = new User();\r\n};","import Ingredient from \"./Ingredient\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class KitchenIngredient {\r\n    constructor(countId, ingredient, units, unitType, user) {\r\n        this.CountId = countId ?? -1;\r\n        this.Ingredient = ingredient ?? new Ingredient();\r\n        this.Units = units ?? 0.00;\r\n        this.UnitType = unitType ?? new UnitType();\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user;\r\n    };\r\n\r\n    Ingredient = new Ingredient();\r\n    UnitType = new UnitType();\r\n};","import React, { useContext } from \"react\";\r\nimport Api from \"../API/api\";\r\n\r\nconst ApiContext = React.createContext({});\r\n\r\nexport function ApiProvider({ children }) {\r\n    \r\n    const API = new Api();\r\n\r\n    var contextValue = {\r\n        Api: API,\r\n        Ingredients: API.Ingredients,\r\n        Users: API.Users,\r\n        Roles: API.Roles,\r\n        Recipes: API.Recipes,\r\n        Kitchens: API.Kitchens,\r\n        RequirementsLists: API.RequirementsLists,\r\n        UnitTypes: API.UnitTypes,\r\n        IngredientCategories: API.IngredientCategories,\r\n        RecipeCategories: API.RecipeCategories,\r\n        GroceryLists: API.GroceryLists,\r\n        Custom: API.Custom,\r\n    };\r\n\r\n    console.log(\"Loading API...\");\r\n\r\n    return (\r\n        <ApiContext.Provider value={contextValue}>\r\n            {children}\r\n        </ApiContext.Provider>\r\n    );\r\n};\r\n\r\nexport function useAPI() {\r\n    return useContext(ApiContext);\r\n};","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useAPI } from \"../API/api-context\";\r\n\r\nconst ACCOUNT_LS = \"recipefinder_account\";\r\n\r\nconst AccountContext = React.createContext({});\r\n\r\nexport function Authenticate({ children }) {\r\n\r\n    const { Api } = useAPI();\r\n\r\n    const [account, setAccount] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        async function checkLogin() {\r\n\r\n            function getTokens() {\r\n                function getParam(key) {\r\n                    const segments = window.location.search.substr(1).split('&');\r\n            \r\n                    var value;\r\n            \r\n                    segments.forEach((segment) => {\r\n                        var keyToValue = segment.split('=');\r\n            \r\n                        var param = { key: keyToValue[0], value: keyToValue[1] };\r\n            \r\n                        if (param.key === key) {\r\n                            value = param.value;\r\n                            return;\r\n                        }\r\n                    });\r\n            \r\n                    return value;\r\n                }\r\n            \r\n                var error;\r\n                if ((error = getParam(\"Error\")))\r\n                {\r\n                    console.log(error);\r\n                }\r\n                else\r\n                {\r\n                    var accessToken;\r\n                    var userId;\r\n                    if ((accessToken = getParam('Token')) && (userId = getParam('UserId'))) {\r\n                        setTokens(accessToken, userId);\r\n                    }\r\n                }\r\n            };\r\n        \r\n            function setTokens(accessToken, userId) {\r\n                if (account?.AccessToken === accessToken && account?.Id) {\r\n                    return;\r\n                }\r\n        \r\n                Api.Custom.GetUserByAccessToken({ [Api.AccessTokenHeaderName]: accessToken }).then((user) => {\r\n                    var acc = {\r\n                        ...account,\r\n                        Id: user.Id,\r\n                        Name: user.Name,\r\n                        Email: user.Email,\r\n                        Roles: user.Roles,\r\n                        AccessToken: accessToken,\r\n                    };\r\n            \r\n                    localStorage.setItem(ACCOUNT_LS, JSON.stringify(acc));\r\n                    setAccount(acc);\r\n                    setLoaded(true);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n        \r\n                    setLoaded(true);\r\n                });\r\n            };\r\n\r\n            var localAccStr = localStorage.getItem(ACCOUNT_LS);\r\n            var localAcc = {};\r\n\r\n            try\r\n            {\r\n                localAcc = JSON.parse(localAccStr);\r\n            }\r\n            catch (e)\r\n            {\r\n                console.log(e);\r\n            }\r\n\r\n            if (window.location.pathname === '/returnAuthorization' && !(localAcc?.AccessToken && localAcc?.Id)) {\r\n                getTokens();\r\n\r\n                return;\r\n            }\r\n\r\n            if (!localAcc) {\r\n                console.log(\"No local account found.\");\r\n\r\n            } else if (!localAcc.AccessToken || localAcc.AccessToken.length !== 45) {\r\n                console.log('User not authenticated.');\r\n\r\n            } else {\r\n                const tokenValidation = await Api.Custom.ValidateAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                if (tokenValidation.Result === \"Success.\") {\r\n                    console.log(\"Token validated.\");\r\n\r\n                    if (account?.AccessToken !== localAcc.AccessToken) {\r\n                        var accWithUser = account;\r\n\r\n                        if (!(accWithUser?.Id)) {\r\n                            var user = await Api.Custom.GetUserByAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                            accWithUser = {\r\n                                ...accWithUser,\r\n                                Id: user.Id,\r\n                                Name: user.Name,\r\n                                Email: user.Email,\r\n                                Roles: user.Roles,\r\n                            };\r\n                        }\r\n\r\n                        var correctedAcc = {\r\n                            ...accWithUser,\r\n                            AccessToken: localAcc.AccessToken,\r\n                        }\r\n    \r\n                        localStorage.setItem(ACCOUNT_LS, JSON.stringify(correctedAcc));\r\n\r\n                        setAccount(correctedAcc);\r\n                    }\r\n\r\n                } else {\r\n                    if (window.location.pathname === '/returnAuthorization') {\r\n                        localStorage.removeItem(ACCOUNT_LS);\r\n\r\n                        getTokens();\r\n\r\n                        return;\r\n                    }\r\n\r\n                    console.log(\"Token invalid. Refreshing...\");\r\n\r\n                    const newToken = await Api.Custom.RefreshAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                    if (newToken !== \"Error\") {\r\n                        console.log(\"New token received.\");\r\n\r\n                        var refreshedAcc = {\r\n                            ...account,\r\n                            AccessToken: newToken.access_token,\r\n                        }\r\n\r\n                        localStorage.setItem(ACCOUNT_LS, JSON.stringify(refreshedAcc));\r\n                        setAccount(refreshedAcc);\r\n                    }\r\n                    else {\r\n                        localStorage.removeItem(ACCOUNT_LS);\r\n                        setAccount({});\r\n                    }\r\n                }\r\n            };\r\n\r\n            setLoaded(true);\r\n        };\r\n\r\n        checkLogin();\r\n    }, [account, Api, loaded]);\r\n    \t\r\n    const logIn = (name, password) => {\r\n        \r\n    };\r\n\r\n    const logOut = () => {\r\n        Api.Custom.LogOut({ [Api.AccessTokenHeaderName]: account?.AccessToken });\r\n\r\n        localStorage.removeItem(ACCOUNT_LS);\r\n        setAccount({});\r\n    };\r\n\r\n    var contextValue = {\r\n        loaded: loaded,\r\n        registered: account?.Id && account?.AccessToken ? true : false,\r\n        roles: account?.Roles ? account.Roles : [],\r\n        accessToken: account?.AccessToken,\r\n        id: account?.Id,\r\n        name: account?.Name,\r\n        logIn,\r\n        logOut,\r\n    };\r\n\r\n    return (\r\n        <AccountContext.Provider value={contextValue}>\r\n            {children}\r\n        </AccountContext.Provider>\r\n    );\r\n};\r\n\r\nexport function useAccount() {\r\n    return useContext(AccountContext);\r\n};\r\n\r\n/*************************/\r\n/* Local Login Functions */\r\n/*************************/\r\nexport async function GetUserIdByName(name, UsersApi) {\r\n    if (!name && name.length < 1) { return; }\r\n\r\n    const user = await UsersApi.GetByName(name);\r\n\r\n    if (user) {\r\n        return user.Id;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport async function CreateAccount(username, email, password, updateByLogIn, api) {\r\n\r\n    const newUser = await createUserObject(api.Custom, username, email, password);\r\n\r\n    var res = await api.Users.Create(newUser);\r\n\r\n    if (res === 'Error') { return false; }\r\n\r\n    updateByLogIn(newUser);\r\n\r\n    return true;\r\n};\r\n\r\nasync function encryptSHA256(CustomApi, value = '', salt = '') {\r\n    try\r\n    {\r\n        return await CustomApi.Encrypt(value, salt);\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nasync function generateSalt(CustomApi) {\r\n    try\r\n    {\r\n        return await CustomApi.GetSalt();\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nasync function createUserObject(CustomApi, username = '', email = '', password) {\r\n    const salt = await generateSalt(CustomApi);\r\n\r\n    return {\r\n        CountId: 0,\r\n        Id: '',\r\n        Name: username,\r\n        Email: email,\r\n        EmailConfirmed: false,\r\n        EmailConfirmationToken: '',\r\n        PasswordHashed: await encryptSHA256(CustomApi, password, salt),\r\n        Salt: salt,\r\n        PhoneNumber: \"00 000 0000\",\r\n        PhoneNumberConfirmed: false,\r\n        DOB: new Date(),\r\n        CreationDate: new Date(),\r\n        NAME_NORMALIZED: username.toUpperCase(),\r\n        EMAIL_NORMALIZED: email.toUpperCase(),\r\n        SecurityStamp: '',\r\n        ConcurrencyStamp: '',\r\n        LockoutEnabled: false,\r\n        lockoutEnd: null,\r\n        AccessFailedCount: 0,\r\n        Kitchen: null,\r\n        Roles: ((await CustomApi.PerformCustom('get', CustomApi.ApiUrl + \"/Roles/byname/Default\"))?.data) ?? [],\r\n        Deleted: false,\r\n    };\r\n};","import React, { Fragment } from \"react\";\r\nimport { useAccount } from \"../API/index\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nexport const Loading = ({ children }) => {\r\n    const classes = useStyles();\r\n    \r\n    const { loaded: accountLoaded } = useAccount();\r\n\r\n    let loaded = accountLoaded;\r\n\r\n    if (!loaded) {\r\n        return (\r\n            <div className={classes.container}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <Fragment>{children}</Fragment>;\r\n}","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function DrawerItem(props) {\r\n    return (\r\n        <ListItem button component={Link} to={props.link}>\r\n            <FontAwesomeIcon icon={props.icon} style={{ marginRight: '5px' }}/><ListItemText primary={props.text} onClick={props.onClick} />\r\n        </ListItem>\r\n    );\r\n};","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction Thumbnail({ source, size = 256 }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            style={{ border: 'solid 1px', width: ((size + 2) + \"px\").toString(), maxWidth: ((size + 2) + \"px\").toString(), height: ((size + 2) + \"px\").toString(), maxHeight: ((size + 2) + \"px\").toString() }}\r\n            className={classes.inputBox}\r\n        >\r\n            <img\r\n                alt=\"\"\r\n                src={source}\r\n                width={(size + \"px\").toString()}\r\n                height={(size + \"px\").toString()}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { Thumbnail };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Thumbnail } from \"./Thumbnail\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction ImageInputComponent({ variant = \"outlined\", defaultValue, onChange, isAsync = false }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n            <Grid style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Grid item xs={9} style={{ marginRight: '5px', display: 'flex', justifyContent: 'center' }}>\r\n                    <TextField\r\n                        className={classes.inputBox}\r\n                        variant={variant}\r\n                        id=\"Image\"\r\n                        label=\"Image\"\r\n                        value={value}\r\n                        type=\"text\"\r\n                        onChange={isAsync ? async (e) => {\r\n                            setValue(e.target.value);\r\n                            await onChange(e.target.value);\r\n                        } : (e) => {\r\n                            setValue(e.target.value);\r\n                            onChange(e.target.value);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3} style={{ display: 'flex', justifyContent: 'center', verticalAlign: 'center' }}>\r\n                    <Thumbnail source={value} size={50}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { ImageInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserInputComponent({ name, variant = \"outlined\", type = 'text', inputProps, defaultValue, onChange, isAsync = false }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    if (type === 'number') {\r\n        if (inputProps.step && inputProps.step === 1.00 && value % 1 !== 0) {\r\n            var correction = parseInt((parseFloat(value) + 0.50).toString()).toString();\r\n            if (correction === 0) {\r\n                correction = 1;\r\n            }\r\n\r\n            setValue(correction);\r\n            onChange(correction);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <TextField\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={value}\r\n                type={type}\r\n                inputProps={inputProps}\r\n                onChange={isAsync ? async (e) => {\r\n                    setValue(e.target.value);\r\n                    await onChange(e.target.value);\r\n                } : (e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Select, MenuItem, InputLabel } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserMultiSelectInputComponent({ name, variant = \"outlined\", defaultValues = [], options, onChange }) {\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    if ((!values || values.length < 1) && (defaultValues && defaultValues.length > 0)) {\r\n        setValues(defaultValues);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    const overrideOnChange = (value) => {\r\n        setValues(value);\r\n        onChange(value);\r\n    };\r\n\r\n    return (\r\n        <Grid>\r\n            <InputLabel id={name}/>\r\n            <Select\r\n                multiple={true}\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={values}\r\n                onChange={(e) => {\r\n                    overrideOnChange(e.target.value);\r\n                }}\r\n            > \r\n            {\r\n                options.map(option =>\r\n                    <MenuItem key={name + \"-\" + option.name} id={name + \"-\" + option.name} value={option.value} selected={values.indexOf(option.value) > -1}>{option.name}</MenuItem>\r\n                )\r\n            }\r\n            </Select>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserMultiSelectInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserSelectInputComponent({ name, variant = \"outlined\", defaultValue = '', options, onChange }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Select\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n            > \r\n            {\r\n                options.map(option =>\r\n                    <MenuItem key={option.id ?? options.name + '-' + option.value} value={option.value} selected={option.value === defaultValue}>{option.name}</MenuItem>\r\n                )\r\n            }\r\n            </Select>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserSelectInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction PreparationStepsInputComponent({ name, defaultValue = '', onChange }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    const updateValue = (newValue, index) => {\r\n        var updatedValue = value.split('{NEXT}')\r\n            .map((step, i) => {\r\n                if (i === index) {\r\n                    return newValue;\r\n                }\r\n                else {\r\n                    return step;\r\n                }\r\n            })\r\n            .join('{NEXT}');\r\n\r\n        setValue(updatedValue);\r\n        onChange(updatedValue);\r\n    };\r\n\r\n    const addStep = (newStepIndex) => {\r\n        const steps = value.split('{NEXT}');\r\n\r\n        var updatedValue;\r\n\r\n        if (newStepIndex === steps.length) {\r\n            updatedValue = value + \"{NEXT}Next step\";\r\n        }\r\n        else {\r\n            updatedValue = steps\r\n                .map((step, i) => {\r\n                    if (i === newStepIndex) {\r\n                        return \"Next step{NEXT}\" + step;\r\n                    }\r\n                    else {\r\n                        return step;\r\n                    }\r\n                })\r\n                .join('{NEXT}');\r\n        }\r\n\r\n        setValue(updatedValue);\r\n        onChange(updatedValue);\r\n    };\r\n\r\n    const removeStep = (index) => {\r\n        var stepValue = value.split('{NEXT}')[index];\r\n\r\n        if (stepValue) {\r\n            if ((value.split(stepValue).length - 1) === 1) {\r\n                var updatedValue = value.replace(stepValue, '').replace('{NEXT}{NEXT}', '{NEXT}');\r\n\r\n                if (updatedValue.endsWith('{NEXT}')) {\r\n                    updatedValue = updatedValue.substring(0, updatedValue.length - (\"{NEXT}\".length));\r\n                }\r\n\r\n                setValue(updatedValue);\r\n                onChange(updatedValue);\r\n            } else {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                    onClick={() => { addStep(0); }}>Add Step here</Button>\r\n            </Grid>\r\n            {\r\n                value.split('{NEXT}').map((step, index) => {\r\n                    return (\r\n                        <Grid container direction=\"row\"  style={{ marginBottom: '15px', borderTop: 'solid 1px' }}>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                Step {index + 1}:\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px', paddingTop: '10px', paddingBottom: '10px', borderBottom: 'solid 1px' }}>\r\n                                <TextField\r\n                                    className={classes.inputBox}\r\n                                    variant=\"outlined\"\r\n                                    id={name + \"-\" + index}\r\n                                    label={name + \" \" + (index + 1)}\r\n                                    value={step}\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        updateValue(e.target.value, index);\r\n                                    }}\r\n                                />\r\n                                <Button variant=\"outlined\" style={{ color: 'red', marginLeft: '10px' }}\r\n                                    onClick={() => { removeStep(index); }}>Remove Step</Button>\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                                    onClick={() => { addStep(index + 1); }}>Add Step here</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { PreparationStepsInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { TablePagination, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        marginBottom: theme.spacing(3),\r\n        minWidth: \"80%\",\r\n    },\r\n}));\r\n\r\nfunction EntityList({ rows, columns }) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer className={classes.tableContainer}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            style={{ minWidth: column.minWidth }}\r\n                        >\r\n                            {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id} onClick={row.onClick ? () => row.onClick(row.id) : () => {}}>\r\n                        {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                    {column.format ? (column.format(value)) ?? value : value}\r\n                                </TableCell>\r\n                            );\r\n                        })}\r\n                        </TableRow>\r\n                    );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { EntityList };","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { Ingredient, IngredientCategory } from \"../../models\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nfunction SelectIngredientComponent({ Api, ingredients, selectIngredient }) {\r\n    const [categories, setCategories] = useState([new IngredientCategory()]);\r\n    if (categories.length === 1 && categories[0].CountId === -1)\r\n    {\r\n        categories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [filterOptions, setFilterOptions] = useState({ name: '', categories: [] });\r\n\r\n    const filter = (ingredient = new Ingredient()) => {\r\n        return (\r\n            (filterOptions.name?.length > 0 ? ingredient.Name.toLowerCase().indexOf(filterOptions.name.toLowerCase()) > -1 : true) &&\r\n            (filterOptions.categories?.length > 0 ?\r\n                ingredient.Categories.filter(c => {\r\n                    return filterOptions.categories.filter(x => {\r\n                        return x === c.CountId;\r\n                    }).length > 0;\r\n                }).length > 0\r\n            : true)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container style={{ borderBottom: 'solid 1px', overflow: 'auto', paddingLeft: \"10px\" }}>\r\n                <Grid container direction=\"row\" style={{ marginBottom: '8px', display: 'flex', alignContent: 'center' }}><Typography variant=\"h5\">Filters</Typography></Grid>\r\n                <Grid container direction=\"column\" item xs={6} style={{ padding: '3px', display: 'flex', alignContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ marginRight: '5px', display: 'flex', alignContent: 'center' }}>Search:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center' }}>\r\n                        <UserInputComponent\r\n                            defaultValue={filterOptions.name}\r\n                            name=\"search by name\"\r\n                            onChange={(value) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ name: value } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"column\" item xs={6} style={{ padding: '3px', display: 'flex', alignContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ marginRight: '5px', display: 'flex', alignContent: 'center' }}>Categories:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center' }}>\r\n                        <UserMultiSelectInputComponent\r\n                            name=\"select categories\"\r\n                            defaultValue={filterOptions.categories}\r\n                            options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                            onChange={(values) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ categories: values } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ paddingLeft: \"10px\" }}>\r\n                <Typography variant=\"h3\">Select an ingredient</Typography>\r\n                <EntityList\r\n                    columns={[\r\n                        { id: 'image', label: '', minWidth: 50 },\r\n                        { id: 'name', label: 'Name', minWidth: 100 },\r\n                        { id: 'unitTypes', label: 'Available Types', minWidth: 125 },\r\n                        { id: 'categories', label: 'Categories', minWidth: 125 },\r\n                        { id: 'select', label: 'Choose', minWidth: 100 },\r\n                    ]}\r\n                    rows={ingredients.filter(i => filter(i)).map(ingredient => {\r\n                        return {\r\n                            id: ingredient.Id,\r\n                            image: <Thumbnail source={ingredient.ImageLocation} size={50} />,\r\n                            name: ingredient.Name,\r\n                            unitTypes: ingredient.UnitTypes.map((unitType, index) => { if (index > 0) return \", \" + unitType.Name; else return unitType.Name; }),\r\n                            categories: ingredient.Categories.map((category, index) => { if (index > 0) return \", \" + category.Name; else return category.Name; }),\r\n                            select: <Button onClick={() => selectIngredient(ingredient)} style={{ color: 'forestgreen' }}>Select</Button>,\r\n                            onClick: () => selectIngredient(ingredient)\r\n                        };\r\n                    })}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { SelectIngredientComponent };","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Button, Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { SelectIngredientComponent } from \"../Global/SelectIngredientComponent\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { Ingredient, RequirementsListIngredient, UnitType } from \"../../models\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\n\r\nfunction RequirementsInputComponent({ Api, defaultValues = [new RequirementsListIngredient()], parentRecipe, onChange }) {\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    if (!values && defaultValues) {\r\n        setValues(defaultValues);\r\n    }\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1)\r\n    {\r\n        ingredients?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((ingredients) => {\r\n            if (ingredients === \"Error\") { return; }\r\n        \r\n            setIngredients(ingredients);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1)\r\n    {\r\n        unitTypes?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((unitTypes) => {\r\n            if (unitTypes === \"Error\") { return; }\r\n        \r\n            setUnitTypes(unitTypes);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n    \r\n    const removeRequirement = (index) => {\r\n        setValues(values => { var vals = [...values]; vals.splice(index, 1); return vals; });\r\n\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects.pop();\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const addRequirement = () => {\r\n        setValues([...values, new RequirementsListIngredient(null, null, null, null, parentRecipe)]);\r\n\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects.push(false);\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const updateValue = (newValue, index, propName) => {\r\n        var updatedValues = [...values];\r\n\r\n        updatedValues[index][propName] = newValue;\r\n\r\n        setValues(updatedValues);\r\n        onChange(updatedValues);\r\n    };\r\n\r\n    const selectIngredient = (ingredient, index) => {\r\n        updateValue(ingredient, index, \"Ingredient\");\r\n        updateValue(ingredient.Id, index, \"IngredientId\");\r\n\r\n        closeIngredientSelect(index);\r\n    };\r\n\r\n    const openIngredientSelect = (index) => {\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects[index] = true;\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const closeIngredientSelect = (index) => {\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects[index] = false;\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const updateUnitType = (unitTypeId, index) => {\r\n        var unitType = unitTypes.find(u => u.CountId === unitTypeId);\r\n\r\n        updateValue(unitType, index, \"UnitType\");\r\n        updateValue(unitType.CountId, index, \"UnitTypeId\");\r\n    };\r\n\r\n    const [ingredientSelectsOpen, setIngredientSelectsOpen] = useState(defaultValues.map(val => false));\r\n\r\n    return (\r\n        <Grid>\r\n            {\r\n                values.map((requirement, index) => {\r\n                    const allowDecimals = ingredients.find(x => x.CountId === requirement.Ingredient?.CountId)?.UnitTypes.find(x => x.CountId === requirement.UnitType?.CountId)?.AllowDecimals ?? false;\r\n\r\n                    return (\r\n                        <Grid container direction=\"row\"  style={{ marginBottom: '15px', borderTop: 'solid 1px' }}>\r\n                            <Dialog open={ingredientSelectsOpen[index] ?? false} onClose={() => closeIngredientSelect(index)}>\r\n                                <DialogTitle>Ingredient</DialogTitle>\r\n                                <DialogContent>\r\n                                    <SelectIngredientComponent\r\n                                        Api={Api}\r\n                                        ingredients={ingredients.filter(i => values.filter(x => x.CountId === requirement.CountId).filter(x => x.Ingredient.CountId === i.CountId).length === 0)}\r\n                                        selectIngredient={(ingredient) => { selectIngredient(ingredient, index); }}\r\n                                    />\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                Requirement {index + 1}:\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                    <Button variant=\"outlined\" onClick={() => { openIngredientSelect(index); }}>{requirement.Ingredient?.Name.length > 0 ? requirement.Ingredient.Name : \"Choose Ingredient\"}</Button>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                    <UserInputComponent\r\n                                        name=\"Amount\"\r\n                                        defaultValue={requirement.Units}\r\n                                        inputProps={{ min: allowDecimals ? 0.01 : 1.00, max: 1000.00, step: allowDecimals ? 0.01 : 1.00 }}\r\n                                        type=\"number\"\r\n                                        onChange={(value) => {\r\n                                            updateValue(value, index, \"Units\");\r\n                                        }}\r\n                                    />\r\n                                    <UserSelectInputComponent\r\n                                        name=\"UnitTypes\"\r\n                                        defaultValue={requirement.UnitType.CountId}\r\n                                        options={requirement.Ingredient?.UnitTypes.map(unitType => { return { name: unitType.Name, value: unitType.CountId }; })}\r\n                                        onChange={(value) => {\r\n                                            updateUnitType(value, index);\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                                    <Button variant=\"outlined\" style={{ color: 'red', marginLeft: '10px' }}\r\n                                        onClick={() => { removeRequirement(index); }}>Remove Requirement</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                    onClick={() => { addRequirement(); }}>Add Requirement</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RequirementsInputComponent };","import { Button, Card, Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\nimport { ImageInputComponent } from \"../components/Global/ImageInputComponent\";\r\nimport { Thumbnail } from \"../components/Global/Thumbnail\";\r\nimport { UserInputComponent } from \"../components/Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../components/Global/UserMultiSelectInputComponent\";\r\nimport { UserSelectInputComponent } from \"../components/Global/UserSelectInputComponent\";\r\nimport { PreparationStepsInputComponent } from \"../components/RecipeBook/preparationStepsInputComponent\";\r\nimport { RequirementsInputComponent } from \"../components/RecipeBook/RequirementsInputComponent\";\r\n\r\n//import { Ingredient, IngredientCategory, Recipe, RecipeCategory, UnitType } from \"../models\";\r\n\r\nfunction CreateIngredientEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <ImageInputComponent\r\n                    defaultValue={item?.ImageLocation}\r\n                    onChange={(value) => { onItemEdited({ ImageLocation: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"UnitTypes\"\r\n                    defaultValues={item?.UnitTypes.map(unitType => unitType.CountId)}\r\n                    options={ApiTables.unitTypes.map(unitType => { return { name: unitType.Name, value: unitType.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ UnitTypes: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Weight /Unit (Kg)\"\r\n                    defaultValue={item?.AverageWeightInKgPerUnit}\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        step: 0.00,\r\n                        min: 0.01,\r\n                        max: 1000.00,\r\n                    }}\r\n                    onChange={(value) => { onItemEdited({ AverageWeightInKgPerUnit: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Volume /Unit (L)\"\r\n                    defaultValue={item?.AverageVolumeInLiterPerUnit}\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        step: 0.00,\r\n                        min: 0.01,\r\n                        max: 1000.00,\r\n                    }}\r\n                    onChange={(value) => { onItemEdited({ AverageVolumeInLiterPerUnit: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    defaultValues={item?.Categories.map(cat => cat.CountId)}\r\n                    options={ApiTables.ingredientCategories.map(cat => { return { name: cat.Name, value: cat.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ Categories: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateIngredientCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateUnitTypeEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserSelectInputComponent\r\n                    name=\"AllowDecimals\"\r\n                    defaultValue={item?.AllowDecimals}\r\n                    options={[{ name: 'Decimals', value: true }, { name: 'Integers', value: false }]}\r\n                    onChange={(value) => { onItemEdited({ AllowDecimals: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeEditPage(item, notEditableProps, ApiTables, onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen, preparationStepsCount = 0, requirementsCount = 0 }) {\r\n    \r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Dialog keepMounted open={preparationStepsOpen ?? false} onClose={() => setPreparationStepsOpen(false)}>\r\n                <DialogTitle>Preparation Steps</DialogTitle>\r\n                <DialogContent>\r\n                    <PreparationStepsInputComponent\r\n                        name=\"Preparation Step\"\r\n                        defaultValue={item?.PreparationSteps}\r\n                        onChange={(value) => { onItemEdited({ PreparationSteps: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog keepMounted open={requirementsListOpen ?? false} onClose={() => setRequirementsListOpen(false)}>\r\n                <DialogTitle>RequirementsList</DialogTitle>\r\n                <DialogContent>\r\n                    <RequirementsInputComponent\r\n                        Api={Api}\r\n                        defaultValues={item?.RequirementsList}\r\n                        parentRecipe={item}\r\n                        onChange={(value) => { onItemEdited({ RequirementsList: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Description\"\r\n                    defaultValue={item?.Description}\r\n                    onChange={(value) => { onItemEdited({ Description: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <ImageInputComponent\r\n                    defaultValue={item?.ImageLocation}\r\n                    onChange={(value) => { onItemEdited({ ImageLocation: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Tutorial Video\"\r\n                    defaultValue={item?.VideoTutorialLink}\r\n                    onChange={(value) => { onItemEdited({ VideoTutorialLink: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <Button variant=\"outlined\" onClick={() => setPreparationStepsOpen(true)}>\r\n                    {preparationStepsCount} Steps\r\n                </Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <Button variant=\"outlined\" onClick={() => setRequirementsListOpen(true)}>\r\n                    {requirementsCount} Requirements\r\n                </Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserSelectInputComponent\r\n                    Name={\"Public?\"}\r\n                    defaultValue={item?.IsPublic}\r\n                    options={[\r\n                        { name: \"Public\", value: true },\r\n                        { name: \"Private\", value: false },\r\n                    ]}\r\n                    onChange={(value) => { onItemEdited({ IsPublic: value }) }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    defaultValues={item?.Categories.map(cat => cat.CountId)}\r\n                    options={ApiTables.recipeCategories.map(cat => { return { name: cat.Name, value: cat.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ Categories: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateEditPage(item, tableName, notEditableProps, ApiTables, onItemEdited, Api, additionals) {\r\n    switch (tableName) {\r\n        case \"Ingredients\":\r\n            return CreateIngredientEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"IngredientCategories\":\r\n            return CreateIngredientCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"UnitTypes\":\r\n            return CreateUnitTypeEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"Recipes\":\r\n            return CreateRecipeEditPage(item, notEditableProps, ApiTables, onItemEdited, Api, additionals);\r\n\r\n        case \"RecipeCategories\":\r\n            return CreateRecipeCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        default:\r\n            return (\r\n                <></>\r\n            );\r\n    };\r\n};\r\n\r\nfunction CreateIngredientDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Image:\r\n                {\r\n                    item?.ImageLocation ?\r\n                        <Thumbnail source={item.ImageLocation} size={50} />\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                UnitTypes:\r\n                {\r\n                    item?.UnitTypes.map(unitType => <Card key={unitType.CountId} style={{ margin: '2px', padding: '3px' }}>{unitType.Name}</Card>)\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Average Weight per Unit: {item?.AverageWeightInKgPerUnit} Kg / Unit\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Average Volume per Unit: {item?.AverageVolumeInLiterPerUnit} L / Unit\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Categories:\r\n                {\r\n                    item?.Categories.map(cat => <Card key={cat.CountId} style={{ margin: '2px', padding: '3px' }}>{cat.Name}</Card>)\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateIngredientCategoryDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateUnitTypeDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Allow Decimals: {item?.AllowDecimals ? \"True\" : \"False\"}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeDetailsPage(item) {\r\n    \r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Description: {item?.Description}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Image:\r\n                {\r\n                    item?.ImageLocation ?\r\n                        <Thumbnail source={item.ImageLocation} size={50} />\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Tutorial Video: {item?.VideoTutorialLink ? <a href={item?.VideoTutorialLink}>Click here to watch</a> : \"Not set\"}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Preparation Steps:\r\n                {\r\n                    item?.PreparationSteps ?\r\n                    item.PreparationSteps.split('{NEXT}').map((step, index) =>\r\n                        <Card key={index} style={{ margin: '2px', padding: '3px' }}>\r\n                            Step {index}. {step}\r\n                        </Card>\r\n                    )\r\n                    : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Requirements:\r\n                {\r\n                    item?.RequirementsList ?\r\n                        item.RequirementsList.map((requirement, index) =>\r\n                            <Card key={requirement.CountId} style={{ margin: '2px', padding: '3px' }}>\r\n                                {requirement.Ingredient.Name} - {requirement.Units} {requirement.unitType.Name}\r\n                            </Card>\r\n                        )\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Public: {item?.IsPublic ? \"Public\" : \"Private\"}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Categories:\r\n                {\r\n                    item?.Categories.map(cat => <Card key={cat.CountId} style={{ margin: '2px', padding: '3px' }}>{cat.Name}</Card>)\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeCategoryDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateDetailsPage(item, tableName) {\r\n    switch (tableName) {\r\n        case \"Ingredients\":\r\n            return CreateIngredientDetailsPage(item);\r\n\r\n        case \"IngredientCategories\":\r\n            return CreateIngredientCategoryDetailsPage(item);\r\n\r\n        case \"UnitTypes\":\r\n            return CreateUnitTypeDetailsPage(item);\r\n\r\n        case \"Recipes\":\r\n            return CreateRecipeDetailsPage(item);\r\n\r\n        case \"RecipeCategories\":\r\n            return CreateRecipeCategoryDetailsPage(item);\r\n\r\n        default:\r\n            return (\r\n                <></>\r\n            );\r\n    };\r\n};\r\n\r\nfunction generateCRUDInfo(tableName, displayName, notEditableProps, context) {\r\n    context[tableName] = {\r\n        DisplayName: displayName,\r\n        getEditPage: (item, ApiTables, onItemEdited, Api, additionals) => {\r\n            return (\r\n                <Grid container direction=\"row\">\r\n                    {\r\n                        CreateEditPage(item, tableName, notEditableProps, ApiTables, onItemEdited, Api, additionals)\r\n                    }\r\n                </Grid>\r\n            );\r\n        },\r\n        getDetailsPage: (item, ApiTables, onItemEdited, Api, additionals) => {\r\n            return (\r\n                <Grid container direction=\"row\">\r\n                    {\r\n                        CreateDetailsPage(item, tableName)\r\n                    }\r\n                </Grid>\r\n            );\r\n        },\r\n    };\r\n};\r\n\r\nclass CRUDPagesInformation {\r\n    constructor() {\r\n        this.Pages = {};\r\n\r\n        generateCRUDInfo('Ingredients', 'Ingredients', [\"CountId\", \"Id\"], this.Pages);\r\n\r\n        generateCRUDInfo('IngredientCategories', 'Ingredient Categories', [\"CountId\"], this.Pages);\r\n\r\n        generateCRUDInfo('UnitTypes', 'Unit Types',[\"CountId\"], this.Pages);\r\n\r\n        generateCRUDInfo('Recipes', 'Recipes', [\"CountId\", \"Id\", \"User\", \"UserId\"], this.Pages);\r\n\r\n        generateCRUDInfo('RecipeCategories', 'Recipe Categories', [\"CountId\"], this.Pages);\r\n    };\r\n\r\n    Pages = {};\r\n};\r\n\r\nconst CRUDPagesInfo = new CRUDPagesInformation();\r\n\r\nexport default CRUDPagesInfo;","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport DrawerItem from \"./DrawerItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { faBook, faBookOpen, faHome, faListAlt, faMortarPestle, faUsers, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerheader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        backgroundColor: '#ffbb00',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    chevron: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nfunction AppDrawer({ open, onOpen, isAdmin, isCreator, isCook }) {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerheader}>\r\n                <Typography variant=\"h5\" noWrap style={{ marginLeft: \"8px\" }}>\r\n                    Recipe Finder\r\n                </Typography>\r\n                <div className={classes.chevron}>\r\n                    <IconButton onClick={() => onOpen(false)}>\r\n                        {\r\n                            theme.direction === \"itr\" ? (\r\n                                <ChevronLeftIcon />\r\n                            ) : (\r\n                                <ChevronRightIcon />\r\n                            )\r\n                        }\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                <div>\r\n                    <i style={{ marginLeft: '10px' }}>Pages</i>\r\n                    <DrawerItem icon={faHome} link=\"/home/index\" text=\"Home\" />\r\n                    <DrawerItem icon={faUtensils} link=\"/kitchen/index\" text=\"Your Kitchen\" />\r\n                    <DrawerItem icon={faBookOpen} link=\"/recipebook/index\" text=\"Recipe Book\" />\r\n                    <DrawerItem icon={faListAlt} link=\"/kitchen/index\" text=\"Grocery List\" />\r\n                </div>\r\n            </List>\r\n            {\r\n                isCook ? (\r\n                    <div>\r\n                        <Divider />\r\n                        <List>\r\n                            <i style={{ marginLeft: '10px' }}>Cook</i>\r\n                            <DrawerItem icon={faMortarPestle} link=\"/recipebook/custom/index\" text=\"Your Recipes\" />\r\n                        </List>\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )\r\n            }\r\n            {\r\n                isCreator ? (\r\n                    <div>\r\n                        <Divider />\r\n                        <List>\r\n                        <i style={{ marginLeft: '10px' }}>Creator</i>\r\n                            {\r\n                                Object.keys(CRUDPagesInfo.Pages).map((CRUD, index) => {\r\n                                    return (\r\n                                        <DrawerItem icon={faBook} key={`${CRUD}-${index}`} link={`/${CRUD}/index`} text={CRUDPagesInfo.Pages[CRUD].DisplayName} />\r\n                                    );\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )\r\n            }\r\n            {\r\n                isAdmin ? (\r\n                <div>\r\n                    <Divider />\r\n                    <List>\r\n                        <i style={{ marginLeft: '10px' }}>Admin</i>\r\n                        <DrawerItem icon={faUsers} link=\"/accounts/index\" text=\"Accounts\" />\r\n                    </List>\r\n                </div>\r\n                ) : (\r\n                    <div></div>\r\n                )\r\n            }\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport { AppDrawer, drawerWidth };","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBookOpen, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction HomePage({ setTitle, name, userId }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Home\");\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.form} style={{ height: window.innerHeight * 0.6 }}>\r\n            <Typography className={classes.txt} variant=\"h1\">\r\n                Hello {name}!\r\n            </Typography>\r\n            <Link to=\"/kitchen/index\" style={{ width: '100%', height: '50%', margin: '.5rem', textDecoration: 'none' }}>\r\n                <Button style={{ backgroundColor: 'skyblue', marginBottom: '10px', width: \"100%\", height: \"100%\", fontSize: 25 }}><FontAwesomeIcon icon={faUtensils} style={{ marginRight: '5px' }}/>Your Kitchen</Button>\r\n            </Link>\r\n            <Link to=\"/recipebook/index\" style={{ width: '100%', height: '50%', margin: '.5rem', textDecoration: 'none' }}>\r\n                <Button style={{ backgroundColor: 'forestgreen', marginBottom: '10px', width: \"100%\", height: \"100%\", fontSize: 25 }}><FontAwesomeIcon icon={faBookOpen} style={{ marginRight: '5px' }}/>Recipe Book</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { HomePage };","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { TablePagination, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        marginBottom: theme.spacing(3),\r\n        minWidth: \"80%\",\r\n    },\r\n}));\r\n\r\nfunction KitchenList({ rows, columns }) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer className={classes.tableContainer}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            style={{ minWidth: column.minWidth }}\r\n                        >\r\n                            {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                        {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                {column.format && typeof value === 'number' ? column.format(value) :\r\n                                    column.id === 'units' ?\r\n                                    <div>\r\n                                        {(() => {\r\n                                            var val = value;\r\n                                            if (row.editComponent) {\r\n                                                return row.editComponent;\r\n                                            }\r\n                                            if (row.removeComponent) {\r\n                                                return row.removeComponent;\r\n                                            }\r\n                                            return val;\r\n                                        })()}\r\n                                    </div> : value\r\n                                }\r\n                                </TableCell>\r\n                            );\r\n                        })}\r\n                        </TableRow>\r\n                    );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { KitchenList };","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    rowActionsContainer: {\r\n\r\n    }\r\n}));\r\n\r\nfunction RowActions({ rowEntityId, rowEntity, onDetails, onEdit, onRemove })\r\n{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.rowActionsContainer}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                {onDetails ? <Button id={rowEntityId} onClick={(e) => onDetails(rowEntityId)} style={{ color: 'skyblue' }}><FontAwesomeIcon icon={faEye} /></Button> : ''}\r\n                {onEdit ? <Button id={rowEntityId} onClick={(e) => onEdit(rowEntityId)} style={{ color: 'gold' }}><FontAwesomeIcon icon={faPen} /></Button> : ''}\r\n                {onRemove ? <Button id={rowEntityId} onClick={(e) => onRemove(rowEntityId)} style={{ color: 'red' }}><FontAwesomeIcon icon={faTrash} /></Button> : ''}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RowActions };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { KitchenList } from \"./KitchenList\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { KitchenIngredient } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction KitchenHomePage({ setTitle, userId, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Kitchen\");\r\n    });\r\n    \r\n    const [kitchen, setKitchen] = useState({\r\n        UserId: '',\r\n        User: '',\r\n        Ingredients: [new KitchenIngredient()],\r\n    });\r\n    if (kitchen?.Ingredients.length === 1 && kitchen.Ingredients[0].Units === 0.00)\r\n    {\r\n        kitchen.Ingredients.pop();\r\n    }\r\n\r\n    const [editingIngredients, setEditingIngredients] = useState([]);\r\n    const [removingIngredients, setRemovingIngredients] = useState([]);\r\n\r\n    const [updates, setUpdates] = useState({});\r\n    const [unitTypeChanges, setUnitTypeChanges] = useState(0);\r\n    if (!updates && unitTypeChanges) {\r\n        setUpdates({});\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        Api.Kitchens.GetKitchenByUserId(userId).then((kitchen) => {\r\n            if (kitchen === \"Error\") { return; }\r\n        \r\n            setKitchen(kitchen);\r\n        });\r\n    }, [Api.Kitchens, userId]);\r\n\r\n    const ToggleEdit = (id) => {\r\n        if (editingIngredients.indexOf(id) > -1) {\r\n            setEditingIngredients(editingIngredients => editingIngredients.filter(x => x !== id));\r\n            setUpdates(updates => { updates[id] = undefined; return updates; });\r\n        }\r\n        else {\r\n            setEditingIngredients(editingIngredients => [...editingIngredients, id]);\r\n            setRemovingIngredients(removingIngredients => removingIngredients.filter(x => x !== id));\r\n        }\r\n    };\r\n\r\n    const onEdit = async (id) => {\r\n        if (!updates[id]) return;\r\n\r\n        await Api.Kitchens.Update(updates[id].CountId, updates[id]);\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    const onUnitsEdited = (id, newUnits) => {\r\n        if (!updates[id]) updates[id] = kitchen.Ingredients.find(x => x.IngredientId === id);\r\n\r\n        updates[id].Units = parseFloat(newUnits);\r\n\r\n        setUpdates(updates => updates);\r\n    };\r\n\r\n    const onUnitTypeEdited = (id, newUnitType) => {\r\n        if (!updates[id]) updates[id] = kitchen.Ingredients.find(x => x.IngredientId === id);\r\n\r\n        updates[id].UnitTypeId = parseInt(newUnitType);\r\n\r\n        setUpdates(x => updates);\r\n\r\n        setUnitTypeChanges(unitTypeChanges => unitTypeChanges + 1);\r\n    };\r\n\r\n    const ToggleRemove = (id) => {\r\n        if (removingIngredients.indexOf(id) > -1) {\r\n            setRemovingIngredients(removingIngredients => removingIngredients.filter(x => x !== id));\r\n        }\r\n        else {\r\n            setRemovingIngredients(removingIngredients => [...removingIngredients, id]);\r\n            setEditingIngredients(editingIngredients => editingIngredients.filter(x => x !== id));\r\n        }\r\n    };\r\n\r\n    const onRemove = (id) => {\r\n        var ingredient = kitchen.Ingredients.find(x => x.Ingredient.Id === id);\r\n\r\n        Api.Kitchens.Delete(kitchen.UserId + \"/\" + ingredient.IngredientId, ingredient);\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <Grid className={classes.form}>\r\n            <Typography className={classes.txt} variant=\"h3\">\r\n                {kitchen?.User.Name}'s Kitchen\r\n            </Typography>\r\n\r\n            {!kitchen || kitchen.Ingredients.length < 1 ?\r\n                \"No ingredients in your kitchen.\" :\r\n                <KitchenList\r\n                    columns={[\r\n                        { id: 'image', label: '', minWidth: 50 },\r\n                        { id: 'name', label: 'Name', minWidth: 150 },\r\n                        { id: 'units', label: 'Amount', minWidth: 100 },\r\n                        { id: 'actions', label: 'Actions', minWidth: 200 },\r\n                    ]}\r\n                    rows={kitchen?.Ingredients.map(ingredient => {\r\n                        const updatedUnitType = ingredient.Ingredient.UnitTypes.find(x => x.CountId === updates[ingredient.IngredientId]?.UnitTypeId);\r\n\r\n                        const allowDecimals = updatedUnitType ? updatedUnitType.AllowDecimals : ingredient.UnitType.AllowDecimals;\r\n\r\n                        return {\r\n                            id: ingredient.IngredientId,\r\n                            image: <Thumbnail source={ingredient.Ingredient.ImageLocation} size=\"50px\" />,\r\n                            name: ingredient.Ingredient.Name,\r\n                            units: ingredient.Units + \" \" + ingredient.UnitType.Name,\r\n                            actions: <RowActions rowEntity={ingredient} rowEntityId={ingredient.IngredientId} onEdit={ToggleEdit} onRemove={ToggleRemove} />,\r\n                            editComponent: editingIngredients.indexOf(ingredient.Ingredient.Id) > -1 ?\r\n                                <div>\r\n                                    <UserInputComponent onChange={(value) => onUnitsEdited(ingredient.IngredientId, value)} name=\"Units\" defaultValue={ingredient.Units}\r\n                                        type=\"number\" inputProps={{ min: allowDecimals ? 0.01 : 1.00, max: 1000.00, step: allowDecimals ? 0.01 : 1.00 }} />\r\n                                    <UserSelectInputComponent onChange={(value) => onUnitTypeEdited(ingredient.IngredientId, value)} name=\"Unit Type\" defaultValue={ingredient.UnitType.CountId} type=\"number\"\r\n                                        options={ingredient.Ingredient.UnitTypes.map(unitType => { return { id: unitType.CountId, name: unitType.Name, value: unitType.CountId } })} />\r\n                                    <Button id={ingredient.IngredientId} style={{ backgroundColor: 'forestgreen', marginRight: '5px' }} onClick={async (e) => await onEdit(ingredient.IngredientId)}>Save</Button>\r\n                                    <Button id={ingredient.IngredientId} style={{ backgroundColor: 'gold' }} onClick={(e) => ToggleEdit(ingredient.Ingredient.Id)}>Cancel</Button>\r\n                                </div> : null,\r\n                            removeComponent: removingIngredients.indexOf(ingredient.Ingredient.Id) > -1 ?\r\n                                <div>\r\n                                    Are you sure you want to remove this ingredient?\r\n                                    <Button id={ingredient.IngredientId} style={{ backgroundColor: 'red', marginRight: '5px' }} onClick={async (e) => await onRemove(ingredient.IngredientId)}>Remove</Button>\r\n                                    <Button id={ingredient.IngredientId} style={{ backgroundColor: 'forestgreen' }} onClick={(e) => ToggleRemove(ingredient.IngredientId)}>Cancel</Button>\r\n                                </div> : null,\r\n                        }\r\n                    }) ?? []}\r\n                />\r\n            }\r\n            <Link to=\"/kitchen/add\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add Ingredients</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { KitchenHomePage };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faBackward, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Ingredient } from \"../../models\";\r\nimport { SelectIngredientComponent } from \"../Global/SelectIngredientComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ingredientSelectContainer: {\r\n\r\n    },\r\n    ingredientSelectedContainer: {\r\n\r\n    }\r\n}));\r\n\r\nfunction AddIngredients({ setTitle, userId, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Add Ingredients\");\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const [unitTypeChanges, setUnitTypeChanges] = useState(0);\r\n    const [selectedIngredient, setSelectedIngredient] = useState({});\r\n    const [saveIngredient, setSaveIngredient] = useState({\r\n        UserId: userId,\r\n        IngredientId: '',\r\n        Units: 0.0,\r\n        UnitTypeId: 1,\r\n    });\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1 && unitTypeChanges)\r\n    {\r\n        ingredients?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((ingredients) => {\r\n            if (ingredients === \"Error\") { return; }\r\n        \r\n            setIngredients(ingredients);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const selectIngredient = (ingredient) => {\r\n        setSelectedIngredient(ingredient);\r\n\r\n        saveIngredient.IngredientId = ingredient.Id;\r\n        saveIngredient.UnitTypeId = ingredient.UnitTypes[0].CountId;\r\n        saveIngredient.Units = 1.00;\r\n        setSaveIngredient(saveIngredient);\r\n    };\r\n\r\n    const SaveIngredient = () => {\r\n        if (saveIngredient.IngredientId && saveIngredient.UserId &&\r\n            saveIngredient.Units && saveIngredient.UnitTypeId) {\r\n            \r\n            Api.Kitchens.Create(saveIngredient);\r\n        }\r\n    };\r\n\r\n    const allowDecimals = ingredients.find(x => x.Id === selectedIngredient.Id)?.UnitTypes.find(x => x.CountId === saveIngredient.UnitTypeId)?.AllowDecimals;\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n        >\r\n            <Grid style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px' }}>\r\n                <Grid\r\n                    className={classes.ingredientSelectedContainer}\r\n                    item\r\n                    xs={6}\r\n                >\r\n                    {selectedIngredient && selectedIngredient.Id ?\r\n                        <>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid>\r\n                                        <Thumbnail source={selectedIngredient.ImageLocation} size={50} />\r\n                                    </Grid>\r\n                                    <Grid style={{ marginLeft: '5px' }}>\r\n                                        <Typography variant=\"h5\">{selectedIngredient.Name}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid>\r\n                                        <UserInputComponent type=\"number\" name=\"Amount\" defaultValue={1.0} inputProps={{ min: allowDecimals ? 0.01 : 1.00, max: 1000.00, step: allowDecimals ? 0.01 : 1.00 }}\r\n                                            onChange={(value) => { saveIngredient.Units = parseFloat(value); setSaveIngredient(saveIngredient); }} />\r\n                                    </Grid>\r\n                                    <Grid style={{ marginLeft: '5px' }}>\r\n                                        <UserSelectInputComponent name=\"Unit Type\" options={selectedIngredient.UnitTypes.map(unitType => { return { value: unitType.CountId, name: unitType.Name }; })}\r\n                                            onChange={(value) => { saveIngredient.UnitTypeId = parseInt(value); setSaveIngredient(saveIngredient); setUnitTypeChanges(unitTypeChanges => unitTypeChanges + 1); }} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button onClick={SaveIngredient} variant=\"outlined\" style={{ marginTop: \"20px\", color: 'green' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add Ingredient</Button>\r\n                        </>\r\n                        :\r\n                        <Typography variant=\"h5\">Select an ingredient on the right. <FontAwesomeIcon icon={faArrowRight}/></Typography>\r\n                    }\r\n                </Grid>\r\n                <Grid\r\n                    className={classes.ingredientSelectContainer}\r\n                    style={{ borderLeft: \"solid 1px\", height: window.innerHeight * 0.8 }}\r\n                    xs={6}\r\n                >\r\n                    <SelectIngredientComponent\r\n                        Api={Api}\r\n                        ingredients={ingredients}\r\n                        selectIngredient={selectIngredient}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/kitchen/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Kitchen</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { AddIngredients };","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { TablePagination, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        marginBottom: theme.spacing(3),\r\n        minWidth: \"80%\",\r\n    },\r\n}));\r\n\r\nfunction RecipeList({ rows, columns }) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer className={classes.tableContainer}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            style={{ minWidth: column.minWidth }}\r\n                        >\r\n                            {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                        {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                {column.format && typeof value === 'number' ? column.format(value) :\r\n                                    column.id === 'units' ?\r\n                                    <div>\r\n                                        {(() => {\r\n                                            var val = value;\r\n                                            if (row.editComponent) {\r\n                                                return row.editComponent;\r\n                                            }\r\n                                            if (row.removeComponent) {\r\n                                                return row.removeComponent;\r\n                                            }\r\n                                            return val;\r\n                                        })()}\r\n                                    </div> : value\r\n                                }\r\n                                </TableCell>\r\n                            );\r\n                        })}\r\n                        </TableRow>\r\n                    );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { RecipeList };","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\nimport { Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { RecipeList } from \"./RecipeList\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCross, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction RecipeBookHomePage({ setTitle, isCook, userId, Api, defaultRecipeListState = 1 }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"RecipeBook\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [recipeListState, setRecipeListState] = useState(defaultRecipeListState);\r\n    \r\n    const [recipes, setRecipes] = useState([new Recipe()]);\r\n    if (recipes.length === 1 && recipes[0].CountId === -1)\r\n    {\r\n        recipes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        (recipeListState === 0 ? Api.Recipes.GetAllFromCook(userId) :\r\n        recipeListState === 1 ? Api.Recipes.GetPreparableForUser(userId) :\r\n        Api.Recipes.GetAll()).then((recipes) => {\r\n            if (recipes === \"Error\") { return; }\r\n        \r\n            setRecipes(recipes);\r\n        });\r\n    }, [Api.Recipes, userId, recipeListState]);\r\n\r\n    const onDetails = (recipeId) => {\r\n        history.push('/recipebook/details/' + recipeId);\r\n    };\r\n\r\n    const onEdit = (recipeId) => {\r\n        history.push('/recipebook/custom/edit/' + recipeId);\r\n    };\r\n\r\n    const [removeItem, setRemoveItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const ToggleRemove = (recipeId) => {\r\n        const item = recipes.find(x => x.CountId === recipeId);\r\n\r\n        if (item) {\r\n            setRemoveItem({ item: item, dialogOpened: !removeItem.dialogOpened });\r\n        }\r\n        else {\r\n            console.log(`No item found with key '${recipeId}'!`);\r\n        }\r\n    };\r\n\r\n    const onRemove = (recipeId) => {\r\n        Api.Recipes.Delete(recipeId);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n    if (categories.length === 1 && categories[0].CountId === -1)\r\n    {\r\n        categories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const [filterOptions, setFilterOptions] = useState({ name: '', categories: [] });\r\n\r\n    const filter = (recipe = new Recipe()) => {\r\n        return (\r\n            (filterOptions.name?.length > 0 ? recipe.Name.toLowerCase().indexOf(filterOptions.name.toLowerCase()) > -1 : true) &&\r\n            (filterOptions.categories?.length > 0 ?\r\n                recipe.Categories.filter(c => {\r\n                    return filterOptions.categories.filter(x => {\r\n                        return x === c.CountId;\r\n                    }).length > 0;\r\n                }).length > 0\r\n            : true)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n        >\r\n            <Dialog open={removeItem.dialogOpened} onClose={() => setRemoveItem(removeItem => { removeItem.dialogOpened = false; return removeItem })}>\r\n                <DialogTitle>Remove item {removeItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove this recipe: {removeItem.item.Name} ?<br />\r\n                    <Button onClick={() => onRemove(removeItem.item.CountId)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faCross} style={{ marginRight: '5px' }}/> Remove</Button>\r\n                    <Button onClick={() => ToggleRemove(removeItem.item.CountId)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid item xs={7}>\r\n                <Typography className={classes.txt} variant=\"h3\">\r\n                    {recipeListState === 0 ? \"Custom\" : recipeListState === 1 ? \"Preparable\" : \"Full\"} Recipe Book\r\n                </Typography>\r\n\r\n                {\r\n                    isCook && recipeListState === 0 ?\r\n                        <Grid>\r\n                            <Link to={\"/recipebook/custom/create\"}>\r\n                                <Button variant=\"outlined\" style={{ marginTop: \"20px\", color: 'green' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add Custom Recipe</Button>\r\n                            </Link>\r\n                        </Grid>\r\n                        : <></>\r\n                }\r\n                {recipes.length < 1 ?\r\n                    \"No recipes found.\" :\r\n                    <RecipeList\r\n                        columns={(() => {\r\n                            var columns = [\r\n                                { id: 'image', label: '', minWidth: 50 },\r\n                                { id: 'name', label: 'Name', minWidth: 150 },\r\n                                { id: 'category', label: 'Category', minWidth: 100 },\r\n                                { id: 'actions', label: 'Actions', minWidth: 200 },\r\n                            ];\r\n\r\n                            if (isCook && recipeListState === 0) {\r\n                                columns.push({ id: 'public', label: 'Public', minWidth: 50 });\r\n                            }\r\n\r\n                            return columns;\r\n                        })()}\r\n                        rows={recipes.filter(r => filter(r)).map(recipe => {\r\n                            var row = {\r\n                                id: recipe.Id,\r\n                                image: <Thumbnail source={recipe.ImageLocation} size={50} />,\r\n                                name: recipe.Name,\r\n                                actions: isCook && recipeListState === 0 ? <RowActions rowEntity={recipe} rowEntityId={recipe.Id} onDetails={onDetails} onEdit={onEdit} onRemove={() => ToggleRemove(recipe.CountId)} />\r\n                                    : <RowActions rowEntity={recipe} rowEntityId={recipe.Id} onDetails={onDetails} />,\r\n                            };\r\n\r\n                            if (isCook && recipeListState === 0) {\r\n                                row.public = recipe.IsPublic ? \"Public\" : \"Private\";\r\n                            }\r\n\r\n                            return row;\r\n                        })}\r\n                    />\r\n                }\r\n            </Grid>\r\n            <Grid item xs={4} style={{ borderLeft: 'solid 1px', marginLeft: '5px', padding: '5px', overflow: 'auto' }}>\r\n                <Grid container direction=\"row\" style={{ marginBottom: '8px', display: 'flex', alignContent: 'center' }}><Typography variant=\"h5\">Filters</Typography></Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center', marginBottom: '2px' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Showing:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={() => setRecipeListState(recipeListState => recipeListState + 1 > 2 ? (isCook ? 0 : 1) : recipeListState + 1)}\r\n                            style={{ width: '80%', backgroundColor: recipeListState === 0 ? \"orange\" : recipeListState === 1 ? \"#ffbb00\" : \"green\" }}>\r\n                            {recipeListState === 0 ? \"Your Custom Recipes\" : recipeListState === 1 ? \"Recipes You Can Prepare\" : \"All Recipes\"}\r\n                            <FontAwesomeIcon icon={faSync} style={{ marginLeft: '5px' }} />\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <UserInputComponent\r\n                        defaultValue={filterOptions.name}\r\n                        name=\"search by name\"\r\n                        onChange={(value) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ name: value } }; })}\r\n                    />\r\n                </Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Categories:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <UserMultiSelectInputComponent\r\n                            name=\"select categories\"\r\n                            defaultValue={filterOptions.categories}\r\n                            options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                            onChange={(values) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ categories: values } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RecipeBookHomePage };","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Recipe } from \"../../models\";\r\nimport { Button, Card, Grid, Link } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function RecipeDetailsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Recipe Details\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [recipeDetails, setRecipeDetails] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setRecipeDetails(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onTutorial = () => {\r\n        history.push(`/recipebook/tutorial/${recipeId}`);\r\n    };\r\n\r\n    return (\r\n        <Grid className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {recipeDetails.Name} Details\r\n            </Typography>\r\n            <Grid style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px' }}>\r\n                <Typography>\r\n                    Name: {recipeDetails.Name}\r\n                </Typography>\r\n                <Typography>\r\n                    Created by: {recipeDetails.User.Name}\r\n                </Typography>\r\n                <Typography>\r\n                    Categories:\r\n                </Typography>\r\n                {recipeDetails.Categories.map(cat =>\r\n                        <Card key={`${cat.Name}-${cat.CountId}`} variant=\"outlined\" style={{ margin: '2px', padding: '5px' }}>{cat.Name}</Card>\r\n                    )}\r\n                <Button variant=\"outlined\" onClick={onTutorial} style={{ marginTop: '15px' }}>View Tutorial</Button>\r\n            </Grid>\r\n            <Link to=\"/recipebook/custom/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Recipe } from \"../../models\";\r\nimport { Button, Grid, Table, TableBody, TableCell, TableRow } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward, faList, faVideo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function RecipeTutorialPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Recipe Tutorial\");\r\n    });\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [recipe, setRecipe] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setRecipe(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const [tutorialMode, setTutorialMode] = useState(0);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {recipe.Name} Tutorial\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{ borderBottom: 'solid 1px', paddingbottom: '15px' }}>\r\n                <Button variant=\"outlined\" onClick={() => setTutorialMode(0)}><FontAwesomeIcon icon={faList} style={{ marginRight: '5px' }} />Preparation Steps</Button>\r\n                {recipe.VideoTutorialLink ? <Button onClick={() => setTutorialMode(1)}><FontAwesomeIcon icon={faVideo} style={{ marginRight: '5px' }} />Video Tutorial</Button> : <></>}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ paddingTop: '15px', paddingLeft: '10px' }}>\r\n                {\r\n                    tutorialMode === 0 ?\r\n                        <Grid container direction=\"row\">\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        recipe.PreparationSteps.split('{NEXT}').map((step, index) => {\r\n                                            return (\r\n                                                <TableRow>\r\n                                                    <TableCell>Step {index + 1}.</TableCell>\r\n                                                    <TableCell>{step}</TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n                        :\r\n                        <Grid container style={{ justifyContent: 'center', alignContent: 'center' }}>\r\n                            <iframe title={`Tutorial for ${recipe.Name}`} src={recipe.VideoTutorialLink} style={{ width: '90%', height: '90%' }}/>\r\n                        </Grid>\r\n                }\r\n            </Grid>\r\n            <Link to=\"/recipebook/custom/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\nimport { Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\nimport { PreparationStepsInputComponent } from \"./preparationStepsInputComponent\";\r\nimport { RequirementsInputComponent } from \"./RequirementsInputComponent\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    },\r\n    inputComponent: {\r\n        marginBottom: '15px',\r\n    }\r\n}));\r\n\r\nexport default function EditRecipePage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Edit Recipe\");\r\n    });\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [currentRecipe, setCurrentRecipe] = useState(new Recipe());\r\n\r\n    const [updateRecipe, setUpdateRecipe] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setCurrentRecipe(recipe);\r\n            setUpdateRecipe(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onRecipeEdited = (update) => {\r\n        setUpdateRecipe({\r\n            ...updateRecipe,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        var correctedRecipe = { ...updateRecipe };\r\n\r\n        correctedRecipe.RequirementsList = {\r\n            Ingredients: updateRecipe.RequirementsList,\r\n            RecipeId: updateRecipe.Id,\r\n        };\r\n\r\n        Api.Recipes.Update(recipeId, correctedRecipe);\r\n    };\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid className={classes.paper}>\r\n            <Dialog open={preparationStepsOpen} onClose={() => setPreparationStepsOpen(false)}>\r\n                <DialogTitle>Preparation Steps</DialogTitle>\r\n                <DialogContent>\r\n                    <PreparationStepsInputComponent\r\n                        name=\"Preparation Step\"\r\n                        defaultValue={currentRecipe.PreparationSteps}\r\n                        onChange={(value) => { onRecipeEdited({ PreparationSteps: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog open={requirementsListOpen} onClose={() => setRequirementsListOpen(false)}>\r\n                <DialogTitle>RequirementsList</DialogTitle>\r\n                <DialogContent>\r\n                    <RequirementsInputComponent\r\n                        Api={Api}\r\n                        defaultValues={currentRecipe.RequirementsList}\r\n                        parentRecipe={updateRecipe}\r\n                        onChange={(value) => { onRecipeEdited({ RequirementsList: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Edit Recipe:<br />{currentRecipe.Name}\r\n            </Typography>\r\n            <Grid style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px' }}>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.Name}\r\n                        name=\"Name\"\r\n                        onChange={(value) => onRecipeEdited({ Name: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        name=\"Description\"\r\n                        defaultValue={currentRecipe?.Description}\r\n                        onChange={(value) => { onRecipeEdited({ Description: value }); }}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.ImageLocation}\r\n                        name=\"Image\"\r\n                        onChange={(value) => onRecipeEdited({ ImageLocation: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.VideoTutorialLink}\r\n                        name=\"Tutorial Video\"\r\n                        onChange={(value) => onRecipeEdited({ VideoTutorialLink: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button variant=\"outlined\" onClick={() => setPreparationStepsOpen(true)}>\r\n                        {updateRecipe.PreparationSteps.split('{NEXT}').length} Steps\r\n                    </Button>\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button variant=\"outlined\" onClick={() => setRequirementsListOpen(true)}>\r\n                        {updateRecipe.RequirementsList.length} Requirements\r\n                    </Button>\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserSelectInputComponent\r\n                        defaultValue={currentRecipe.IsPublic}\r\n                        Name={\"Public?\"}\r\n                        options={[\r\n                            { name: \"Public\", value: true },\r\n                            { name: \"Private\", value: false },\r\n                        ]}\r\n                        onChange={(value) => { onRecipeEdited({ IsPublic: value }) }}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserMultiSelectInputComponent\r\n                        defaultValues={currentRecipe.Categories.map(category => category.CountId)}\r\n                        name=\"Categories\"\r\n                        options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                        onChange={(values) => onRecipeEdited({ Categories: values })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/recipebook/custom/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport {  } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CreateRecipePage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Create Recipe\");\r\n    });\r\n\r\n    const [recipe, setRecipe] = useState(new Recipe());\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onRecipeEdited = (update) => {\r\n        setRecipe({\r\n            ...recipe,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        var correctedRecipe = { ...recipe };\r\n\r\n        correctedRecipe.RequirementsList = {\r\n            Ingredients: recipe.RequirementsList,\r\n            RecipeId: recipe.Id,\r\n        };\r\n\r\n        Api.Recipes.Create(correctedRecipe);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Create New Recipe\r\n            </Typography>\r\n            <div>\r\n                <Grid container direction=\"row\" style={{ marginTop: '15px' }}>\r\n                    <UserInputComponent\r\n                        name=\"Name\"\r\n                        defaultValue={recipe?.Name}\r\n                        onChange={(value) => { onRecipeEdited({ Name: value }); }}\r\n                    />\r\n                </Grid>\r\n                    <Grid container direction=\"row\" style={{ marginTop: '15px' }}>\r\n                    <UserInputComponent\r\n                        name=\"Description\"\r\n                        defaultValue={recipe?.Description}\r\n                        onChange={(value) => { onRecipeEdited({ Description: value }); }}\r\n                    />\r\n                </Grid>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    options={categories.map(category => { return { name: category.Name, value: category.Id }; })}\r\n                    onChange={(values) => onRecipeEdited({ Category: values })}\r\n                />\r\n                <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\nimport { Card, Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n}));\r\n\r\nexport default function AccountsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Accounts\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [removeUser, setRemoveUser] = useState({ user: {}, dialogOpened: false });\r\n\r\n    const [users, setUsers] = useState([\r\n        {\r\n            Id: '',\r\n            Name: '',\r\n            Roles: [\r\n                {\r\n                    Id: '',\r\n                    Name: '',\r\n                }\r\n            ],\r\n            Email: '',\r\n            PhoneNumber: '',\r\n        }\r\n    ]);\r\n    if (users.length === 1 && users[0].Id === '') {\r\n        users.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetAll().then((users) => {\r\n            if (users === \"Error\") { return; }\r\n        \r\n            setUsers(users);\r\n        });\r\n    }, [Api.Users]);\r\n\r\n    const onDetails = (userId) => {\r\n        history.push('/accounts/details/' + userId);\r\n    };\r\n\r\n    const onEdit = (userId) => {\r\n        history.push('/accounts/edit/' + userId);\r\n    };\r\n\r\n    const ToggleRemove = (userId) => {\r\n        setRemoveUser({ user: users.find(x => x.Id === userId), dialogOpened: !removeUser.dialogOpened });\r\n    };\r\n\r\n    const onRemove = (userId) => {\r\n        const user = users.find(x => x.Id === userId);\r\n\r\n        Api.Users.Delete(userId, user);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={removeUser.dialogOpened} onClose={() => setRemoveUser(removeUser => { removeUser.dialogOpened = false; return removeUser })}>\r\n                <DialogTitle>Remove user {removeUser.user?.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove user: {removeUser.user?.Name}<br />\r\n                    <Button onClick={() => onRemove(removeUser.user.Id)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faBan} style={{ marginRight: '5px' }}/> Ban</Button>\r\n                    <Button onClick={() => ToggleRemove(removeUser.user.Id)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Accounts\r\n            </Typography>\r\n            <div className={classes.form}>\r\n                <EntityList\r\n                    columns={[\r\n                        { id: 'name', label:'Name', minWidth: 50 },\r\n                        { id: 'email', label:'Email', minWidth: 50 },\r\n                        { id: 'roles', label:'Roles', minWidth: 150 },\r\n                        { id: 'actions', label: 'Actions', minWidth: 100 },\r\n                    ]}\r\n                    rows={users.map(user => {\r\n                        return {\r\n                            id: user.Id,\r\n                            name: user.Name,\r\n                            email: user.Email,\r\n                            roles: user.Roles.map(role => { return <Card key={role.Id} style={{ margin: '2px', padding: '3px' }}>{role.Name}</Card>; }),\r\n                            actions: <RowActions rowEntityId={user.Id} rowEntity={user} onDetails={onDetails} onEdit={onEdit} onRemove={ToggleRemove} />\r\n                        }\r\n                    })}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\nimport { Role, User } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function EditAccountPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Edit Account\");\r\n    });\r\n\r\n    const { userId } = useParams();\r\n\r\n    const [currentUser, setCurrentUser] = useState(new User());\r\n\r\n    const [updateUser, setUpdateUser] = useState(new User());\r\n    const [roles, setRoles] = useState([new Role()])\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetById(userId).then((user) => {\r\n            if (user === \"Error\") { return; }\r\n        \r\n            setCurrentUser(user);\r\n            setUpdateUser(user);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    useEffect(() => {\r\n        Api.Roles.GetAll().then((roles) => {\r\n            if (roles === \"Error\") { return; }\r\n        \r\n            setRoles(roles);\r\n        });\r\n    }, [Api.Roles]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onUserEdited = (update) => {\r\n        setUpdateUser({\r\n            ...updateUser,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        Api.Users.Update(updateUser);\r\n    };\r\n\r\n    const minimumAge = 13;\r\n    var d = new Date();\r\n    const defaultMinimumAgeDate = `${d.getFullYear() - minimumAge}-${(d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : (d.getMonth() + 1)}-${d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate()}`;\r\n\r\n    var db = currentUser.DateOfBirth;\r\n    let defaultDate = db && db === typeof Date ?\r\n        `${(db.getFullYear() < 1000 ? db.getFullYear() < 100 ? db.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + db.getFullYear()}-${(db.getMonth() + 1) < 10 ? \"0\" + (db.getMonth() + 1) : (db.getMonth() + 1)}-${db.getDate() < 10 ? \"0\" + db.getDate() : db.getDate()}`\r\n         : defaultMinimumAgeDate;\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Edit {currentUser.Name}\r\n            </Typography>\r\n            <div>\r\n                <UserInputComponent\r\n                    \r\n                    defaultValue={currentUser.Name}\r\n                    name=\"Name\"\r\n                    onChange={(value) => onUserEdited({ Name: value })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={currentUser.Email}\r\n                    name=\"Email\"\r\n                    onChange={(value) => onUserEdited({ Email: value })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={defaultDate}\r\n                    name=\"Date Of Birth\"\r\n                    type=\"date\"\r\n                    inputProps={{ min: defaultMinimumAgeDate }}\r\n                    onChange={(value) => onUserEdited({ DateOfBirth: new Date(Date.parse(value)) })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={currentUser.PhoneNumber}\r\n                    name=\"Phone\"\r\n                    onChange={(value) => onUserEdited({ PhoneNumber: value })}\r\n                />\r\n                <UserMultiSelectInputComponent\r\n                    defaultValues={currentUser.Roles.map(role => role.Id)}\r\n                    name=\"Roles\"\r\n                    options={roles.map(role => { return { name: role.Name, value: role.Id }; })}\r\n                    onChange={(values) => onUserEdited({ Roles: values })}\r\n                />\r\n                <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { User, UserAction } from \"../../models\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle, faCross } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function AccountDetailsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Account Details\");\r\n    });\r\n\r\n    const { userId } = useParams();\r\n\r\n    const [userDetails, setUserDetails] = useState(new User());\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetById(userId).then((user) => {\r\n            if (user === \"Error\") { return; }\r\n        \r\n            setUserDetails(user);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    const [userActions, setUserActions] = useState([new UserAction()]);\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetActionsByUserId(userId).then((userActions) => {\r\n            if (userActions === \"Error\") { return; }\r\n        \r\n            setUserActions(userActions);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const db = userDetails.DateOfBirth;\r\n    const cd = userDetails.CreationDate;\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {userDetails.Name} Details\r\n            </Typography>\r\n            {\r\n                userDetails.CountId > 0 ?\r\n                <div>\r\n                    <Typography>\r\n                        Name: {userDetails.Name}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Email: {userDetails.Email}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Phone: {userDetails.PhoneNumber}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Date Of Birth: {`${db.getDate() < 10 ? \"0\" + db.getDate() : db.getDate()}-${(db.getMonth() + 1) < 10 ? \"0\" + (db.getMonth() + 1) : (db.getMonth() + 1)}-${(db.getFullYear() < 1000 ? db.getFullYear() < 100 ? db.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + db.getFullYear()}`}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Creation Date: {`${cd.getDate() < 10 ? \"0\" + cd.getDate() : cd.getDate()}-${(cd.getMonth() + 1) < 10 ? \"0\" + (cd.getMonth() + 1) : (cd.getMonth() + 1)}-${(cd.getFullYear() < 1000 ? cd.getFullYear() < 100 ? cd.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + cd.getFullYear()}` +\r\n                        ` ${cd.getHours() < 10 ? \"0\" + cd.getHours() : cd.getHours()}:${cd.getMinutes() < 10 ? \"0\" + cd.getMinutes() : cd.getMinutes()}`}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Roles:\r\n                    </Typography>\r\n                        {userDetails.Roles.map(role => <Card key={role.Id} style={{ margin: '2px', padding: '3px' }}>{role.Name}</Card>)}\r\n                    <Typography>\r\n                        Actions:\r\n                    </Typography>\r\n                    {\r\n                        userActions && userActions.length > 0 ?\r\n                        <EntityList\r\n                            columns={[\r\n                                { id: 'description', label:'Description', minWidth: 100 },\r\n                                { id: 'endpoint', label:'Endpoint', minWidth: 50 },\r\n                                { id: 'onTable', label:'Table', minWidth: 50 },\r\n                                { id: 'refObject', label:'Object', minWidth: 100,\r\n                                    format: (obj) => {\r\n                                        return Object.keys(obj).map((key) => { return \"(\" + key + \"): [ \" + obj[key]?.toString() + \" ]\" }).join(\", \");\r\n                                    },\r\n                                },\r\n                                { id: 'success', label:'Was successful?', minWidth: 50 },\r\n                            ]}\r\n                            rows={userActions.map((userAction) => {\r\n                                return {\r\n                                    id: userAction.CountId,\r\n                                    description: userAction.Description,\r\n                                    endpoint: userAction.Endpoint,\r\n                                    refObject: userAction.RefObject,\r\n                                    onTable: userAction.ActionPerformedOnTable,\r\n                                    success: userAction.Success ? <FontAwesomeIcon icon={faCheckCircle} style={{ color: 'forestgreen' }} /> : <FontAwesomeIcon icon={faCross} style={{ color: 'red' }} />,\r\n                                };\r\n                            })}\r\n                        /> :\r\n                        <Typography>\r\n                            No actions have been logged for this user.\r\n                        </Typography>\r\n                    }\r\n                </div>\r\n                : <></>\r\n            }\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\nimport { Card, Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCross, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { Ingredient, IngredientCategory, Recipe, RecipeCategory, RequirementsListIngredient, UnitType, User } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction CRUDPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"CRUD \" + TableName);\r\n    });\r\n    \r\n    const history = useHistory();\r\n\r\n    const [entityListData, setEntityListData] = useState({ columns: [], rows: [] });\r\n\r\n    const onDetails = useCallback((id) => {\r\n        history.push(`/${TableName}/details/${id}`);\r\n    }, [TableName, history]);\r\n\r\n    const onEdit = useCallback((id) => {\r\n        history.push(`/${TableName}/edit/${id}`);\r\n    }, [TableName, history]);\r\n\r\n    const [removeItem, setRemoveItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const ToggleRemove = useCallback((id) => {\r\n        const item = entityListData.rows.find(x => x.Id === id || x.CountId === id);\r\n\r\n        if (item) {\r\n            setRemoveItem({ item: item, dialogOpened: !removeItem.dialogOpened });\r\n        }\r\n        else {\r\n            console.log(`No item found with key '${id}'!`);\r\n        }\r\n    }, [removeItem.dialogOpened, entityListData.rows]);\r\n\r\n    const onRemove = (id) => {\r\n        entityGroup.Delete(id);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const entityGroup = Api[TableName];\r\n\r\n    useEffect(() => {\r\n        entityGroup.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            const columns = [];\r\n            const rows = [];\r\n\r\n            if (items.length > 0) {\r\n                var keys = Object.keys(items[0]);\r\n\r\n                keys.forEach(key => {\r\n                    columns.push({\r\n                        id: key,\r\n                        label: key,\r\n                        align: 'center',\r\n                        minWidth: 50,\r\n                    });\r\n                });\r\n                columns.push({\r\n                    id: 'actions',\r\n                    label: 'Actions',\r\n                    align: 'center',\r\n                    minWidth: 100,\r\n                });\r\n\r\n                items.forEach((item) => {\r\n                    var obj = {};\r\n\r\n                    keys.forEach((key) => {\r\n                        var value;\r\n\r\n                        if (Array.isArray(item[key])) {\r\n                            value = item[key].map(el => (el instanceof IngredientCategory || el instanceof RecipeCategory) ? <Card key={el.Name + \"-\" + el.CountId} style={{ margin: '2px', padding: '3px' }}>{el.Name}</Card> :\r\n                                                         el instanceof UnitType ? <Card key={el.Name + \"-\" + el.CountId} style={{ margin: '2px', padding: '3px' }}>{el.Name} ({el.AllowDecimals ? \"decimals\" : \"integers\"})</Card> :\r\n                                                         el instanceof RequirementsListIngredient ? <Card key={el.Ingredient.Id} style={{ margin: '2px', padding: '3px' }}>{el.Ingredient.Name} ({el.Units} {el.UnitType.Name})</Card> : <Card key={el} style={{ margin: '2px', padding: '3px' }}>{el}</Card>);\r\n                        }\r\n                        else if (item[key]instanceof Object ||\r\n                                 item[key] instanceof Ingredient ||\r\n                                 item[key] instanceof IngredientCategory ||\r\n                                 item[key] instanceof UnitType ||\r\n                                 item[key] instanceof Recipe ||\r\n                                 item[key] instanceof RecipeCategory ||\r\n                                 item[key] instanceof User) {\r\n                            value = item[key].Name;\r\n                        }\r\n                        else if (key === \"ImageLocation\") {\r\n                            value = <>\r\n                                        <Thumbnail source={item[key]} size={50}/>\r\n                                        <a href={item[key]}>to location</a>\r\n                                    </>\r\n                        }\r\n                        else value = item[key];\r\n\r\n                        obj[key] = value;\r\n                    });\r\n\r\n                    obj.actions = <RowActions rowEntity={item} rowEntityId={item.Id ?? item.CountId} onDetails={onDetails} onEdit={onEdit} onRemove={ToggleRemove} />\r\n\r\n                    rows.push(obj);\r\n                });\r\n            }\r\n\r\n            setEntityListData({ columns: columns, rows: rows });\r\n        });\r\n    }, [entityGroup, ToggleRemove, onEdit, onDetails]);\r\n\r\n    return (\r\n        <Grid className={classes.form}>\r\n            <Dialog open={removeItem.dialogOpened} onClose={() => setRemoveItem(removeItem => { removeItem.dialogOpened = false; return removeItem })}>\r\n                <DialogTitle>Remove item {removeItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove this item: {removeItem.item.Name} ?<br />\r\n                    <Button onClick={() => onRemove(removeItem.item.Id ?? removeItem.item.CountId)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faCross} style={{ marginRight: '5px' }}/> Remove</Button>\r\n                    <Button onClick={() => ToggleRemove(removeItem.item.Id ?? removeItem.item.CountId)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h3\">\r\n                {DisplayName} CRUD\r\n            </Typography>\r\n\r\n            {entityListData.rows.length < 1 ?\r\n                \"No items found in this table.\" :\r\n                <EntityList\r\n                    columns={[...entityListData.columns]}\r\n                    rows={[...entityListData.rows]}\r\n                />\r\n            }\r\n            <Link to={`/${TableName}/create`}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add {DisplayName}</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { CRUDPage };","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function CRUDDetailsPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Details\");\r\n    });\r\n\r\n    const { id } = useParams();\r\n\r\n    const [currentItem, setCurrentItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        Api[TableName].GetById(id).then((obj) => {\r\n            if (obj === \"Error\") { return; }\r\n        \r\n            setCurrentItem(obj);\r\n        });\r\n    }, [Api, TableName, id]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Details:<br />{currentItem.Name}\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getDetailsPage(currentItem.CountId && currentItem.CountId > 0 ? currentItem : null)\r\n                }\r\n                <Link to={`/${TableName}/edit/${id}`}>\r\n                    <Button style={{ backgroundColor: 'yellow' }}>Edit</Button>\r\n                </Link>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\nimport { Ingredient, IngredientCategory, RecipeCategory, UnitType } from \"../../models\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CRUDEditPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Edit\");\r\n    });\r\n\r\n    const { id } = useParams();\r\n\r\n    const [currentItem, setCurrentItem] = useState({});\r\n\r\n    const [updateItem, setUpdateItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        Api[TableName].GetById(id).then((obj) => {\r\n            if (obj === \"Error\") { return; }\r\n        \r\n            setCurrentItem(obj);\r\n            setUpdateItem(obj);\r\n        });\r\n    }, [Api, TableName, id]);\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1) {\r\n        unitTypes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setUnitTypes(items);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1) {\r\n        ingredients.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredients(items);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [ingredientCategories, setIngredientCategories] = useState([new IngredientCategory()]);\r\n    if (ingredientCategories.length === 1 && ingredientCategories[0].CountId === -1) {\r\n        ingredientCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredientCategories(items);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [recipeCategories, setRecipeCategories] = useState([new RecipeCategory()]);\r\n    if (recipeCategories.length === 1 && recipeCategories[0].CountId === -1) {\r\n        recipeCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setRecipeCategories(items);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onItemEdited = (update) => {\r\n        setUpdateItem({\r\n            ...updateItem,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        if (TableName === \"Recipes\") {\r\n            var correctedRecipe = { ...updateItem };\r\n\r\n            correctedRecipe.RequirementsList = {\r\n                Ingredients: updateItem.RequirementsList,\r\n                RecipeId: updateItem.Id,\r\n            };\r\n\r\n            Api[TableName].Update(id, correctedRecipe);\r\n        }\r\n        else {\r\n            Api[TableName].Update(id, updateItem);\r\n        }\r\n    };\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Edit:<br />{currentItem.Name}\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getEditPage(currentItem.CountId && currentItem.CountId > 0 ? currentItem : null, { unitTypes, ingredients, ingredientCategories, recipeCategories },\r\n                        onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen,\r\n                                             preparationStepsCount: updateItem?.PreparationSteps?.split('{NEXT}').length ?? currentItem?.PreparationSteps?.split('{NEXT}').length,\r\n                                             requirementsCount: updateItem?.RequirementsList?.length ?? currentItem?.RequirementsList?.length })\r\n                }\r\n                <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\nimport { Ingredient, IngredientCategory, RecipeCategory, UnitType } from \"../../models\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CRUDCreatePage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Create\");\r\n    });\r\n\r\n    const [item, setItem] = useState({});\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1) {\r\n        unitTypes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setUnitTypes(items);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1) {\r\n        ingredients.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredients(items);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [ingredientCategories, setIngredientCategories] = useState([new IngredientCategory()]);\r\n    if (ingredientCategories.length === 1 && ingredientCategories[0].CountId === -1) {\r\n        ingredientCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredientCategories(items);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [recipeCategories, setRecipeCategories] = useState([new RecipeCategory()]);\r\n    if (recipeCategories.length === 1 && recipeCategories[0].CountId === -1) {\r\n        recipeCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setRecipeCategories(items);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onItemEdited = (update) => {\r\n        setItem({\r\n            ...item,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onCreate = () => {\r\n        if (TableName === \"Recipes\") {\r\n            var correctedRecipe = { ...item };\r\n\r\n            correctedRecipe.RequirementsList = {\r\n                Ingredients: item.RequirementsList,\r\n                RecipeId: item.Id,\r\n            };\r\n\r\n            Api[TableName].Create(correctedRecipe);\r\n        }\r\n        else {\r\n            Api[TableName].Create(item);\r\n        }\r\n    };\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Create\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getEditPage(null, { unitTypes, ingredients, ingredientCategories, recipeCategories },\r\n                        onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen,\r\n                                             preparationStepsCount: item?.PreparationSteps?.split('{NEXT}').length ?? item?.PreparationSteps?.split('{NEXT}').length,\r\n                                             requirementsCount: item?.RequirementsList?.length })\r\n                }\r\n                <Button onClick={onCreate} style={{ backgroundColor: 'forestgreen' }}>Create</Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React from \"react\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { drawerWidth } from \"./components/Drawer/AppDrawer\";\r\n\r\nimport { HomePage } from \"./components/Home/Index\";\r\n\r\nimport { KitchenHomePage } from \"./components/Kitchen/index\";\r\nimport { AddIngredients } from \"./components/Kitchen/AddIngredients\";\r\n\r\nimport { RecipeBookHomePage } from \"./components/RecipeBook/index\";\r\nimport RecipeDetailsPage from \"./components/RecipeBook/details\";\r\nimport RecipeTutorialPage from \"./components/RecipeBook/tutorial\";\r\nimport RecipeEditPage from \"./components/RecipeBook/edit\";\r\nimport RecipeCreatePage from \"./components/RecipeBook/create\";\r\n\r\nimport AccountsPage from \"./components/Accounts/index\";\r\nimport EditAccountPage from \"./components/Accounts/update\";\r\nimport AccountDetailsPage from \"./components/Accounts/details\";\r\n\r\nimport { CRUDPage } from \"./components/CRUD/CRUDPage\";\r\nimport CRUDPagesInfo from \"./API/CRUDPagesInfo\";\r\nimport CRUDDetailsPage from \"./components/CRUD/details\";\r\nimport CRUDEditPage from \"./components/CRUD/edit\";\r\nimport CRUDCreatePage from \"./components/CRUD/create\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction MainContent({ setTitle, drawerOpen, isRegistered, name, userId, Api, isAdmin, isCreator, isCook }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: drawerOpen\r\n            })}\r\n        >\r\n            <div className={classes.drawerHeader} />\r\n            <div\r\n                style={{\r\n                    width: \"70%\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    overflowY: \"auto\",\r\n                }}\r\n            >\r\n                <Switch>\r\n                    <Route path=\"/home/index\">\r\n                        <HomePage setTitle={setTitle} name={name} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/kitchen/index\">\r\n                        <KitchenHomePage setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/kitchen/add\">\r\n                        <AddIngredients setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/recipebook/index\">\r\n                        <RecipeBookHomePage setTitle={setTitle} isCook={isCook} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/recipebook/details/:recipeId\">\r\n                        <RecipeDetailsPage setTitle={setTitle} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/recipebook/tutorial/:recipeId\">\r\n                        <RecipeTutorialPage setTitle={setTitle} Api={Api} />\r\n                    </Route>\r\n                    {\r\n                        isRegistered ? (\r\n                            <Redirect exact strict from=\"/\" to=\"/home/index\" />\r\n                        ) : (\r\n                            <></>\r\n                        )\r\n                    }\r\n                </Switch>\r\n                {\r\n                    isCook ?\r\n                    <Switch>\r\n                        <Route path=\"/recipebook/custom/index\">\r\n                            <RecipeBookHomePage setTitle={setTitle} isCook={isCook} userId={userId} Api={Api} defaultRecipeListState={0} />\r\n                        </Route>\r\n                        <Route path=\"/recipebook/custom/edit/:recipeId\">\r\n                            <RecipeEditPage setTitle={setTitle} userId={userId} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/recipebook/custom/create\">\r\n                            <RecipeCreatePage setTitle={setTitle} userId={userId} Api={Api} />\r\n                        </Route>\r\n                    </Switch>\r\n                    : null\r\n                }\r\n                {\r\n                    isCreator ?\r\n                    Object.keys(CRUDPagesInfo.Pages).map((CRUD, index) => {\r\n                        return (\r\n                            <Switch >\r\n                                <Route path={`/${CRUD}/index`}>\r\n                                    <CRUDPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/details/:id`}>\r\n                                    <CRUDDetailsPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/edit/:id`}>\r\n                                    <CRUDEditPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/create`}>\r\n                                    <CRUDCreatePage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                            </Switch>\r\n                        );\r\n                    })\r\n                    : null\r\n                }\r\n                {\r\n                    isAdmin ?\r\n                    <Switch>\r\n                         <Route path=\"/accounts/index\">\r\n                             <AccountsPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/accounts/edit/:userId\">\r\n                            <EditAccountPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/accounts/details/:userId\">\r\n                            <AccountDetailsPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                    </Switch>\r\n                    : null\r\n                }\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport { MainContent };","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAccount, CreateAccount } from \"../../API/index\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"red\" },\r\n    form: {\r\n\r\n    },\r\n    btn: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nexport default function RegisterPage({ setTitle, onSuccess, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Register\");\r\n    });\r\n\r\n    const minimumAge = 13;\r\n    var d = new Date();\r\n    const defaultMinimumAgeDate = `${d.getFullYear() - minimumAge}-${(d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : (d.getMonth + 1)}-${d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate()}`;\r\n\r\n    const { updateByLogIn } = useAccount();\r\n\r\n    const [errorMsgs, setErrorMsgs] = useState([]);\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [DOB, setDOB] = useState(defaultMinimumAgeDate);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    async function Register(username, email, DOB, password, confirmpassword) {\r\n        var newErrors = [''];\r\n        newErrors.pop();\r\n\r\n        if (password !== confirmpassword) {\r\n            newErrors.push('Passwords are not equal!');\r\n        }\r\n        if (userName.length < 2) {\r\n            newErrors.push('Invalid username!');\r\n        }\r\n        if (email.indexOf('@') === -1 || email.indexOf('.') === -1) {\r\n            newErrors.push('Invalid email!');\r\n        }\r\n\r\n        var parts = DOB.split(' ');\r\n        let year = parseInt(parts[3]);\r\n        let month = ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'].indexOf(parts[1]);\r\n        let date = parseInt(parts[2]);\r\n        var dateOfBirth = new Date(year, month, date, 0, 0, 0, 0);\r\n        var d = new Date();\r\n        const minimumAgeYear = d.getFullYear() - minimumAge;\r\n        if (dateOfBirth.getFullYear() > minimumAgeYear ||\r\n        (dateOfBirth.getFullYear() === minimumAgeYear && dateOfBirth.getMonth() > d.getMonth()) ||\r\n        (dateOfBirth.getFullYear() === minimumAgeYear && dateOfBirth.getMonth() === d.getMonth() && dateOfBirth.getDate() > d.getDate()))\r\n        {\r\n            newErrors.push(`You need to be older than ${minimumAge} years to create an account!`);\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrorMsgs(newErrors);\r\n        } else {\r\n            const success = await CreateAccount(username, email, password, updateByLogIn, Api);\r\n            if (success)\r\n            {\r\n                onSuccess();\r\n            }\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Register\r\n            </Typography>\r\n            <div className={classes.form}>\r\n            {\r\n                    errorMsgs.length > 0 ? (\r\n                        <div className={classes.errorTxt}>\r\n                            <ul>\r\n                                {\r\n                                    errorMsgs.map((error, key) =>\r\n                                        (<li>{error}</li>)\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n                \r\n\r\n                <UserInputComponent name=\"Email\" onChange={(value) => { setEmail(value); }} />\r\n                <UserInputComponent name=\"UserName\" onChange={(value) => { setUserName(value); }} />\r\n                <UserInputComponent name=\"Date of Birth\" type=\"date\" defaultValue={defaultMinimumAgeDate} onChange={(value) => { setDOB(value); }} />\r\n                <UserInputComponent name=\"Password\" type=\"password\" onChange={(value) => { setPassword(value); }} />\r\n                <UserInputComponent name=\"ConfirmPassword\" type=\"password\" onChange={(value) => { setConfirmPassword(value); }} />\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Button\r\n                        className={classes.btn}\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={async () => { await Register(userName, email, DOB, password, confirmPassword); }}\r\n                    >\r\n                        Register\r\n                    </Button>\r\n                </Grid>\r\n                \r\n                <Typography\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Already have an account? <Link to=\"/signin/login\">login here</Link>\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAccount, GetUserIdByName } from \"../../API/index\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    btn: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nexport default function LogInPage({ setTitle, isAdmin, onSuccess, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Log In\");\r\n    });\r\n\r\n    const { LogIn } = useAccount();\r\n\r\n    const [errorMsgs, setErrorMsgs] = useState([]);\r\n\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    async function AttemptLogIn(username, password) {\r\n        var newErrorMsgs = [''];\r\n        newErrorMsgs.pop();\r\n\r\n        var userId = await GetUserIdByName(username, Api.Users);\r\n\r\n        if (!userId) {\r\n            newErrorMsgs.push(\"Either username or password are misspelled!\");\r\n            return false;\r\n        }\r\n\r\n        let success = await LogIn(userId, password);\r\n        \r\n        if (success) {\r\n            onSuccess();\r\n            window.location.href = \"/\";\r\n        } else {\r\n            newErrorMsgs.push(\"Either username or password are misspelled!\");\r\n            setErrorMsgs(newErrorMsgs);\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Log In\r\n            </Typography>\r\n            <div className={classes.form}>\r\n                {\r\n                    errorMsgs.length > 0 ? (\r\n                        <div className={classes.errorTxt}>\r\n                            <ul>\r\n                                {\r\n                                    errorMsgs.map((error, key) =>\r\n                                        (<li>{error}</li>)\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n                <UserInputComponent name=\"UserName\" onChange={(value) => { setUserName(value); }} />\r\n                <UserInputComponent name=\"Password\" type=\"password\" onChange={(value) => { setPassword(value); }} />\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Button\r\n                    className={classes.btn}\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={async () => { await AttemptLogIn(userName, password); }}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Typography\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Don't have an account yet? <Link to=\"/signin/register\">register here</Link>\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from  \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction WelcomePage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.form}>\r\n            <Typography className={classes.txt} variant=\"h1\">\r\n                Welkom!\r\n            </Typography>\r\n            <Typography className={classes.txt} variant=\"subtitle1\">\r\n                to Recipe Finder!\r\n            </Typography>\r\n            <Button\r\n                className={classes.continue}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                component={Link}\r\n                to={\"/signin/register\"}\r\n            >\r\n                Register\r\n            </Button>\r\n            <Typography className={classes.txt}>\r\n                Or if you already have an account <Link to=\"/signin/login\">Log in here</Link>\r\n            </Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { WelcomePage }","import React, { } from \"react\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nfunction AuthorizationCallback({ Api }) {\r\n    const history = useHistory();\r\n\r\n    function getParam(key) {\r\n        const segments = window.location.search.substr(1).split('&');\r\n\r\n        var value;\r\n\r\n        segments.forEach((segment) => {\r\n            var keyToValue = segment.split('=');\r\n\r\n            var param = { key: keyToValue[0], value: keyToValue[1] };\r\n\r\n            if (param.key === key) {\r\n                value = param.value;\r\n                return;\r\n            }\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    if (getParam(\"Error\"))\r\n    {\r\n        return (\r\n            <div>\r\n                <Typography\r\n                    variant=\"h1\"\r\n                >\r\n                    Error occurred during authorization!\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        history.push('/home/index');\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            Login completed!\r\n            <Link to=\"/home/index\">\r\n                <Button variant=\"outlined\">Go on</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { AuthorizationCallback }","export const form = {\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Register from \"../SignIn/Register\";\r\nimport LogIn from \"../SignIn/LogIn\";\r\nimport { WelcomePage } from \"./WelcomePage\";\r\nimport { AuthorizationCallback } from \"./AuthorizationCallback\";\r\n\r\nimport { form as formstyles } from \"./common-styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    form: formstyles,\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n\r\n}));\r\n\r\nfunction Onboarding({ setTitle, Api }) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [authPageAvailable, setAuthPageAvailable] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const TestAuthPage = async () => {\r\n            const authPage = (await Api.Custom.PerformCustom('get', Api.AuthorizationPage))?.data;\r\n\r\n            const pageActive = authPage ? authPage.length ? authPage.length > 1 : false : false;\r\n\r\n            console.log(\"auth page: \" + (pageActive ? 'active' : 'inactive'));\r\n\r\n            setAuthPageAvailable(pageActive);\r\n        }\r\n\r\n        TestAuthPage();\r\n    }, [Api.AuthorizationPage, Api.Custom]);\r\n\r\n    const handleConnectionSuccess = () => {\r\n        history.push(\"/register\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {authPageAvailable ?\r\n                <Route component={() => { \r\n                    console.log(\"redirecting to api authorization page.\")\r\n                    window.location.href = Api.AuthorizationPage; \r\n                    return null;\r\n                }}/>\r\n                    : \r\n                <Switch>\r\n                    <Route path=\"/signin/register\">\r\n                        <div className={classes.form}>\r\n                            <Register setTitle={setTitle} authPageAvailable={authPageAvailable} onSuccess={handleConnectionSuccess} Api={Api} />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/signin/login\">\r\n                        <div className={classes.form}>\r\n                            <LogIn setTitle={setTitle} authPageAvailable={authPageAvailable} onSuccess={handleConnectionSuccess} Api={Api} />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path={Api.AuthReturnUrlPath}>\r\n                        <AuthorizationCallback Api={Api} />\r\n                    </Route>\r\n                    \r\n                    <Route>\r\n                        <WelcomePage />\r\n                    </Route>\r\n                </Switch>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Onboarding };","import React, { useState } from \"react\";\r\nimport \"./app.css\";\r\nimport { Loading } from \"./components/Loading\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { AppDrawer, drawerWidth } from \"./components/Drawer/AppDrawer\";\r\nimport { MainContent } from \"./MainContent\";\r\nimport { Onboarding } from \"./components/Onboarding/Onboarding\";\r\n\r\nimport { Authenticate, useAccount, ApiProvider, useAPI } from \"./API/index\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        height: \"100%\",\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#ffbb00',\r\n        color: 'black',\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px])`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    logoutButton: {\r\n        \r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 2,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ApiProvider>\r\n            <Authenticate>\r\n                <Loading>\r\n                    <Router>\r\n                        <div className={classes.root}>\r\n                            <AppShell />\r\n                        </div>\r\n                    </Router>\r\n                </Loading>\r\n            </Authenticate>\r\n        </ApiProvider>\r\n    );\r\n};\r\n\r\nfunction AppShell() {\r\n    const { id, name, registered, loaded, roles, logOut } = useAccount();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const classes = useStyles();\r\n\r\n    const { Api } = useAPI();\r\n\r\n    if (loaded && !registered) {\r\n        return <Onboarding setTitle={setTitle} Api={Api} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={() => setOpen(true)}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" noWrap className={classes.title}>\r\n                        logged in as: {name}\r\n                    </Typography>\r\n                    <Button\r\n                        className={classes.logoutButton}\r\n                        onClick={() => { logOut(); window.location.href = \"/signin/login\" }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faSignOutAlt} style={{ marginRight: '5px' }}/> log Out\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppDrawer\r\n                open={open}\r\n                onOpen={setOpen}\r\n                setTitle={setTitle}\r\n                isRegistered={registered}\r\n                isAdmin={roles.filter(r => r.name === 'admin') !== undefined}\r\n                isCreator={roles.filter(r => r.name === 'creator') !== undefined}\r\n                isCook={roles.filter(r => r.name === 'cook') !== undefined}\r\n            />\r\n            <MainContent setTitle={setTitle} drawerOpen={open} isRegistered={registered} name={name} userId={id ?? \"unknown\"} Api={Api}\r\n                isAdmin={roles.filter(r => r.name === 'admin') !== undefined}\r\n                isCreator={roles.filter(r => r.name === 'creator') !== undefined}\r\n                isCook={roles.filter(r => r.name === 'cook') !== undefined}\r\n            />\r\n        </>\r\n    );\r\n};","\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"[::1]\" ||\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served by cache-first by a service \" +\r\n                        \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker =registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                \"tabs fpr this page are closed. See https://bit.ly/CRA-PWA\"\r\n                            );\r\n\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n};\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" },\r\n    })\r\n    .then((response) => {\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (\r\n            response.status === 404 ||\r\n            (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n        ) {\r\n            navigator.serviceWorker.ready.then((registration) => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        } else {\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n    .catch(() => {\r\n        console.log(\r\n            \"No internet connection found. App is runnning in offline mode.\"\r\n        );\r\n    });\r\n};\r\n\r\nexport function unregister() {\r\n    if (\"serviceworker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n            registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n        });\r\n    }\r\n};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}