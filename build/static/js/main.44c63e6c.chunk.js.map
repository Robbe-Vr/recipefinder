{"version":3,"sources":["API/api.js","models/Role.js","models/User.js","models/UserAction.js","models/GroceryList.js","models/UnitType.js","models/IngredientCategory.js","models/RecipeCategory.js","models/Ingredient.js","models/RequirementsListIngredient.js","models/Recipe.js","models/KitchenIngredient.js","API/api-context.js","API/account.js","components/Loading.js","components/Drawer/DrawerItem.js","components/Global/Thumbnail.js","components/Global/ImageInputComponent.js","components/Global/UserInputComponent.js","components/Global/UserMultiSelectInputComponent.js","components/Global/UserSelectInputComponent.js","components/RecipeBook/preparationStepsInputComponent.js","components/Global/EntityList.js","components/Global/SelectIngredientComponent.js","components/RecipeBook/RequirementsInputComponent.js","API/CRUDPagesInfo.js","components/Drawer/AppDrawer.js","components/Home/Index.js","components/Global/RowActions.js","components/Kitchen/index.js","components/Kitchen/AddIngredients.js","components/Kitchen/WhatToBuy.js","components/RecipeBook/index.js","components/RecipeBook/details.js","components/RecipeBook/tutorial.js","components/RecipeBook/edit.js","components/RecipeBook/create.js","components/Accounts/index.js","components/Accounts/update.js","components/Accounts/details.js","components/CRUD/CRUDPage.js","components/CRUD/details.js","components/CRUD/edit.js","components/CRUD/create.js","components/Onboarding/AuthorizationCallback.js","MainContent.js","components/SignIn/Register.js","components/SignIn/LogIn.js","components/Onboarding/WelcomePage.js","components/Onboarding/common-styles.js","components/Onboarding/Onboarding.js","app.js","serviceWorker.js","index.js"],"names":["accessToken","Role","countId","id","name","this","CountId","Id","Name","User","email","phoneNumber","passwordHashed","salt","dateOfBirth","creationDate","roles","Roles","Email","PhoneNumber","PasswordHashed","Salt","DateOfBirth","Date","parse","CreationDate","UserAction","user","endpoint","requestType","description","refObject","actionPerformedOnTable","success","Endpoint","RequestType","Description","RefObject","ActionPerformedOnTable","Success","GroceryList","value","Value","UserId","UnitType","allowDecimals","AllowDecimals","IngredientCategory","RecipeCategory","Ingredient","imgLocation","avgkgPerUnit","avgLPerUnit","categories","unitTypes","Categories","UnitTypes","ImageLocation","AverageWeightInKgPerUnit","AverageVolumeInLiterPerUnit","RequirementsListIngredient","ingredient","units","unitType","recipe","IngredientId","Units","UnitTypeId","RecipeId","Recipe","imageLocation","isPublic","preparationSteps","videoTutorialLink","requirementsList","RequirementsList","PreparationSteps","VideoTutorialLink","IsPublic","KitchenIngredient","axios","require","default","protocol","serverIp","window","location","hostname","indexOf","api_url","AccessTokenHeaderName","AuthorizationHeaders","getAccessToken","HandlerError","error","response","console","log","status","data","Message","request","message","account","localStorage","getItem","JSON","e","AccessToken","EntityGroup","groupName","api_path","ApiUrl","length","a","get","headers","newObj","stringify","post","updatedObj","put","obj","delete","type","url","toUpperCase","info","CustomEntityGroup","text","Text","res","Result","item","DOB","map","role","IngredientEntityGroup","fixedData","category","userId","Ingredients","requirement","UserEntityGroup","RefObjectid","RefObjectName","RoleEntityGroup","RecipeEntityGroup","KitchenEntityGroup","RequirementsListEntityGroup","UnitTypeEntityGroup","IngredientCategoryEntityGroup","RecipeCategoryEntityGroup","GroceryListEntityGroup","Api","authReturnUrlPath","params","port","AuthorizationPage","AuthReturnUrlPath","Url","Users","Recipes","Kitchens","RequirementsLists","IngredientCategories","RecipeCategories","GroceryLists","Custom","ApiContext","React","createContext","ApiProvider","children","API","contextValue","Provider","useAPI","useContext","ACCOUNT_LS","AccountContext","Authenticate","useState","setAccount","loaded","setLoaded","useEffect","getTokens","setTokens","GetUserByAccessToken","then","acc","setItem","catch","getParam","key","search","substr","split","forEach","segment","keyToValue","param","localAccStr","localAcc","pathname","ValidateAccessToken","accWithUser","correctedAcc","removeItem","RefreshAccessToken","newToken","refreshedAcc","access_token","checkLogin","registered","logIn","password","logOut","LogOut","useAccount","GetUserIdByName","UsersApi","GetByName","CreateAccount","username","updateByLogIn","api","createUserObject","newUser","Create","encryptSHA256","CustomApi","Encrypt","generateSalt","GetSalt","PerformCustom","EmailConfirmed","EmailConfirmationToken","PhoneNumberConfirmed","NAME_NORMALIZED","EMAIL_NORMALIZED","SecurityStamp","ConcurrencyStamp","LockoutEnabled","lockoutEnd","AccessFailedCount","Kitchen","Deleted","useStyles","makeStyles","theme","container","display","height","justifyContent","alignItems","Loading","classes","className","CircularProgress","DrawerItem","props","ListItem","button","component","Link","to","link","icon","style","marginRight","ListItemText","primary","onClick","inputBox","marginBottom","spacing","Thumbnail","source","size","Grid","border","width","toString","maxWidth","maxHeight","alt","src","ImageInputComponent","variant","defaultValue","onChange","isAsync","setValue","direction","xs","TextField","label","target","verticalAlign","UserInputComponent","inputProps","step","correction","parseInt","parseFloat","UserMultiSelectInputComponent","defaultValues","options","values","setValues","overrideOnChange","InputLabel","Select","multiple","option","MenuItem","selected","UserSelectInputComponent","PreparationStepsInputComponent","updateValue","newValue","index","updatedValue","i","join","addStep","newStepIndex","steps","Button","color","borderTop","paddingTop","paddingBottom","borderBottom","marginLeft","stepValue","replace","endsWith","substring","removeStep","tableContainer","minWidth","EntityList","rows","columns","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","align","TableBody","slice","row","hover","tabIndex","format","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","SelectIngredientComponent","ingredients","selectIngredient","setCategories","pop","GetAll","filterOptions","setFilterOptions","overflow","paddingLeft","alignContent","Typography","padding","filter","toLowerCase","c","x","image","select","RequirementsInputComponent","parentRecipe","setIngredients","setUnitTypes","propName","updatedValues","closeIngredientSelect","ingredientsSelects","ingredientSelectsOpen","setIngredientSelectsOpen","val","find","Dialog","open","onClose","DialogTitle","DialogContent","openIngredientSelect","min","max","unitTypeId","u","updateUnitType","vals","splice","removeRequirement","push","addRequirement","CreateEditPage","tableName","notEditableProps","ApiTables","onItemEdited","additionals","marginTop","cat","ingredientCategories","CreateIngredientEditPage","CreateIngredientCategoryEditPage","CreateUnitTypeEditPage","preparationStepsOpen","setPreparationStepsOpen","requirementsListOpen","setRequirementsListOpen","preparationStepsCount","requirementsCount","keepMounted","recipeCategories","CreateRecipeEditPage","CreateRecipeCategoryEditPage","CreateDetailsPage","Card","margin","CreateIngredientDetailsPage","CreateIngredientCategoryDetailsPage","CreateUnitTypeDetailsPage","href","CreateRecipeDetailsPage","CreateRecipeCategoryDetailsPage","generateCRUDInfo","displayName","context","DisplayName","getEditPage","getDetailsPage","CRUDPagesInfo","Pages","drawerWidth","drawer","flexShrink","drawerPaper","drawerheader","backgroundColor","mixins","toolbar","chevron","flex","AppDrawer","onOpen","isAdmin","isCreator","isCook","useTheme","Drawer","anchor","paper","noWrap","IconButton","Divider","List","faHome","faUtensils","faBookOpen","faListAlt","faMortarPestle","Object","keys","CRUD","faBook","faUsers","form","flexDirection","txt","textAlign","continue","HomePage","setTitle","innerHeight","textDecoration","fontSize","rowActionsContainer","RowActions","rowEntityId","onDetails","rowEntity","onEdit","onRemove","justify","faEye","faPen","faTrash","KitchenHomePage","kitchen","setKitchen","dialogOpened","editItem","setEditItem","setRemoveItem","updates","setUpdates","unitTypeChanges","setUnitTypeChanges","GetKitchenByUserId","Update","updatedKitchen","Delete","closeEditDialog","closeRemoveDialog","newUnits","newUnitType","updatedUnitType","actions","faPlus","ingredientSelectContainer","ingredientSelectedContainer","AddIngredients","selectedIngredient","setSelectedIngredient","saveIngredient","setSaveIngredient","faArrowRight","borderLeft","faBackward","WhatToBuyPage","listState","setListState","items","setItems","GetWhatToBuy","selectedItem","setSelectedItem","addIngredient","toAddIngredient","closeIngredientDialog","closeItemDialog","img","amount","r","recipeListState","faSync","RecipeBookHomePage","defaultRecipeListState","history","useHistory","setRecipeListState","recipes","setRecipes","GetAllFromCook","GetPreparableForUser","recipeId","ToggleRemove","faCross","public","boxSizing","RecipeDetailsPage","useParams","recipeDetails","setRecipeDetails","GetById","RecipeTutorialPage","setRecipe","tutorialMode","setTutorialMode","paddingbottom","faList","faVideo","title","errorTxt","inputComponent","EditRecipePage","currentRecipe","setCurrentRecipe","updateRecipe","setUpdateRecipe","onRecipeEdited","update","correctedRecipe","CreateRecipePage","onRecipeValueEdited","Category","AccountsPage","removeUser","setRemoveUser","users","setUsers","disableBackdropClick","disableEscapeKeyDown","faBan","EditAccountPage","currentUser","setCurrentUser","updateUser","setUpdateUser","setRoles","onUserEdited","d","defaultMinimumAgeDate","getFullYear","getMonth","getDate","db","defaultDate","AccountDetailsPage","userDetails","setUserDetails","userActions","setUserActions","GetActionsByUserId","cd","getHours","getMinutes","userAction","onTable","faCheckCircle","CRUDPage","TableName","entityGroup","entityListData","setEntityListData","useCallback","Array","isArray","el","CRUDDetailsPage","currentItem","setCurrentItem","CRUDInfo","CRUDEditPage","updateItem","setUpdateItem","setIngredientCategories","setRecipeCategories","CRUDCreatePage","AuthorizationCallback","drawerHeader","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","MainContent","drawerOpen","isRegistered","clsx","overflowY","path","exact","strict","from","btn","RegisterPage","onSuccess","errorMsgs","setErrorMsgs","setEmail","userName","setUserName","setDOB","setPassword","confirmPassword","setConfirmPassword","Register","confirmpassword","newErrors","parts","year","month","date","minimumAgeYear","LogInPage","LogIn","AttemptLogIn","newErrorMsgs","WelcomePage","root","formstyles","Onboarding","authPageAvailable","setAuthPageAvailable","TestAuthPage","authPage","pageActive","handleConnectionSuccess","appBar","appBarShift","logoutButton","menuButton","hide","App","AppShell","setOpen","CssBaseline","AppBar","position","Toolbar","edge","faSignOutAlt","undefined","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44c63e6c.chunk.js","sourcesContent":["import { Role, User, GroceryList, UnitType, IngredientCategory, Ingredient,\r\n    RequirementsListIngredient, KitchenIngredient, RecipeCategory, Recipe, UserAction } from \"../models\";\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst protocol = \"https://\", serverIp = window.location.hostname === \"localhost\" ? \"localhost\" : \r\n                                        window.location.hostname === \"192.168.2.101\" ? \"192.169.2.101\" :\r\n                                        window.location.hostname.indexOf(\"sywapps.com\") > -1 ? \"recipefinderapi.sywapps.com\" : \"\",\r\n    port = 5001, apiPage = \"/api\",\r\n    api_url = protocol + serverIp + \":\" + port + apiPage;\r\n\r\nconst defaultHeaders = (data) => ({ \"Accept\": \"*/*\", \"Content-Type\": \"application/json\" });\r\n\r\nconst AccessTokenHeaderName = \"RecipeFinder_AccessToken\";\r\n\r\nvar accessToken;\r\nconst AuthorizationHeaders = () => {\r\n    if (!accessToken) {\r\n        accessToken = getAccessToken();\r\n    }\r\n\r\n    return ({ [AccessTokenHeaderName]: accessToken });\r\n};\r\n\r\nfunction HandlerError(error) {\r\n    if (error.response) {\r\n        console.log(`${error.response.status} - `, error.response.data.Message ?? error.response.data);\r\n    } else if (error.request) {\r\n        console.log(`Request failed: `, error.request);\r\n    } else {\r\n        console.log(`Axios request execution fail: ${error.message}`, error);\r\n    }\r\n\r\n    return \"Error\";\r\n};\r\n\r\nfunction getAccessToken() {\r\n    const ACCOUNT_LS = \"recipefinder_account\";\r\n\r\n    var account = localStorage.getItem(ACCOUNT_LS);\r\n\r\n    try\r\n    {\r\n        account = JSON.parse(account);\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n        account = {};\r\n    }\r\n\r\n    return account?.AccessToken;\r\n};\r\n\r\nclass EntityGroup {\r\n    constructor(groupName = '', api_path = '') {\r\n        this.Name = groupName;\r\n        this.ApiUrl = api_url + (api_path.length > 0 ? \"/\" + api_path : '');\r\n\r\n        if (!accessToken) {\r\n            getAccessToken();\r\n        }\r\n    };\r\n\r\n    ApiUrl = '';\r\n    Name = '';\r\n\r\n    async GetAll() {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async GetById(id = '') {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl + \"/\" + id, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async GetByName(name = '') {\r\n        try\r\n        {\r\n            var response = await axios.get(this.ApiUrl + \"/byname/\" + name, { headers: AuthorizationHeaders() });\r\n\r\n            return response.data;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Create(newObj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(newObj, null, 4);\r\n\r\n            var response = await axios.post(this.ApiUrl,\r\n                data,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Update(id = '', updatedObj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(updatedObj, null, 4);\r\n\r\n            var response = await axios.put(this.ApiUrl + \"/\" + id,\r\n                data,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async Delete(id = '', obj = {}) {\r\n        try\r\n        {\r\n            const data = JSON.stringify(obj, null, 4);\r\n\r\n            var response = await axios.delete(this.ApiUrl + '/' + id,\r\n                { headers: { ...(defaultHeaders(data)), ...AuthorizationHeaders() } });\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            return HandlerError(e);\r\n        }\r\n    };\r\n\r\n    async PerformCustom(type = 'get', url, obj = {}, headers = {}) {\r\n        try\r\n        {\r\n            var response = {};\r\n\r\n            headers = { ...AuthorizationHeaders(), ...headers };\r\n\r\n            if (type === 'get')\r\n            {\r\n                response = await axios.get(url, { headers: headers });\r\n            }\r\n            else if (type === 'post')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...defaultHeaders(data), ...headers };\r\n\r\n                response = await axios.post(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else if (type === 'put')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...defaultHeaders(data), ...headers };\r\n\r\n                response = await axios.put(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else if (type === 'delete')\r\n            {\r\n                const data = JSON.stringify(obj, null, 4);\r\n\r\n                headers = { ...defaultHeaders(data), ...headers };\r\n\r\n                response = await axios.delete(url, data,\r\n                    { headers: headers });\r\n            }\r\n            else response = 'Invalid request type!';\r\n\r\n            return response;\r\n        }\r\n        catch (e)\r\n        {\r\n            console.log(`Failed request to '${url}' as ${type.toUpperCase()}`, e);\r\n\r\n            HandlerError(e);\r\n\r\n            return { info: e, error: true, data: \"Error\" };\r\n        }\r\n    };\r\n};\r\n\r\nclass CustomEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Custom\", \"\");\r\n    };\r\n\r\n    async Encrypt(text, salt) {\r\n        var res = await super.PerformCustom('post', this.ApiUrl + '/Encrypt', { Text: text, Salt: salt });\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data.Result;\r\n    };\r\n\r\n    async GetSalt() {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Encrypt/getsalt');\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data.Result;\r\n    };\r\n\r\n    async LogOut(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/logout?show', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async ValidateAccessToken(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/Validate', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async RefreshAccessToken(headers) {\r\n        var res = await super.PerformCustom('post', this.ApiUrl + '/Authorize/Refresh', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        return res.data;\r\n    };\r\n\r\n    async GetUserByAccessToken(headers) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/Authorize/Me', null, headers);\r\n\r\n        if (res.error) {\r\n            return \"Error\";\r\n        }\r\n\r\n        const item = res.data;\r\n\r\n        return new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n    };\r\n};\r\n\r\nclass IngredientEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Ingredients\", \"Ingredients\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLiterPerUnit,\r\n                item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetWhatToBuy(userId, type = 'recipes' || 'ingredients') {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + `/whattobuy${type}/` + userId);\r\n\r\n        const fixedData = res.data && res.data !== \"Error\" && res.data.map ?\r\n            type === 'recipes' ?\r\n                res.data.map((item) => {\r\n                    return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                        item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                        item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                            new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                                requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                                requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                            requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                            new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                                requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                                null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                                    requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                                    requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                        )) : [],\r\n                        new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                            item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n                })\r\n                :\r\n                res.data.map(requirement => {\r\n                    return new RequirementsListIngredient(requirement.CountId,\r\n                        new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                            requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                            requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                        requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                        new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                            requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                            null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                                requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                                requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                    )\r\n                })\r\n            : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLiterPerUnit,\r\n            item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Ingredient(item.CountId, item.Id, item.Name, item.ImageLocation, item.AverageWeightInKgPerUnit, item.AverageVolumeInLiterPerUnit,\r\n            item.Categories ? item.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.UnitTypes ? item.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass UserEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Users\", \"Users\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n                item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new User(item.CountId, item.Id, item.Name, item.Email, item.PhoneNumber, item.PasswordHashed, item.Salt, item.DOB, item.CreationDate,\r\n            item.Roles ? item.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetActionsByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/' + id + \"/actions\");\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new UserAction(item.CountId,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []),\r\n                item.Endpoint, item.RequestType, item.Description, item.RefObject ? item.RefObject : { Id: item.RefObjectid, Name: item.RefObjectName }, item.ActionPerformedOnTable, item.Success );\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRolesByUserId(id) {\r\n        var data = await super.PerformCustom('get', this.ApiUrl + '/getroles/' + id);\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Role(item.CountId, item.Id, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass RoleEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Roles\", \"Roles\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Role(item.CountId, item.Id, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Role(item.CountId, item.Id, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Role(item.CountId, item.Id, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass RecipeEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Recipes\", \"Recipes\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetPreparableForUser(userId) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/preparable/' + userId);\r\n\r\n        const fixedData = res.data && res.data !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetAllFromCook(userId) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/bycook/' + userId);\r\n\r\n        const fixedData = res.data && res.data !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n                item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                    new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                        requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                        requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                    requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                    new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                        requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                        null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                            requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                            requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n                )) : [],\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n            item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n            item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                    requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                        requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                        requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n            )) : [],\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new Recipe(item.CountId, item.Id, item.Name, item.Description, item.ImageLocation, item.IsPublic, item.PreparationSteps, item.VideoTutorialLink,\r\n            item.Categories ? item.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n            item.RequirementsList?.Ingredients ? item.RequirementsList?.Ingredients.map(requirement => new RequirementsListIngredient(requirement.CountId,\r\n                new Ingredient(requirement.Ingredient.CountId, requirement.Ingredient.Id, requirement.Ingredient.Name, requirement.Ingredient.ImageLocation, requirement.Ingredient.AverageWeightInKgPerUnit, requirement.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    requirement.Ingredient.Categories ? requirement.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    requirement.Ingredient.UnitTypes ? requirement.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                requirement.Units, new UnitType(requirement.UnitType.CountId, requirement.UnitType.Name, requirement.UnitType.AllowDecimals),\r\n                new Recipe(requirement.Recipe.CountId, requirement.Recipe.Id, requirement.Recipe.Name, requirement.Recipe.Description, requirement.Recipe.ImageLocation, requirement.Recipe.IsPublic, requirement.Recipe.PreparationSteps, requirement.Recipe.VideoTutorialLink,\r\n                    requirement.Recipe.Categories ? requirement.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, requirement.Recipe.User ? new User(requirement.Recipe.User.CountId, requirement.Recipe.User.Id, requirement.Recipe.User.Name, requirement.Recipe.User.Email,\r\n                        requirement.Recipe.User.PhoneNumber, requirement.Recipe.User.PasswordHashed, requirement.Recipe.User.Salt, requirement.Recipe.User.DOB, requirement.Recipe.User.CreationDate,\r\n                        requirement.Recipe.User.Roles ? requirement.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []) : null)\r\n            )) : [],\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass KitchenEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"Kitchens\", \"Kitchens\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n            item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n            item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n            item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetKitchenByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byuserid/' + id);\r\n\r\n        const fixedData = res.data;\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetKitchenByUserName(name) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byusername/' + name);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new KitchenIngredient(item.Id, new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt, item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass RequirementsListEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"RequirementsLists\", \"RequirementsLists\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []))\r\n                )\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new RequirementsListIngredient(item.CountId,\r\n            new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n            item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n            new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                item.Recipe.Categories ? item.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                    item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                    item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : [])));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRequirementsListByRecipeId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byrecipeid/' + id);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []))\r\n                )\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetRequirementsListByRecipeName(name) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byrecipename/' + name);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new RequirementsListIngredient(item.CountId,\r\n                new Ingredient(item.Ingredient.CountId, item.Ingredient.Id, item.Ingredient.Name, item.Ingredient.ImageLocation, item.Ingredient.AverageWeightInKgPerUnit, item.Ingredient.AverageVolumeInLiterPerUnit,\r\n                    item.Ingredient.Categories ? item.Ingredient.Categories.map(category => new IngredientCategory(category.CountId, category.Name)) : [],\r\n                    item.Ingredient.UnitTypes ? item.Ingredient.UnitTypes.map(unitType => new UnitType(unitType.CountId, unitType.Name, unitType.AllowDecimals)) : []),\r\n                item.Units, new UnitType(item.UnitType.CountId, item.UnitType.Name, item.UnitType.AllowDecimals),\r\n                new Recipe(item.Recipe.CountId, item.Recipe.Id, item.Recipe.Name, item.Recipe.Description, item.Recipe.ImageLocation, item.Recipe.IsPublic, item.Recipe.PreparationSteps, item.Recipe.VideoTutorialLink,\r\n                    item.Recipe.Categories ? item.Recipe.Categories.map(category => new RecipeCategory(category.CountId, category.Name)) : [],\r\n                    null, new User(item.Recipe.User.CountId, item.Recipe.User.Id, item.Recipe.User.Name, item.Recipe.User.Email,\r\n                        item.Recipe.User.PhoneNumber, item.Recipe.User.PasswordHashed, item.Recipe.User.Salt, item.Recipe.User.DOB, item.Recipe.User.CreationDate,\r\n                        item.Recipe.User.Roles ? item.Recipe.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : [])));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass UnitTypeEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"UnitTypes\", \"UnitTypes\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new UnitType(item.CountId, item.Name, item.AllowDecimals);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass IngredientCategoryEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"IngredientCategories\", \"IngredientCategories\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new IngredientCategory(item.CountId, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new IngredientCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new IngredientCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass RecipeCategoryEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"RecipeCategories\", \"RecipeCategories\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new RecipeCategory(item.CountId, item.Name);\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new RecipeCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new RecipeCategory(item.CountId, item.Name);\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nclass GroceryListEntityGroup extends EntityGroup {\r\n    constructor() {\r\n        super(\"GroceryLists\", \"GroceryLists\");\r\n    };\r\n\r\n    async GetAll() {\r\n        var data = await super.GetAll();\r\n\r\n        const fixedData = data && data !== \"Error\" && data.map ? data.map((item) => {\r\n            return new GroceryList(item.CountId, item.Name, item.Value,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                    item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetAllByUserId(id) {\r\n        var res = await super.PerformCustom('get', this.ApiUrl + '/byuserid/' + id);\r\n\r\n        const fixedData = res.data && res !== \"Error\" && res.data.map ? res.data.map((item) => {\r\n            return new GroceryList(item.CountId, item.Name, item.Value,\r\n                new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                    item.User.DOB, item.User.CreationDate,\r\n                    item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n        }) : [];\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetById(id) {\r\n        var item = await super.GetById(id);\r\n\r\n        const fixedData = new GroceryList(item.CountId, item.Name, item.Value,\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n\r\n    async GetByName(name) {\r\n        var item = await super.GetByName(name);\r\n\r\n        const fixedData = new GroceryList(item.CountId, item.Name, item.Value,\r\n            new User(item.User.CountId, item.User.Id, item.User.Name, item.User.Email, item.User.PhoneNumber, item.User.PasswordHashed, item.User.Salt,\r\n                item.User.DOB, item.User.CreationDate,\r\n                item.User.Roles ? item.User.Roles.map(role => new Role(role.CountId, role.Id, role.Name)) : []));\r\n\r\n        return fixedData;\r\n    };\r\n};\r\n\r\nexport default class Api {\r\n    constructor() {\r\n        const authReturnUrlPath = '/returnAuthorization';\r\n\r\n        const authPage = \"/api/authorize/login\",\r\n            params = `?ReturnUrl=${window.location.protocol}//${window.location.hostname}:${window.location.port}${authReturnUrlPath}`;\r\n\r\n        this.AuthorizationPage = protocol + serverIp + \":\" + port + authPage + params;\r\n\r\n        this.AuthReturnUrlPath = authReturnUrlPath;\r\n\r\n        this.Url = api_url;\r\n        this.AccessTokenHeaderName = AccessTokenHeaderName;\r\n\r\n        this.Ingredients = new IngredientEntityGroup();\r\n        this.Users = new UserEntityGroup();\r\n        this.Roles = new RoleEntityGroup();\r\n        this.Recipes = new RecipeEntityGroup();\r\n        this.Kitchens = new KitchenEntityGroup();\r\n        this.RequirementsLists = new RequirementsListEntityGroup();\r\n        this.UnitTypes = new UnitTypeEntityGroup();\r\n        this.IngredientCategories = new IngredientCategoryEntityGroup();\r\n        this.RecipeCategories = new RecipeCategoryEntityGroup();\r\n        this.GroceryLists = new GroceryListEntityGroup();\r\n        this.Custom = new CustomEntityGroup();\r\n    };\r\n};","export default class Role {\r\n    constructor(countId, id, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n    };\r\n};","import Role from \"./Role\"\r\n\r\nexport default class User {\r\n    constructor(countId, id, name, email, phoneNumber, passwordHashed, salt, dateOfBirth, creationDate, roles) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Email = email ?? '';\r\n        this.PhoneNumber = phoneNumber ?? '';\r\n        this.PasswordHashed = passwordHashed ?? '';\r\n        this.Salt = salt ?? '';\r\n        this.DateOfBirth = dateOfBirth ? new Date(Date.parse(dateOfBirth)) : null;\r\n        this.CreationDate = creationDate ? new Date(Date.parse(creationDate)) : null;\r\n        this.Roles = roles ?? [];\r\n    };\r\n    \r\n    Roles = [new Role()];\r\n};","import User from \"./User\"\r\n\r\nexport default class UserAction {\r\n    constructor(countId, user, endpoint, requestType, description, refObject, actionPerformedOnTable, success) {\r\n        this.CountId = countId ?? -1;\r\n        this.User = user ?? new User();\r\n        this.Endpoint = endpoint ?? '';\r\n        this.RequestType = requestType ?? '';\r\n        this.Description = description ?? '';\r\n        this.RefObject = refObject ?? {};\r\n        this.ActionPerformedOnTable = actionPerformedOnTable ?? '';\r\n        this.Success = success ?? false;\r\n    };\r\n\r\n    User = new User();\r\n};","import User from \"./User\"\r\n\r\nexport default class GroceryList {\r\n    constructor(id, name, value, user) {\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Value = value ?? '';\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user ?? new User();\r\n    };\r\n    \r\n    User = new User();\r\n};","export default class UnitType {\r\n    constructor(countId, name, allowDecimals) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n        this.AllowDecimals = allowDecimals ?? false;\r\n    };\r\n};","export default class IngredientCategory {\r\n    constructor(countId, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n    };\r\n};","export default class RecipeCategory {\r\n    constructor(countId, name) {\r\n        this.CountId = countId ?? -1;\r\n        this.Name = name ?? '';\r\n    };\r\n};","import IngredientCategory from \"./IngredientCategory\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class Ingredient {\r\n    constructor(countId, id, name, imgLocation, avgkgPerUnit, avgLPerUnit, categories, unitTypes) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.ImageLocation = imgLocation ?? '';\r\n        this.AverageWeightInKgPerUnit = avgkgPerUnit ?? 0.00;\r\n        this.AverageVolumeInLiterPerUnit = avgLPerUnit ?? 0.00;\r\n        this.Categories = categories ?? [];\r\n        this.UnitTypes = unitTypes ?? [];\r\n    };\r\n\r\n    Categories = [new IngredientCategory()];\r\n    UnitTypes = [new UnitType()];\r\n};","import Ingredient from \"./Ingredient\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class RequirementsListIngredient {\r\n    constructor(countId, ingredient, units, unitType, recipe) {\r\n        this.CountId = countId ?? -1;\r\n        this.IngredientId = ingredient?.Id ?? '';\r\n        this.Ingredient = ingredient ?? new Ingredient();\r\n        this.Units = units ?? 0.00;\r\n        this.UnitTypeId = unitType?.CountId ?? -1;\r\n        this.UnitType = unitType ?? new UnitType();\r\n        this.RecipeId = recipe?.Id ?? '';\r\n        this.Recipe = recipe ?? null;\r\n    };\r\n\r\n    Ingredient = new Ingredient();\r\n    UnitType = new UnitType();\r\n};","import RecipeCategory from \"./RecipeCategory\"\r\nimport RequirementsListIngredient from \"./RequirementsListIngredient\"\r\nimport User from \"./User\"\r\n\r\nexport default class Recipe {\r\n    constructor(countId, id, name, description, imageLocation, isPublic, preparationSteps, videoTutorialLink, categories, requirementsList, user) {\r\n        this.CountId = countId ?? -1;\r\n        this.Id = id ?? '';\r\n        this.Name = name ?? '';\r\n        this.Description = description ?? '';\r\n        this.ImageLocation = imageLocation ?? '';\r\n        this.PreparationSteps = preparationSteps ?? '';\r\n        this.VideoTutorialLink = videoTutorialLink ?? '';\r\n        this.IsPublic = isPublic ?? true;\r\n        this.Categories = categories ?? [];\r\n        this.RequirementsList = requirementsList ?? [];\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user ?? new User();\r\n    };\r\n\r\n    Categories = [new RecipeCategory()];\r\n    RequirementsList = [new RequirementsListIngredient()];\r\n    User = new User();\r\n};","import Ingredient from \"./Ingredient\"\r\nimport UnitType from \"./UnitType\"\r\n\r\nexport default class KitchenIngredient {\r\n    constructor(countId, ingredient, units, unitType, user) {\r\n        this.CountId = countId ?? -1;\r\n        this.Ingredient = ingredient ?? new Ingredient();\r\n        this.Units = units ?? 0.00;\r\n        this.UnitType = unitType ?? new UnitType();\r\n        this.UserId = user?.Id ?? '';\r\n        this.User = user;\r\n    };\r\n\r\n    Ingredient = new Ingredient();\r\n    UnitType = new UnitType();\r\n};","import React, { useContext } from \"react\";\r\nimport Api from \"../API/api\";\r\n\r\nconst ApiContext = React.createContext({});\r\n\r\nexport function ApiProvider({ children }) {\r\n    \r\n    const API = new Api();\r\n\r\n    var contextValue = {\r\n        Api: API,\r\n        Ingredients: API.Ingredients,\r\n        Users: API.Users,\r\n        Roles: API.Roles,\r\n        Recipes: API.Recipes,\r\n        Kitchens: API.Kitchens,\r\n        RequirementsLists: API.RequirementsLists,\r\n        UnitTypes: API.UnitTypes,\r\n        IngredientCategories: API.IngredientCategories,\r\n        RecipeCategories: API.RecipeCategories,\r\n        GroceryLists: API.GroceryLists,\r\n        Custom: API.Custom,\r\n    };\r\n\r\n    console.log(\"Loading API...\");\r\n\r\n    return (\r\n        <ApiContext.Provider value={contextValue}>\r\n            {children}\r\n        </ApiContext.Provider>\r\n    );\r\n};\r\n\r\nexport function useAPI() {\r\n    return useContext(ApiContext);\r\n};","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useAPI } from \"../API/api-context\";\r\n\r\nconst ACCOUNT_LS = \"recipefinder_account\";\r\n\r\nconst AccountContext = React.createContext({});\r\n\r\nexport function Authenticate({ children }) {\r\n\r\n    const { Api } = useAPI();\r\n\r\n    const [account, setAccount] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        async function checkLogin() {\r\n\r\n            function getTokens() {\r\n                function getParam(key) {\r\n                    const segments = window.location.search.substr(1).split('&');\r\n            \r\n                    var value;\r\n            \r\n                    segments.forEach((segment) => {\r\n                        var keyToValue = segment.split('=');\r\n            \r\n                        var param = { key: keyToValue[0], value: keyToValue[1] };\r\n            \r\n                        if (param.key === key) {\r\n                            value = param.value;\r\n                            return;\r\n                        }\r\n                    });\r\n            \r\n                    return value;\r\n                }\r\n            \r\n                var error;\r\n                if ((error = getParam(\"Error\")))\r\n                {\r\n                    console.log(error);\r\n\r\n                    setLoaded(true);\r\n                }\r\n                else\r\n                {\r\n                    var accessToken;\r\n                    var userId;\r\n                    if ((accessToken = getParam('Token')) && (userId = getParam('UserId'))) {\r\n                        setTokens(accessToken, userId);\r\n                    }\r\n                }\r\n            };\r\n        \r\n            function setTokens(accessToken, userId) {\r\n                if (account?.AccessToken === accessToken && account?.Id) {\r\n                    return;\r\n                }\r\n        \r\n                Api.Custom.GetUserByAccessToken({ [Api.AccessTokenHeaderName]: accessToken }).then((user) => {\r\n                    var acc = {\r\n                        ...account,\r\n                        Id: user.Id,\r\n                        Name: user.Name,\r\n                        Email: user.Email,\r\n                        Roles: user.Roles,\r\n                        AccessToken: accessToken,\r\n                    };\r\n            \r\n                    localStorage.setItem(ACCOUNT_LS, JSON.stringify(acc));\r\n                    setAccount(acc);\r\n                    \r\n                    setLoaded(true);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n        \r\n                    setLoaded(true);\r\n                });\r\n            };\r\n\r\n            var localAccStr = localStorage.getItem(ACCOUNT_LS);\r\n            var localAcc = {};\r\n\r\n            try\r\n            {\r\n                localAcc = JSON.parse(localAccStr);\r\n            }\r\n            catch (e)\r\n            {\r\n                console.log(e);\r\n            }\r\n\r\n            if (!account?.Id && localAcc) {\r\n                setAccount(localAcc);\r\n            }\r\n\r\n            if (window.location.pathname === '/returnAuthorization' && !(localAcc?.AccessToken && localAcc?.Id)) {\r\n                getTokens();\r\n\r\n                return;\r\n            }\r\n\r\n            if (!localAcc) {\r\n                console.log(\"No local account found.\");\r\n\r\n                setLoaded(true);\r\n\r\n            } else if (!localAcc.AccessToken || localAcc.AccessToken.length !== 45) {\r\n                console.log('User not authenticated.');\r\n\r\n                setLoaded(true);\r\n\r\n            } else {\r\n                const tokenValidation = await Api.Custom.ValidateAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                if (tokenValidation.Result === \"Success.\") {\r\n                    console.log(\"Token validated.\");\r\n\r\n                    if (account?.AccessToken !== localAcc.AccessToken) {\r\n                        var accWithUser = account;\r\n\r\n                        if (!(accWithUser?.Id)) {\r\n                            var user = await Api.Custom.GetUserByAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                            accWithUser = {\r\n                                ...accWithUser,\r\n                                Id: user.Id,\r\n                                Name: user.Name,\r\n                                Email: user.Email,\r\n                                Roles: user.Roles,\r\n                            };\r\n                        }\r\n\r\n                        var correctedAcc = {\r\n                            ...accWithUser,\r\n                            AccessToken: localAcc.AccessToken,\r\n                        }\r\n    \r\n                        localStorage.setItem(ACCOUNT_LS, JSON.stringify(correctedAcc));\r\n\r\n                        setAccount(correctedAcc);\r\n\r\n                        setLoaded(true);\r\n                    }\r\n\r\n                } else {\r\n                    if (window.location.pathname === '/returnAuthorization') {\r\n                        localStorage.removeItem(ACCOUNT_LS);\r\n\r\n                        getTokens();\r\n\r\n                        return;\r\n                    }\r\n\r\n                    console.log(\"Token invalid. Refreshing...\");\r\n\r\n                    const newToken = await Api.Custom.RefreshAccessToken({ [Api.AccessTokenHeaderName]: localAcc.AccessToken });\r\n\r\n                    if (newToken !== \"Error\") {\r\n                        console.log(\"New token received.\");\r\n\r\n                        var refreshedAcc = {\r\n                            ...account,\r\n                            AccessToken: newToken.access_token,\r\n                        }\r\n\r\n                        localStorage.setItem(ACCOUNT_LS, JSON.stringify(refreshedAcc));\r\n                        setAccount(refreshedAcc);\r\n\r\n                        setLoaded(true);\r\n                    }\r\n                    else {\r\n                        localStorage.removeItem(ACCOUNT_LS);\r\n                        setAccount({});\r\n\r\n                        setLoaded(true);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        checkLogin();\r\n    }, [account, Api, loaded]);\r\n    \t\r\n    const logIn = (name, password) => {\r\n        \r\n    };\r\n\r\n    const logOut = () => {\r\n        Api.Custom.LogOut({ [Api.AccessTokenHeaderName]: account?.AccessToken });\r\n\r\n        localStorage.removeItem(ACCOUNT_LS);\r\n        setAccount({});\r\n    };\r\n\r\n    var contextValue = {\r\n        loaded: loaded,\r\n        registered: account?.Id && account?.AccessToken ? true : false,\r\n        roles: account?.Roles ? account.Roles : [],\r\n        accessToken: account?.AccessToken,\r\n        id: account?.Id,\r\n        name: account?.Name,\r\n        logIn,\r\n        logOut,\r\n    };\r\n\r\n    return (\r\n        <AccountContext.Provider value={contextValue}>\r\n            {children}\r\n        </AccountContext.Provider>\r\n    );\r\n};\r\n\r\nexport function useAccount() {\r\n    return useContext(AccountContext);\r\n};\r\n\r\n/*************************/\r\n/* Local Login Functions */\r\n/*************************/\r\nexport async function GetUserIdByName(name, UsersApi) {\r\n    if (!name && name.length < 1) { return; }\r\n\r\n    const user = await UsersApi.GetByName(name);\r\n\r\n    if (user) {\r\n        return user.Id;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport async function CreateAccount(username, email, password, updateByLogIn, api) {\r\n\r\n    const newUser = await createUserObject(api.Custom, username, email, password);\r\n\r\n    var res = await api.Users.Create(newUser);\r\n\r\n    if (res === 'Error') { return false; }\r\n\r\n    updateByLogIn(newUser);\r\n\r\n    return true;\r\n};\r\n\r\nasync function encryptSHA256(CustomApi, value = '', salt = '') {\r\n    try\r\n    {\r\n        return await CustomApi.Encrypt(value, salt);\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nasync function generateSalt(CustomApi) {\r\n    try\r\n    {\r\n        return await CustomApi.GetSalt();\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nasync function createUserObject(CustomApi, username = '', email = '', password) {\r\n    const salt = await generateSalt(CustomApi);\r\n\r\n    return {\r\n        CountId: 0,\r\n        Id: '',\r\n        Name: username,\r\n        Email: email,\r\n        EmailConfirmed: false,\r\n        EmailConfirmationToken: '',\r\n        PasswordHashed: await encryptSHA256(CustomApi, password, salt),\r\n        Salt: salt,\r\n        PhoneNumber: \"00 000 0000\",\r\n        PhoneNumberConfirmed: false,\r\n        DOB: new Date(),\r\n        CreationDate: new Date(),\r\n        NAME_NORMALIZED: username.toUpperCase(),\r\n        EMAIL_NORMALIZED: email.toUpperCase(),\r\n        SecurityStamp: '',\r\n        ConcurrencyStamp: '',\r\n        LockoutEnabled: false,\r\n        lockoutEnd: null,\r\n        AccessFailedCount: 0,\r\n        Kitchen: null,\r\n        Roles: ((await CustomApi.PerformCustom('get', CustomApi.ApiUrl + \"/Roles/byname/Default\"))?.data) ?? [],\r\n        Deleted: false,\r\n    };\r\n};","import React, { Fragment } from \"react\";\r\nimport { useAccount } from \"../API/index\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nexport const Loading = ({ children }) => {\r\n    const classes = useStyles();\r\n    \r\n    const { loaded: accountLoaded } = useAccount();\r\n\r\n    let loaded = accountLoaded;\r\n\r\n    if (!loaded) {\r\n        return (\r\n            <div className={classes.container}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <Fragment>{children}</Fragment>;\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function DrawerItem(props) {\r\n    return (\r\n        <ListItem button component={Link} to={props.link}>\r\n            <FontAwesomeIcon icon={props.icon} style={{ marginRight: '5px' }}/><ListItemText primary={props.text} onClick={props.onClick} />\r\n        </ListItem>\r\n    );\r\n};","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction Thumbnail({ source, size = 256 }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            style={{ border: 'solid 1px', width: ((size + 2) + \"px\").toString(), maxWidth: ((size + 2) + \"px\").toString(), height: ((size + 2) + \"px\").toString(), maxHeight: ((size + 2) + \"px\").toString() }}\r\n            className={classes.inputBox}\r\n        >\r\n            <img\r\n                alt=\"\"\r\n                src={source}\r\n                width={(size + \"px\").toString()}\r\n                height={(size + \"px\").toString()}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { Thumbnail };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\n\r\nimport { Thumbnail } from \"./Thumbnail\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction ImageInputComponent({ variant = \"outlined\", defaultValue, onChange, isAsync = false }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n            <Grid style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Grid item xs={9} style={{ marginRight: '5px', display: 'flex', justifyContent: 'center' }}>\r\n                    <TextField\r\n                        className={classes.inputBox}\r\n                        variant={variant}\r\n                        id=\"Image\"\r\n                        label=\"Image\"\r\n                        value={value}\r\n                        type=\"text\"\r\n                        onChange={isAsync ? async (e) => {\r\n                            setValue(e.target.value);\r\n                            await onChange(e.target.value);\r\n                        } : (e) => {\r\n                            setValue(e.target.value);\r\n                            onChange(e.target.value);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3} style={{ display: 'flex', justifyContent: 'center', verticalAlign: 'center' }}>\r\n                    <Thumbnail source={value} size={50}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { ImageInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserInputComponent({ name, variant = \"outlined\", type = 'text', inputProps, defaultValue, onChange, isAsync = false }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    if (type === 'number') {\r\n        if (inputProps.step && inputProps.step === 1.00 && value % 1 !== 0) {\r\n            var correction = parseInt((parseFloat(value) + 0.50).toString()).toString();\r\n            if (correction === 0) {\r\n                correction = 1;\r\n            }\r\n\r\n            setValue(correction);\r\n            onChange(correction);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <TextField\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={value}\r\n                type={type}\r\n                inputProps={inputProps}\r\n                onChange={isAsync ? async (e) => {\r\n                    setValue(e.target.value);\r\n                    await onChange(e.target.value);\r\n                } : (e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Select, MenuItem, InputLabel } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserMultiSelectInputComponent({ name, variant = \"outlined\", defaultValues = [], options, onChange }) {\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    if ((!values || values.length < 1) && (defaultValues && defaultValues.length > 0)) {\r\n        setValues(defaultValues);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    const overrideOnChange = (value) => {\r\n        setValues(value);\r\n        onChange(value);\r\n    };\r\n\r\n    return (\r\n        <Grid>\r\n            <InputLabel id={name}/>\r\n            <Select\r\n                multiple={true}\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={values}\r\n                onChange={(e) => {\r\n                    overrideOnChange(e.target.value);\r\n                }}\r\n            > \r\n            {\r\n                options.map(option =>\r\n                    <MenuItem key={name + \"-\" + option.name} id={name + \"-\" + option.name} value={option.value} selected={values.indexOf(option.value) > -1}>{option.name}</MenuItem>\r\n                )\r\n            }\r\n            </Select>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserMultiSelectInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction UserSelectInputComponent({ name, variant = \"outlined\", defaultValue = '', options, onChange }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Select\r\n                className={classes.inputBox}\r\n                variant={variant}\r\n                id={name}\r\n                label={name}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n            > \r\n            {\r\n                options.map(option =>\r\n                    <MenuItem key={option.id ?? options.name + '-' + option.value} value={option.value} selected={option.value === defaultValue}>{option.name}</MenuItem>\r\n                )\r\n            }\r\n            </Select>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { UserSelectInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputBox: {\r\n        \r\n    },\r\n}));\r\n\r\nfunction PreparationStepsInputComponent({ name, defaultValue = '', onChange }) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    if (!value && defaultValue) {\r\n        setValue(defaultValue);\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    const updateValue = (newValue, index) => {\r\n        var updatedValue = value.split('{NEXT}')\r\n            .map((step, i) => {\r\n                if (i === index) {\r\n                    return newValue;\r\n                }\r\n                else {\r\n                    return step;\r\n                }\r\n            })\r\n            .join('{NEXT}');\r\n\r\n        setValue(updatedValue);\r\n        onChange(updatedValue);\r\n    };\r\n\r\n    const addStep = (newStepIndex) => {\r\n        const steps = value.split('{NEXT}');\r\n\r\n        var updatedValue;\r\n\r\n        if (newStepIndex === steps.length) {\r\n            updatedValue = value + \"{NEXT}Next step\";\r\n        }\r\n        else {\r\n            updatedValue = steps\r\n                .map((step, i) => {\r\n                    if (i === newStepIndex) {\r\n                        return \"Next step{NEXT}\" + step;\r\n                    }\r\n                    else {\r\n                        return step;\r\n                    }\r\n                })\r\n                .join('{NEXT}');\r\n        }\r\n\r\n        setValue(updatedValue);\r\n        onChange(updatedValue);\r\n    };\r\n\r\n    const removeStep = (index) => {\r\n        var stepValue = value.split('{NEXT}')[index];\r\n\r\n        if (stepValue) {\r\n            if ((value.split(stepValue).length - 1) === 1) {\r\n                var updatedValue = value.replace(stepValue, '').replace('{NEXT}{NEXT}', '{NEXT}');\r\n\r\n                if (updatedValue.endsWith('{NEXT}')) {\r\n                    updatedValue = updatedValue.substring(0, updatedValue.length - (\"{NEXT}\".length));\r\n                }\r\n\r\n                setValue(updatedValue);\r\n                onChange(updatedValue);\r\n            } else {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                    onClick={() => { addStep(0); }}>Add Step here</Button>\r\n            </Grid>\r\n            {\r\n                value.split('{NEXT}').map((step, index) => {\r\n                    return (\r\n                        <Grid container direction=\"row\"  style={{ marginBottom: '15px', borderTop: 'solid 1px' }}>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                Step {index + 1}:\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px', paddingTop: '10px', paddingBottom: '10px', borderBottom: 'solid 1px' }}>\r\n                                <TextField\r\n                                    className={classes.inputBox}\r\n                                    variant=\"outlined\"\r\n                                    id={name + \"-\" + index}\r\n                                    label={name + \" \" + (index + 1)}\r\n                                    value={step}\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        updateValue(e.target.value, index);\r\n                                    }}\r\n                                />\r\n                                <Button variant=\"outlined\" style={{ color: 'red', marginLeft: '10px' }}\r\n                                    onClick={() => { removeStep(index); }}>Remove Step</Button>\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                                    onClick={() => { addStep(index + 1); }}>Add Step here</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { PreparationStepsInputComponent };","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TablePagination, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        marginBottom: theme.spacing(3),\r\n        minWidth: \"80%\",\r\n    },\r\n}));\r\n\r\nfunction EntityList({ rows, columns }) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer className={classes.tableContainer}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            style={{ minWidth: column.minWidth }}\r\n                        >\r\n                            {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id} onClick={row.onClick ? () => row.onClick(row.id) : () => {}}>\r\n                        {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                    {column.format ? (column.format(value)) ?? value : value}\r\n                                </TableCell>\r\n                            );\r\n                        })}\r\n                        </TableRow>\r\n                    );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { EntityList };","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Ingredient, IngredientCategory } from \"../../models\";\r\n\r\nfunction SelectIngredientComponent({ Api, ingredients, selectIngredient }) {\r\n    const [categories, setCategories] = useState([new IngredientCategory()]);\r\n    if (categories.length === 1 && categories[0].CountId === -1)\r\n    {\r\n        categories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [filterOptions, setFilterOptions] = useState({ name: '', categories: [] });\r\n\r\n    const filter = (ingredient = new Ingredient()) => {\r\n        return (\r\n            (filterOptions.name?.length > 0 ? ingredient.Name.toLowerCase().indexOf(filterOptions.name.toLowerCase()) > -1 : true) &&\r\n            (filterOptions.categories?.length > 0 ?\r\n                ingredient.Categories.filter(c => {\r\n                    return filterOptions.categories.filter(x => {\r\n                        return x === c.CountId;\r\n                    }).length > 0;\r\n                }).length > 0\r\n            : true)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container style={{ borderBottom: 'solid 1px', overflow: 'auto', paddingLeft: \"10px\" }}>\r\n                <Grid container direction=\"row\" style={{ marginBottom: '8px', display: 'flex', alignContent: 'center' }}><Typography variant=\"h5\">Filters</Typography></Grid>\r\n                <Grid container direction=\"column\" item xs={6} style={{ padding: '3px', display: 'flex', alignContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ marginRight: '5px', display: 'flex', alignContent: 'center' }}>Search:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center' }}>\r\n                        <UserInputComponent\r\n                            defaultValue={filterOptions.name}\r\n                            name=\"search by name\"\r\n                            onChange={(value) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ name: value } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"column\" item xs={6} style={{ padding: '3px', display: 'flex', alignContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ marginRight: '5px', display: 'flex', alignContent: 'center' }}>Categories:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center' }}>\r\n                        <UserMultiSelectInputComponent\r\n                            name=\"select categories\"\r\n                            defaultValue={filterOptions.categories}\r\n                            options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                            onChange={(values) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ categories: values } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ paddingLeft: \"10px\" }}>\r\n                <Typography variant=\"h3\">Select an ingredient</Typography>\r\n                <EntityList\r\n                    columns={[\r\n                        { id: 'image', label: '', minWidth: 50 },\r\n                        { id: 'name', label: 'Name', minWidth: 100 },\r\n                        { id: 'unitTypes', label: 'Available Types', minWidth: 125 },\r\n                        { id: 'categories', label: 'Categories', minWidth: 125 },\r\n                        { id: 'select', label: 'Choose', minWidth: 100 },\r\n                    ]}\r\n                    rows={ingredients.filter(i => filter(i)).map(ingredient => {\r\n                        return {\r\n                            id: ingredient.Id,\r\n                            image: <Thumbnail source={ingredient.ImageLocation} size={50} />,\r\n                            name: ingredient.Name,\r\n                            unitTypes: ingredient.UnitTypes.map((unitType, index) => { if (index > 0) return \", \" + unitType.Name; else return unitType.Name; }),\r\n                            categories: ingredient.Categories.map((category, index) => { if (index > 0) return \", \" + category.Name; else return category.Name; }),\r\n                            select: <Button onClick={() => selectIngredient(ingredient)} style={{ color: 'forestgreen' }}>Select</Button>,\r\n                            onClick: () => selectIngredient(ingredient)\r\n                        };\r\n                    })}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { SelectIngredientComponent };","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Button, Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\n\r\nimport { SelectIngredientComponent } from \"../Global/SelectIngredientComponent\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\n\r\nimport { Ingredient, RequirementsListIngredient, UnitType } from \"../../models\";\r\n\r\nfunction RequirementsInputComponent({ Api, defaultValues = [new RequirementsListIngredient()], parentRecipe, onChange }) {\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    if (!values && defaultValues) {\r\n        setValues(defaultValues);\r\n    }\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1)\r\n    {\r\n        ingredients?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((ingredients) => {\r\n            if (ingredients === \"Error\") { return; }\r\n        \r\n            setIngredients(ingredients);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1)\r\n    {\r\n        unitTypes?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((unitTypes) => {\r\n            if (unitTypes === \"Error\") { return; }\r\n        \r\n            setUnitTypes(unitTypes);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n    \r\n    const removeRequirement = (index) => {\r\n        setValues(values => { var vals = [...values]; vals.splice(index, 1); return vals; });\r\n\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects.pop();\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const addRequirement = () => {\r\n        setValues([...values, new RequirementsListIngredient(null, null, null, null, parentRecipe)]);\r\n\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects.push(false);\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const updateValue = (newValue, index, propName) => {\r\n        var updatedValues = [...values];\r\n\r\n        updatedValues[index][propName] = newValue;\r\n\r\n        setValues(updatedValues);\r\n        onChange(updatedValues);\r\n    };\r\n\r\n    const selectIngredient = (ingredient, index) => {\r\n        updateValue(ingredient, index, \"Ingredient\");\r\n        updateValue(ingredient.Id, index, \"IngredientId\");\r\n\r\n        closeIngredientSelect(index);\r\n    };\r\n\r\n    const openIngredientSelect = (index) => {\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects[index] = true;\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const closeIngredientSelect = (index) => {\r\n        var ingredientsSelects = [...ingredientSelectsOpen];\r\n\r\n        ingredientsSelects[index] = false;\r\n\r\n        setIngredientSelectsOpen(ingredientsSelects);\r\n    };\r\n\r\n    const updateUnitType = (unitTypeId, index) => {\r\n        var unitType = unitTypes.find(u => u.CountId === unitTypeId);\r\n\r\n        updateValue(unitType, index, \"UnitType\");\r\n        updateValue(unitType.CountId, index, \"UnitTypeId\");\r\n    };\r\n\r\n    const [ingredientSelectsOpen, setIngredientSelectsOpen] = useState(defaultValues.map(val => false));\r\n\r\n    return (\r\n        <Grid>\r\n            {\r\n                values.map((requirement, index) => {\r\n                    const allowDecimals = ingredients.find(x => x.CountId === requirement.Ingredient?.CountId)?.UnitTypes.find(x => x.CountId === requirement.UnitType?.CountId)?.AllowDecimals ?? false;\r\n\r\n                    return (\r\n                        <Grid container direction=\"row\"  style={{ marginBottom: '15px', borderTop: 'solid 1px' }}>\r\n                            <Dialog open={ingredientSelectsOpen[index] ?? false} onClose={() => closeIngredientSelect(index)}>\r\n                                <DialogTitle>Ingredient</DialogTitle>\r\n                                <DialogContent>\r\n                                    <SelectIngredientComponent\r\n                                        Api={Api}\r\n                                        ingredients={ingredients.filter(i => values.filter(x => x.CountId === requirement.CountId).filter(x => x.Ingredient.CountId === i.CountId).length === 0)}\r\n                                        selectIngredient={(ingredient) => { selectIngredient(ingredient, index); }}\r\n                                    />\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                Requirement {index + 1}:\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                    <Button variant=\"outlined\" onClick={() => { openIngredientSelect(index); }}>{requirement.Ingredient?.Name.length > 0 ? requirement.Ingredient.Name : \"Choose Ingredient\"}</Button>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '15px' }}>\r\n                                    <UserInputComponent\r\n                                        name=\"Amount\"\r\n                                        defaultValue={requirement.Units}\r\n                                        inputProps={{ min: allowDecimals ? 0.01 : 1.00, max: 1000.00, step: allowDecimals ? 0.01 : 1.00 }}\r\n                                        type=\"number\"\r\n                                        onChange={(value) => {\r\n                                            updateValue(value, index, \"Units\");\r\n                                        }}\r\n                                    />\r\n                                    <UserSelectInputComponent\r\n                                        name=\"UnitTypes\"\r\n                                        defaultValue={requirement.UnitType.CountId}\r\n                                        options={requirement.Ingredient?.UnitTypes.map(unitType => { return { name: unitType.Name, value: unitType.CountId }; })}\r\n                                        onChange={(value) => {\r\n                                            updateUnitType(value, index);\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                                    <Button variant=\"outlined\" style={{ color: 'red', marginLeft: '10px' }}\r\n                                        onClick={() => { removeRequirement(index); }}>Remove Requirement</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n            <Grid container direction=\"row\" style={{ marginBottom: '20px' }}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}\r\n                    onClick={() => { addRequirement(); }}>Add Requirement</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RequirementsInputComponent };","import { Button, Card, Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\n\r\nimport { ImageInputComponent } from \"../components/Global/ImageInputComponent\";\r\nimport { Thumbnail } from \"../components/Global/Thumbnail\";\r\nimport { UserInputComponent } from \"../components/Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../components/Global/UserMultiSelectInputComponent\";\r\nimport { UserSelectInputComponent } from \"../components/Global/UserSelectInputComponent\";\r\nimport { PreparationStepsInputComponent } from \"../components/RecipeBook/preparationStepsInputComponent\";\r\nimport { RequirementsInputComponent } from \"../components/RecipeBook/RequirementsInputComponent\";\r\n\r\n//import { Ingredient, IngredientCategory, Recipe, RecipeCategory, UnitType } from \"../models\";\r\n\r\nfunction CreateIngredientEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <ImageInputComponent\r\n                    defaultValue={item?.ImageLocation}\r\n                    onChange={(value) => { onItemEdited({ ImageLocation: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"UnitTypes\"\r\n                    defaultValues={item?.UnitTypes.map(unitType => unitType.CountId)}\r\n                    options={ApiTables.unitTypes.map(unitType => { return { name: unitType.Name, value: unitType.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ UnitTypes: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Weight /Unit (Kg)\"\r\n                    defaultValue={item?.AverageWeightInKgPerUnit}\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        step: 0.00,\r\n                        min: 0.01,\r\n                        max: 1000.00,\r\n                    }}\r\n                    onChange={(value) => { onItemEdited({ AverageWeightInKgPerUnit: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Volume /Unit (L)\"\r\n                    defaultValue={item?.AverageVolumeInLiterPerUnit}\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        step: 0.00,\r\n                        min: 0.01,\r\n                        max: 1000.00,\r\n                    }}\r\n                    onChange={(value) => { onItemEdited({ AverageVolumeInLiterPerUnit: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    defaultValues={item?.Categories.map(cat => cat.CountId)}\r\n                    options={ApiTables.ingredientCategories.map(cat => { return { name: cat.Name, value: cat.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ Categories: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateIngredientCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateUnitTypeEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserSelectInputComponent\r\n                    name=\"AllowDecimals\"\r\n                    defaultValue={item?.AllowDecimals}\r\n                    options={[{ name: 'Decimals', value: true }, { name: 'Integers', value: false }]}\r\n                    onChange={(value) => { onItemEdited({ AllowDecimals: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeEditPage(item, notEditableProps, ApiTables, onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen, preparationStepsCount = 0, requirementsCount = 0 }) {\r\n    \r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Dialog keepMounted open={preparationStepsOpen ?? false} onClose={() => setPreparationStepsOpen(false)}>\r\n                <DialogTitle>Preparation Steps</DialogTitle>\r\n                <DialogContent>\r\n                    <PreparationStepsInputComponent\r\n                        name=\"Preparation Step\"\r\n                        defaultValue={item?.PreparationSteps}\r\n                        onChange={(value) => { onItemEdited({ PreparationSteps: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog keepMounted open={requirementsListOpen ?? false} onClose={() => setRequirementsListOpen(false)}>\r\n                <DialogTitle>RequirementsList</DialogTitle>\r\n                <DialogContent>\r\n                    <RequirementsInputComponent\r\n                        Api={Api}\r\n                        defaultValues={item?.RequirementsList}\r\n                        parentRecipe={item}\r\n                        onChange={(value) => { onItemEdited({ RequirementsList: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Description\"\r\n                    defaultValue={item?.Description}\r\n                    onChange={(value) => { onItemEdited({ Description: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <ImageInputComponent\r\n                    defaultValue={item?.ImageLocation}\r\n                    onChange={(value) => { onItemEdited({ ImageLocation: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Tutorial Video\"\r\n                    defaultValue={item?.VideoTutorialLink}\r\n                    onChange={(value) => { onItemEdited({ VideoTutorialLink: value }); }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <Button variant=\"outlined\" onClick={() => setPreparationStepsOpen(true)}>\r\n                    {preparationStepsCount} Steps\r\n                </Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <Button variant=\"outlined\" onClick={() => setRequirementsListOpen(true)}>\r\n                    {requirementsCount} Requirements\r\n                </Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserSelectInputComponent\r\n                    Name={\"Public?\"}\r\n                    defaultValue={item?.IsPublic}\r\n                    options={[\r\n                        { name: \"Public\", value: true },\r\n                        { name: \"Private\", value: false },\r\n                    ]}\r\n                    onChange={(value) => { onItemEdited({ IsPublic: value }) }}\r\n                />\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    defaultValues={item?.Categories.map(cat => cat.CountId)}\r\n                    options={ApiTables.recipeCategories.map(cat => { return { name: cat.Name, value: cat.CountId}; })}\r\n                    onChange={(value) => { onItemEdited({ Categories: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                <UserInputComponent\r\n                    name=\"Name\"\r\n                    defaultValue={item?.Name}\r\n                    onChange={(value) => { onItemEdited({ Name: value }); }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateEditPage(item, tableName, notEditableProps, ApiTables, onItemEdited, Api, additionals) {\r\n    switch (tableName) {\r\n        case \"Ingredients\":\r\n            return CreateIngredientEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"IngredientCategories\":\r\n            return CreateIngredientCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"UnitTypes\":\r\n            return CreateUnitTypeEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        case \"Recipes\":\r\n            return CreateRecipeEditPage(item, notEditableProps, ApiTables, onItemEdited, Api, additionals);\r\n\r\n        case \"RecipeCategories\":\r\n            return CreateRecipeCategoryEditPage(item, notEditableProps, ApiTables, onItemEdited);\r\n\r\n        default:\r\n            return (\r\n                <></>\r\n            );\r\n    };\r\n};\r\n\r\nfunction CreateIngredientDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Image:\r\n                {\r\n                    item?.ImageLocation ?\r\n                        <Thumbnail source={item.ImageLocation} size={50} />\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                UnitTypes:\r\n                {\r\n                    item?.UnitTypes.map(unitType => <Card key={unitType.CountId} style={{ margin: '2px', padding: '3px' }}>{unitType.Name}</Card>)\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Average Weight per Unit: {item?.AverageWeightInKgPerUnit} Kg / Unit\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Average Volume per Unit: {item?.AverageVolumeInLiterPerUnit} L / Unit\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Categories:\r\n                {\r\n                    item?.Categories.map(cat => <Card key={cat.CountId} style={{ margin: '2px', padding: '3px' }}>{cat.Name}</Card>)\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateIngredientCategoryDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateUnitTypeDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Allow Decimals: {item?.AllowDecimals ? \"True\" : \"False\"}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeDetailsPage(item) {\r\n    \r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Description: {item?.Description}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Image:\r\n                {\r\n                    item?.ImageLocation ?\r\n                        <Thumbnail source={item.ImageLocation} size={50} />\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Tutorial Video: {item?.VideoTutorialLink ? <a href={item?.VideoTutorialLink}>Click here to watch</a> : \"Not set\"}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Preparation Steps:\r\n                {\r\n                    item?.PreparationSteps ?\r\n                    item.PreparationSteps.split('{NEXT}').map((step, index) =>\r\n                        <Card key={index} style={{ margin: '2px', padding: '3px' }}>\r\n                            Step {index}. {step}\r\n                        </Card>\r\n                    )\r\n                    : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Requirements:\r\n                {\r\n                    item?.RequirementsList ?\r\n                        item.RequirementsList.map((requirement, index) =>\r\n                            <Card key={requirement.CountId} style={{ margin: '2px', padding: '3px' }}>\r\n                                {requirement.Ingredient.Name} - {requirement.Units} {requirement.UnitType.Name}\r\n                            </Card>\r\n                        )\r\n                        : \"Not set\"\r\n                }\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Public: {item?.IsPublic ? \"Public\" : \"Private\"}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Categories:\r\n                {\r\n                    item?.Categories.map(cat => <Card key={cat.CountId} style={{ margin: '2px', padding: '3px' }}>{cat.Name}</Card>)\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateRecipeCategoryDetailsPage(item) {\r\n    return (\r\n        <Grid container direction=\"row\" style={{ padding: '15px', justifyContent: 'center' }}>\r\n            <Grid container direction=\"row\" style={{ marginTop: '15px', justifyContent: 'center'  }}>\r\n                Name: {item?.Name}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nfunction CreateDetailsPage(item, tableName) {\r\n    switch (tableName) {\r\n        case \"Ingredients\":\r\n            return CreateIngredientDetailsPage(item);\r\n\r\n        case \"IngredientCategories\":\r\n            return CreateIngredientCategoryDetailsPage(item);\r\n\r\n        case \"UnitTypes\":\r\n            return CreateUnitTypeDetailsPage(item);\r\n\r\n        case \"Recipes\":\r\n            return CreateRecipeDetailsPage(item);\r\n\r\n        case \"RecipeCategories\":\r\n            return CreateRecipeCategoryDetailsPage(item);\r\n\r\n        default:\r\n            return (\r\n                <></>\r\n            );\r\n    };\r\n};\r\n\r\nfunction generateCRUDInfo(tableName, displayName, notEditableProps, context) {\r\n    context[tableName] = {\r\n        DisplayName: displayName,\r\n        getEditPage: (item, ApiTables, onItemEdited, Api, additionals) => {\r\n            return (\r\n                <Grid container direction=\"row\">\r\n                    {\r\n                        CreateEditPage(item, tableName, notEditableProps, ApiTables, onItemEdited, Api, additionals)\r\n                    }\r\n                </Grid>\r\n            );\r\n        },\r\n        getDetailsPage: (item, ApiTables, onItemEdited, Api, additionals) => {\r\n            return (\r\n                <Grid container direction=\"row\">\r\n                    {\r\n                        CreateDetailsPage(item, tableName)\r\n                    }\r\n                </Grid>\r\n            );\r\n        },\r\n    };\r\n};\r\n\r\nclass CRUDPagesInformation {\r\n    constructor() {\r\n        this.Pages = {};\r\n\r\n        generateCRUDInfo('Ingredients', 'Ingredients', [\"CountId\", \"Id\"], this.Pages);\r\n\r\n        generateCRUDInfo('IngredientCategories', 'Ingredient Categories', [\"CountId\"], this.Pages);\r\n\r\n        generateCRUDInfo('UnitTypes', 'Unit Types',[\"CountId\"], this.Pages);\r\n\r\n        generateCRUDInfo('Recipes', 'Recipes', [\"CountId\", \"Id\", \"User\", \"UserId\"], this.Pages);\r\n\r\n        generateCRUDInfo('RecipeCategories', 'Recipe Categories', [\"CountId\"], this.Pages);\r\n    };\r\n\r\n    Pages = {};\r\n};\r\n\r\nconst CRUDPagesInfo = new CRUDPagesInformation();\r\n\r\nexport default CRUDPagesInfo;","import React from \"react\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Typography, Drawer, IconButton, Divider, List } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nimport { faBook, faBookOpen, faHome, faListAlt, faMortarPestle, faUsers, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport DrawerItem from \"./DrawerItem\";\r\n\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerheader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        backgroundColor: '#ffbb00',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    chevron: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nfunction AppDrawer({ open, onOpen, isAdmin, isCreator, isCook }) {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerheader}>\r\n                <Typography variant=\"h5\" noWrap style={{ marginLeft: \"8px\" }}>\r\n                    Recipe Finder\r\n                </Typography>\r\n                <div className={classes.chevron}>\r\n                    <IconButton onClick={() => onOpen(false)}>\r\n                        {\r\n                            theme.direction === \"itr\" ? (\r\n                                <ChevronLeftIcon />\r\n                            ) : (\r\n                                <ChevronRightIcon />\r\n                            )\r\n                        }\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                <div>\r\n                    <i style={{ marginLeft: '10px' }}>Pages</i>\r\n                    <DrawerItem icon={faHome} link=\"/home/index\" text=\"Home\" />\r\n                    <DrawerItem icon={faUtensils} link=\"/kitchen/index\" text=\"Your Kitchen\" />\r\n                    <DrawerItem icon={faBookOpen} link=\"/recipebook/index\" text=\"Recipe Book\" />\r\n                    <DrawerItem icon={faListAlt} link=\"/grocerylists/index\" text=\"Grocery Lists\" />\r\n                </div>\r\n            </List>\r\n            {\r\n                isCook ? (\r\n                    <>\r\n                        <Divider />\r\n                        <List>\r\n                            <i style={{ marginLeft: '10px' }}>Cook</i>\r\n                            <DrawerItem icon={faMortarPestle} link=\"/recipebook/custom/index\" text=\"Your Recipes\" />\r\n                        </List>\r\n                    </>\r\n                ) : (\r\n                    <></>\r\n                )\r\n            }\r\n            {\r\n                isCreator ? (\r\n                    <>\r\n                        <Divider />\r\n                        <List>\r\n                        <i style={{ marginLeft: '10px' }}>Creator</i>\r\n                            {\r\n                                Object.keys(CRUDPagesInfo.Pages).map((CRUD, index) => {\r\n                                    return (\r\n                                        <DrawerItem icon={faBook} key={`${CRUD}-${index}`} link={`/${CRUD}/index`} text={CRUDPagesInfo.Pages[CRUD].DisplayName} />\r\n                                    );\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </>\r\n                ) : (\r\n                    <></>\r\n                )\r\n            }\r\n            {\r\n                isAdmin ? (\r\n                    <>\r\n                        <Divider />\r\n                        <List>\r\n                            <i style={{ marginLeft: '10px' }}>Admin</i>\r\n                            <DrawerItem icon={faUsers} link=\"/accounts/index\" text=\"Accounts\" />\r\n                        </List>\r\n                    </>\r\n                ) : (\r\n                    <></>\r\n                )\r\n            }\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport { AppDrawer, drawerWidth };","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBookOpen, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction HomePage({ setTitle, name, userId }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Home\");\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.form} style={{ height: window.innerHeight * 0.6 }}>\r\n            <Typography className={classes.txt} variant=\"h1\">\r\n                Hello {name}!\r\n            </Typography>\r\n            <Link to=\"/kitchen/index\" style={{ width: '100%', height: '50%', margin: '.5rem', textDecoration: 'none' }}>\r\n                <Button style={{ backgroundColor: 'skyblue', marginBottom: '10px', width: \"100%\", height: \"100%\", fontSize: 25 }}><FontAwesomeIcon icon={faUtensils} style={{ marginRight: '5px' }}/>Your Kitchen</Button>\r\n            </Link>\r\n            <Link to=\"/recipebook/index\" style={{ width: '100%', height: '50%', margin: '.5rem', textDecoration: 'none' }}>\r\n                <Button style={{ backgroundColor: 'forestgreen', marginBottom: '10px', width: \"100%\", height: \"100%\", fontSize: 25 }}><FontAwesomeIcon icon={faBookOpen} style={{ marginRight: '5px' }}/>Recipe Book</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { HomePage };","import React from 'react';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    rowActionsContainer: {\r\n\r\n    }\r\n}));\r\n\r\nfunction RowActions({ rowEntityId, rowEntity, onDetails, onEdit, onRemove })\r\n{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.rowActionsContainer}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                {onDetails ? <Button id={rowEntityId} onClick={(e) => onDetails(rowEntityId)} style={{ color: 'skyblue' }}><FontAwesomeIcon icon={faEye} /></Button> : ''}\r\n                {onEdit ? <Button id={rowEntityId} onClick={(e) => onEdit(rowEntityId)} style={{ color: 'gold' }}><FontAwesomeIcon icon={faPen} /></Button> : ''}\r\n                {onRemove ? <Button id={rowEntityId} onClick={(e) => onRemove(rowEntityId)} style={{ color: 'red' }}><FontAwesomeIcon icon={faTrash} /></Button> : ''}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RowActions };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Dialog, DialogContent, DialogTitle, Grid, Button } from \"@material-ui/core\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { KitchenIngredient } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction KitchenHomePage({ setTitle, userId, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Kitchen\");\r\n    });\r\n    \r\n    const [kitchen, setKitchen] = useState({\r\n        UserId: '',\r\n        User: '',\r\n        Ingredients: [new KitchenIngredient()],\r\n    });\r\n    if (kitchen?.Ingredients.length === 1 && kitchen.Ingredients[0].Units === 0.00)\r\n    {\r\n        kitchen.Ingredients.pop();\r\n    }\r\n\r\n    const [editItem, setEditItem] = useState({ item: {}, dialogOpened: false });\r\n    const [removeItem, setRemoveItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const [updates, setUpdates] = useState({});\r\n    const [unitTypeChanges, setUnitTypeChanges] = useState(0);\r\n    if (!updates && unitTypeChanges) {\r\n        setUpdates({});\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        Api.Kitchens.GetKitchenByUserId(userId).then((kitchen) => {\r\n            if (kitchen === \"Error\") { return; }\r\n        \r\n            setKitchen(kitchen);\r\n        });\r\n    }, [Api.Kitchens, userId]);\r\n\r\n    const onEdit = async (id) => {\r\n        if (!updates[id]) return;\r\n\r\n        \r\n\r\n        await Api.Kitchens.Update(updates[id].CountId, updates[id]);\r\n    };\r\n\r\n    const onUnitsEdited = (id, newUnits) => {\r\n        if (!updates[id]) updates[id] = kitchen.Ingredients.find(x => x.IngredientId === id);\r\n\r\n        updates[id].Units = parseFloat(newUnits);\r\n\r\n        setUpdates(updates => updates);\r\n    };\r\n\r\n    const onUnitTypeEdited = (id, newUnitType) => {\r\n        if (!updates[id]) updates[id] = kitchen.Ingredients.find(x => x.IngredientId === id);\r\n\r\n        updates[id].UnitTypeId = parseInt(newUnitType);\r\n\r\n        setUpdates(x => updates);\r\n\r\n        setUnitTypeChanges(unitTypeChanges => unitTypeChanges + 1);\r\n    };\r\n\r\n    const onRemove = (id) => {\r\n        var ingredient = kitchen.Ingredients.find(x => x.Ingredient.Id === id);\r\n\r\n        var updatedKitchen = [...kitchen.Ingredients];\r\n        updatedKitchen.splice(kitchen.Ingredients.indexOf(ingredient), 1);\r\n\r\n        setKitchen({ ...kitchen, Ingredients: updatedKitchen });\r\n\r\n        Api.Kitchens.Delete(kitchen.UserId + \"/\" + ingredient.IngredientId, ingredient);\r\n    };\r\n\r\n    const closeEditDialog = () => {\r\n        setEditItem({ ...removeItem, dialogOpened: false });\r\n    };\r\n\r\n    const closeRemoveDialog = () => {\r\n        setRemoveItem({ ...removeItem, dialogOpened: false });\r\n    };\r\n\r\n    return (\r\n        <Grid className={classes.form}>\r\n            <Dialog open={removeItem.dialogOpened} onClose={closeRemoveDialog}>\r\n                <DialogTitle>Remove {removeItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove this ingredient?\r\n                    <Button id={removeItem.item.IngredientId} style={{ backgroundColor: 'red', marginRight: '5px' }} onClick={async (e) => await onRemove(removeItem.item.IngredientId)}>Remove</Button>\r\n                    <Button style={{ backgroundColor: 'forestgreen' }} onClick={closeRemoveDialog}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog open={editItem.dialogOpened} onClose={closeEditDialog}>\r\n                <DialogTitle>Edit {editItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    <UserInputComponent onChange={(value) => onUnitsEdited(editItem.item.IngredientId, value)} name=\"Units\" defaultValue={editItem.item.Units}\r\n                        type=\"number\" inputProps={{ min: editItem.allowDecimals ? 0.01 : 1.00, max: 1000.00, step: editItem.allowDecimals ? 0.01 : 1.00 }} />\r\n                    <UserSelectInputComponent onChange={(value) => onUnitTypeEdited(editItem.item.IngredientId, value)} name=\"Unit Type\" defaultValue={editItem.item.UnitType?.CountId} type=\"number\"\r\n                        options={editItem.item.Ingredient?.UnitTypes.map(unitType => { return { id: unitType.CountId, name: unitType.Name, value: unitType.CountId } }) ?? []} />\r\n                    <Button id={editItem.item.IngredientId} style={{ backgroundColor: 'forestgreen', marginRight: '5px' }} onClick={async (e) => await onEdit(editItem.item.IngredientId)}>Save</Button>\r\n                    <Button style={{ backgroundColor: 'gold' }} onClick={closeEditDialog}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Typography className={classes.txt} variant=\"h3\">\r\n                {kitchen?.User.Name}'s Kitchen\r\n            </Typography>\r\n\r\n            {!kitchen || kitchen.Ingredients.length < 1 ?\r\n                \"No ingredients in your kitchen.\" :\r\n                <EntityList\r\n                    columns={[\r\n                        { id: 'image', label: '', minWidth: 50 },\r\n                        { id: 'name', label: 'Name', minWidth: 150 },\r\n                        { id: 'units', label: 'Amount', minWidth: 100 },\r\n                        { id: 'actions', label: 'Actions', minWidth: 200 },\r\n                    ]}\r\n                    rows={kitchen?.Ingredients.map(ingredient => {\r\n                        const updatedUnitType = ingredient.Ingredient.UnitTypes.find(x => x.CountId === updates[ingredient.IngredientId]?.UnitTypeId);\r\n\r\n                        const allowDecimals = updatedUnitType ? updatedUnitType.AllowDecimals : ingredient.UnitType.AllowDecimals;\r\n\r\n                        return {\r\n                            id: ingredient.IngredientId,\r\n                            image: <Thumbnail source={ingredient.Ingredient.ImageLocation} size=\"50px\" />,\r\n                            name: ingredient.Ingredient.Name,\r\n                            units: ingredient.Units + \" \" + ingredient.UnitType.Name,\r\n                            actions: <RowActions rowEntity={ingredient} rowEntityId={ingredient.IngredientId}\r\n                                onEdit={() => setEditItem({ item: ingredient, allowDecimals: allowDecimals, dialogOpened: true })}\r\n                                onRemove={() => setRemoveItem({ item: ingredient, dialogOpened: true })} />,\r\n                        }\r\n                    }) ?? []}\r\n                />\r\n            }\r\n            <Grid style={{ marginRight: '5px', marginBottom: '20px' }}>\r\n                <Link to=\"/kitchen/add\">\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faPlus} /> Add Ingredients</Button>\r\n                </Link>\r\n            </Grid>\r\n            <Grid style={{ marginRight: '5px' }}>\r\n                <Link to=\"/kitchen/whattobuy\">\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faPlus} /> What to Buy</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { KitchenHomePage };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Grid, Button, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faBackward, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\nimport { SelectIngredientComponent } from \"../Global/SelectIngredientComponent\";\r\n\r\nimport { Ingredient } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ingredientSelectContainer: {\r\n\r\n    },\r\n    ingredientSelectedContainer: {\r\n\r\n    }\r\n}));\r\n\r\nfunction AddIngredients({ setTitle, userId, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Add Ingredients\");\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const [unitTypeChanges, setUnitTypeChanges] = useState(0);\r\n    const [selectedIngredient, setSelectedIngredient] = useState({});\r\n    const [saveIngredient, setSaveIngredient] = useState({\r\n        UserId: userId,\r\n        IngredientId: '',\r\n        Units: 0.0,\r\n        UnitTypeId: 1,\r\n    });\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1 && unitTypeChanges)\r\n    {\r\n        ingredients?.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((ingredients) => {\r\n            if (ingredients === \"Error\") { return; }\r\n        \r\n            setIngredients(ingredients);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const selectIngredient = (ingredient) => {\r\n        setSelectedIngredient(ingredient);\r\n\r\n        saveIngredient.IngredientId = ingredient.Id;\r\n        saveIngredient.UnitTypeId = ingredient.UnitTypes[0].CountId;\r\n        saveIngredient.Units = 1.00;\r\n        setSaveIngredient(saveIngredient);\r\n    };\r\n\r\n    const SaveIngredient = () => {\r\n        if (saveIngredient.IngredientId && saveIngredient.UserId &&\r\n            saveIngredient.Units && saveIngredient.UnitTypeId) {\r\n            \r\n            Api.Kitchens.Create(saveIngredient);\r\n        }\r\n    };\r\n\r\n    const allowDecimals = ingredients.find(x => x.Id === selectedIngredient.Id)?.UnitTypes.find(x => x.CountId === saveIngredient.UnitTypeId)?.AllowDecimals;\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n        >\r\n            <Grid container style={{ width: '100%', marginBottom: '10px', padding: '5px' }}>\r\n                <Grid\r\n                    container\r\n                    item\r\n                    direction=\"column\"\r\n                    className={classes.ingredientSelectedContainer}\r\n                    style={{ display: 'inline-block', verticalAlign: 'top', width: '50%', height: window.innerHeight * 0.8 }}\r\n                    xs={6}\r\n                >\r\n                    {selectedIngredient && selectedIngredient.Id ?\r\n                        <>\r\n                            <Grid container direction=\"row\" style={{ marginTop: '10%' }}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid>\r\n                                        <Thumbnail source={selectedIngredient.ImageLocation} size={50} />\r\n                                    </Grid>\r\n                                    <Grid style={{ marginLeft: '5px' }}>\r\n                                        <Typography variant=\"h5\">{selectedIngredient.Name}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid>\r\n                                        <UserInputComponent type=\"number\" name=\"Amount\" defaultValue={1.0} inputProps={{ min: allowDecimals ? 0.01 : 1.00, max: 1000.00, step: allowDecimals ? 0.01 : 1.00 }}\r\n                                            onChange={(value) => { saveIngredient.Units = parseFloat(value); setSaveIngredient(saveIngredient); }} />\r\n                                    </Grid>\r\n                                    <Grid style={{ marginLeft: '5px' }}>\r\n                                        <UserSelectInputComponent name=\"Unit Type\" options={selectedIngredient.UnitTypes.map(unitType => { return { value: unitType.CountId, name: unitType.Name }; })}\r\n                                            onChange={(value) => { saveIngredient.UnitTypeId = parseInt(value); setSaveIngredient(saveIngredient); setUnitTypeChanges(unitTypeChanges => unitTypeChanges + 1); }} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button onClick={SaveIngredient} variant=\"outlined\" style={{ marginTop: \"20px\", color: 'green' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add Ingredient</Button>\r\n                        </>\r\n                        :\r\n                        <Typography variant=\"h5\">Select an ingredient on the right. <FontAwesomeIcon icon={faArrowRight}/></Typography>\r\n                    }\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    item\r\n                    direction=\"column\"\r\n                    className={classes.ingredientSelectContainer}\r\n                    style={{ borderLeft: \"solid 1px\", display: 'inline-block', height: window.innerHeight * 0.8 }}\r\n                    xs={6}\r\n                >\r\n                    <SelectIngredientComponent\r\n                        Api={Api}\r\n                        ingredients={ingredients}\r\n                        selectIngredient={selectIngredient}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/kitchen/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Kitchen</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { AddIngredients };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { Card, Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Recipe, RecipeCategory, RequirementsListIngredient } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction WhatToBuyPage({ setTitle, userId, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"What to Buy\");\r\n    });\r\n\r\n    const [listState, setListState] = useState(1);\r\n    \r\n    const [items, setItems] = useState([listState === 1 ? new Recipe() : new RequirementsListIngredient()]);\r\n    if (items.length === 1 && items[0].CountId === -1)\r\n    {\r\n        items.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetWhatToBuy(userId, (listState === 1 ? 'recipes' : 'ingredients')).then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setItems(items);\r\n        });\r\n    }, [Api.Ingredients, userId, listState]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const [selectedIngredient, setSelectedIngredient] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n    if (categories.length === 1 && categories[0].CountId === -1)\r\n    {\r\n        categories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api[`${listState === 1 ? 'Recipe' : 'Ingredient'}Categories`].GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api, listState]);\r\n\r\n    const [filterOptions, setFilterOptions] = useState({ name: '', categories: [] });\r\n\r\n    const filter = (recipe = listState === 1 ? new Recipe() : new RequirementsListIngredient()) => {\r\n        return (\r\n            (filterOptions.name?.length > 0 ? recipe.Name.toLowerCase().indexOf(filterOptions.name.toLowerCase()) > -1 : true) &&\r\n            (filterOptions.categories?.length > 0 ?\r\n                recipe.Categories.filter(c => {\r\n                    return filterOptions.categories.filter(x => {\r\n                        return x === c.CountId;\r\n                    }).length > 0;\r\n                }).length > 0\r\n            : true)\r\n        );\r\n    };\r\n\r\n    const addIngredients = (toAddIngredients) => {\r\n        toAddIngredients.forEach(ingredient => {\r\n            addIngredient(ingredient);\r\n        });\r\n\r\n        closeItemDialog();\r\n    };\r\n\r\n    const addIngredient = (toAddIngredient) => {\r\n        setSelectedIngredient(selectedIngredient => { selectedIngredient.dialogOpened = false; return selectedIngredient });\r\n\r\n        closeIngredientDialog();\r\n    };\r\n\r\n    const closeItemDialog = () => {\r\n        setSelectedItem({ ...selectedItem, dialogOpened: false });\r\n    };\r\n\r\n    const closeIngredientDialog = () => {\r\n        setSelectedIngredient({ ...selectedIngredient, dialogOpened: false });\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n        >\r\n            <Dialog open={selectedItem.dialogOpened} onClose={closeItemDialog}>\r\n                <DialogTitle>Missing ingredients for {selectedItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Your kitchen is missing the following ingredients to prepare {selectedItem.item.Name}:<br />\r\n                    <Grid>\r\n                        <EntityList\r\n                            columns={[\r\n                                { id: 'img', label: '', minWidth: 100 },\r\n                                { id: 'name', label: 'Name', minWidth: 100 },\r\n                                { id: 'category', label: 'Categories', minWidth: 150 },\r\n                                { id: 'amount', label: 'Amount', minWidth: 50 },\r\n                            ]}\r\n                            rows={selectedItem.item.RequirementsList?.map(ingredient => {\r\n                                return {\r\n                                    img: <Thumbnail source={ingredient.Ingredient.ImageLocation} size={50} />,\r\n                                    name: ingredient.Ingredient.Name,\r\n                                    category: ingredient.Ingredient.Categories.map(category => <Card>{category.Name}</Card>),\r\n                                    amount: `${ingredient.Units} ${ingredient.UnitType.Name}`,\r\n                                    onClick: () => { setSelectedIngredient({ item: ingredient, dialogOpened: true }) },\r\n                                };\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Button onClick={() => addIngredients(selectedItem.item.RequirementsList)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem', marginRight: '20px' }}>\r\n                        <FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} />Add All\r\n                    </Button>\r\n                    <Button onClick={closeItemDialog} style={{ backgroundColor: 'red', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog open={selectedIngredient.dialogOpened} onClose={closeIngredientDialog}>\r\n                <DialogTitle>\r\n                    Missing: {selectedIngredient.item.Ingredient?.Name}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid>\r\n                        <Grid>\r\n                            Ingredient: {selectedIngredient.item.Ingredient?.Name}\r\n                        </Grid>\r\n                        <Grid>\r\n                            Amount: {selectedIngredient.item.Units} {selectedIngredient.item.UnitType?.Name}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button onClick={() => addIngredient(selectedIngredient.item)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem', marginRight: '20px' }}>\r\n                        <FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} />Add\r\n                    </Button>\r\n                    <Button onClick={closeIngredientDialog} style={{ backgroundColor: 'red', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid item xs={7}>\r\n                <Typography className={classes.txt} variant=\"h3\">\r\n                    What to Buy\r\n                </Typography>\r\n\r\n                {items.length < 1 ?\r\n                    \"Nothing found missing in your kitchen.\" :\r\n                    <EntityList\r\n                        columns={(() => {\r\n                            var columns = [\r\n                                { id: 'image', label: '', minWidth: 50 },\r\n                                { id: 'name', label: 'Name', minWidth: 150 },\r\n                                { id: 'category', label: 'Category', minWidth: 100 },\r\n                                { id: 'amount', label: 'Amount', minWidth: 50 },\r\n                            ];\r\n\r\n                            return columns;\r\n                        })()}\r\n                        rows={items.filter(r => filter(r)).map(item => {\r\n                            var row = {\r\n                                id: item.Id ?? item.IngredientId,\r\n                                image: <Thumbnail source={item.ImageLocation ?? item.Ingredient.ImageLocation} size={50} />,\r\n                                name: item.Name ?? item.Ingredient.Name,\r\n                                category: item.Categories ? item.Categories.map(category => <Card>{category.Name}</Card>)\r\n                                    : item.Ingredient.Categories.map(category => <Card>{category.Name}</Card>),\r\n                                amount: item.RequirementsList?.length ? (item.RequirementsList?.length + ' ingredients') : (item.Units + ' ' + item.UnitType.Name),\r\n                                onClick: () => listState === 1 ? setSelectedItem({ item: item, dialogOpened: true }) : setSelectedIngredient({ item: item, dialogOpened: true }),\r\n                            };\r\n\r\n                            return row;\r\n                        })}\r\n                    />\r\n                }\r\n            </Grid>\r\n            <Grid item xs={4} style={{ borderLeft: 'solid 1px', marginLeft: '5px', padding: '5px', overflow: 'auto' }}>\r\n                <Grid container direction=\"row\" style={{ marginBottom: '8px', display: 'flex', alignContent: 'center' }}><Typography variant=\"h5\">Filters</Typography></Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center', marginBottom: '2px' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Showing:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={() => setListState(recipeListState => recipeListState === 1 ? 0 : 1)}\r\n                            style={{ width: '80%', backgroundColor: listState === 1 ? \"#ffbb00\" : \"green\" }}>\r\n                            {listState === 1 ? \"Recipes\" : \"Ingredients\"}\r\n                            <FontAwesomeIcon icon={faSync} style={{ marginLeft: '5px' }} />\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <UserInputComponent\r\n                        defaultValue={filterOptions.name}\r\n                        name=\"search by name\"\r\n                        onChange={(value) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ name: value } }; })}\r\n                    />\r\n                </Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Categories:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <UserMultiSelectInputComponent\r\n                            name=\"select categories\"\r\n                            defaultValue={filterOptions.categories}\r\n                            options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                            onChange={(values) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ categories: values } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/kitchen/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Kitchen</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { WhatToBuyPage };","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Dialog, DialogContent, DialogTitle, Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCross, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction RecipeBookHomePage({ setTitle, isCook, userId, Api, defaultRecipeListState = 1 }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"RecipeBook\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [recipeListState, setRecipeListState] = useState(defaultRecipeListState);\r\n    \r\n    const [recipes, setRecipes] = useState([new Recipe()]);\r\n    if (recipes.length === 1 && recipes[0].CountId === -1)\r\n    {\r\n        recipes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        (recipeListState === 0 ? Api.Recipes.GetAllFromCook(userId) :\r\n        recipeListState === 1 ? Api.Recipes.GetPreparableForUser(userId) :\r\n        Api.Recipes.GetAll()).then((recipes) => {\r\n            if (recipes === \"Error\") { return; }\r\n        \r\n            setRecipes(recipes);\r\n        });\r\n    }, [Api.Recipes, userId, recipeListState]);\r\n\r\n    const onDetails = (recipeId) => {\r\n        history.push('/recipebook/details/' + recipeId);\r\n    };\r\n\r\n    const onEdit = (recipeId) => {\r\n        history.push('/recipebook/custom/edit/' + recipeId);\r\n    };\r\n\r\n    const [removeItem, setRemoveItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const ToggleRemove = (recipeId) => {\r\n        const item = recipes.find(x => x.CountId === recipeId);\r\n\r\n        if (item) {\r\n            setRemoveItem({ item: item, dialogOpened: !removeItem.dialogOpened });\r\n        }\r\n        else {\r\n            console.log(`No item found with key '${recipeId}'!`);\r\n        }\r\n    };\r\n\r\n    const onRemove = (recipeId) => {\r\n        Api.Recipes.Delete(recipeId);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n    if (categories.length === 1 && categories[0].CountId === -1)\r\n    {\r\n        categories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const [filterOptions, setFilterOptions] = useState({ name: '', categories: [] });\r\n\r\n    const filter = (recipe = new Recipe()) => {\r\n        return (\r\n            (filterOptions.name?.length > 0 ? recipe.Name.toLowerCase().indexOf(filterOptions.name.toLowerCase()) > -1 : true) &&\r\n            (filterOptions.categories?.length > 0 ?\r\n                recipe.Categories.filter(c => {\r\n                    return filterOptions.categories.filter(x => {\r\n                        return x === c.CountId;\r\n                    }).length > 0;\r\n                }).length > 0\r\n            : true)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n        >\r\n            <Dialog open={removeItem.dialogOpened} onClose={() => setRemoveItem(removeItem => { removeItem.dialogOpened = false; return removeItem })}>\r\n                <DialogTitle>Remove item {removeItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove this recipe: {removeItem.item.Name} ?<br />\r\n                    <Button onClick={() => onRemove(removeItem.item.CountId)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faCross} style={{ marginRight: '5px' }}/> Remove</Button>\r\n                    <Button onClick={() => ToggleRemove(removeItem.item.CountId)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid item xs={7}>\r\n                <Typography className={classes.txt} variant=\"h3\">\r\n                    {recipeListState === 0 ? \"Custom\" : recipeListState === 1 ? \"Preparable\" : \"Full\"} Recipe Book\r\n                </Typography>\r\n\r\n                {\r\n                    isCook && recipeListState === 0 ?\r\n                        <Grid>\r\n                            <Link to={\"/recipebook/custom/create\"}>\r\n                                <Button variant=\"outlined\" style={{ marginTop: \"20px\", color: 'green' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add Custom Recipe</Button>\r\n                            </Link>\r\n                        </Grid>\r\n                        : <></>\r\n                }\r\n                {recipes.length < 1 ?\r\n                    \"No recipes found.\" :\r\n                    <EntityList\r\n                        columns={(() => {\r\n                            var columns = [\r\n                                { id: 'image', label: '', minWidth: 50 },\r\n                                { id: 'name', label: 'Name', minWidth: 150 },\r\n                                { id: 'category', label: 'Category', minWidth: 100 },\r\n                                { id: 'actions', label: 'Actions', minWidth: 200 },\r\n                            ];\r\n\r\n                            if (isCook && recipeListState === 0) {\r\n                                columns.push({ id: 'public', label: 'Public', minWidth: 50 });\r\n                            }\r\n\r\n                            return columns;\r\n                        })()}\r\n                        rows={recipes.filter(r => filter(r)).map(recipe => {\r\n                            var row = {\r\n                                id: recipe.Id,\r\n                                image: <Thumbnail source={recipe.ImageLocation} size={50} />,\r\n                                name: recipe.Name,\r\n                                actions: isCook && recipeListState === 0 ? <RowActions rowEntity={recipe} rowEntityId={recipe.Id} onDetails={onDetails} onEdit={onEdit} onRemove={() => ToggleRemove(recipe.CountId)} />\r\n                                    : <RowActions rowEntity={recipe} rowEntityId={recipe.Id} onDetails={onDetails} />,\r\n                            };\r\n\r\n                            if (isCook && recipeListState === 0) {\r\n                                row.public = recipe.IsPublic ? \"Public\" : \"Private\";\r\n                            }\r\n\r\n                            return row;\r\n                        })}\r\n                    />\r\n                }\r\n            </Grid>\r\n            <Grid item xs={4} style={{ borderLeft: 'solid 1px', marginLeft: '5px', padding: '5px', overflow: 'auto' }}>\r\n                <Grid container direction=\"row\" style={{ marginBottom: '8px', display: 'flex', alignContent: 'center' }}><Typography variant=\"h5\">Filters</Typography></Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center', marginBottom: '2px' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Showing:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={() => setRecipeListState(recipeListState => recipeListState + 1 > 2 ? (isCook ? 0 : 1) : recipeListState + 1)}\r\n                            style={{ width: '80%', backgroundColor: recipeListState === 0 ? \"orange\" : recipeListState === 1 ? \"#ffbb00\" : \"green\" }}>\r\n                            {recipeListState === 0 ? \"Your Custom Recipes\" : recipeListState === 1 ? \"Recipes You Can Prepare\" : \"All Recipes\"}\r\n                            <FontAwesomeIcon icon={faSync} style={{ marginLeft: '5px' }} />\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <UserInputComponent\r\n                        defaultValue={filterOptions.name}\r\n                        name=\"search by name\"\r\n                        onChange={(value) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ name: value } }; })}\r\n                    />\r\n                </Grid>\r\n                <Grid container style={{ padding: '3px', display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>Categories:</Grid>\r\n                    <Grid container direction=\"row\" style={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <UserMultiSelectInputComponent\r\n                            name=\"select categories\"\r\n                            defaultValue={filterOptions.categories}\r\n                            options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                            onChange={(values) => setFilterOptions(filterOptions => { return { ...filterOptions, ...{ categories: values } }; })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { RecipeBookHomePage };","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Card, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Recipe } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function RecipeDetailsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Recipe Details\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [recipeDetails, setRecipeDetails] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setRecipeDetails(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onTutorial = () => {\r\n        history.push(`/recipebook/tutorial/${recipeId}`);\r\n    };\r\n\r\n    return (\r\n        <Grid className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {recipeDetails.Name} Details\r\n            </Typography>\r\n            <Grid style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px' }}>\r\n                <Typography>\r\n                    Name: {recipeDetails.Name}\r\n                </Typography>\r\n                <Typography>\r\n                    Created by: {recipeDetails.User.Name}\r\n                </Typography>\r\n                <Typography>\r\n                    Categories:\r\n                </Typography>\r\n                {recipeDetails.Categories.map(cat =>\r\n                        <Card key={`${cat.Name}-${cat.CountId}`} variant=\"outlined\" style={{ margin: '2px', padding: '5px' }}>{cat.Name}</Card>\r\n                    )}\r\n                <Button variant=\"outlined\" onClick={onTutorial} style={{ marginTop: '15px' }}>View Tutorial</Button>\r\n            </Grid>\r\n            <Link to=\"/recipebook/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Table, TableBody, TableCell, TableRow, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward, faList, faVideo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Recipe } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function RecipeTutorialPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Recipe Tutorial\");\r\n    });\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [recipe, setRecipe] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setRecipe(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const [tutorialMode, setTutorialMode] = useState(0);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {recipe.Name} Tutorial\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{ borderBottom: 'solid 1px', paddingbottom: '15px' }}>\r\n                <Button variant=\"outlined\" onClick={() => setTutorialMode(0)}><FontAwesomeIcon icon={faList} style={{ marginRight: '5px' }} />Preparation Steps</Button>\r\n                {recipe.VideoTutorialLink ? <Button onClick={() => setTutorialMode(1)}><FontAwesomeIcon icon={faVideo} style={{ marginRight: '5px' }} />Video Tutorial</Button> : <></>}\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ paddingTop: '15px', paddingLeft: '10px' }}>\r\n                {\r\n                    tutorialMode === 0 ?\r\n                        <Grid container direction=\"row\">\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        recipe.PreparationSteps.split('{NEXT}').map((step, index) => {\r\n                                            return (\r\n                                                <TableRow>\r\n                                                    <TableCell>Step {index + 1}.</TableCell>\r\n                                                    <TableCell>{step}</TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n                        :\r\n                        <Grid container style={{ justifyContent: 'center', alignContent: 'center' }}>\r\n                            <iframe title={`Tutorial for ${recipe.Name}`} src={recipe.VideoTutorialLink} style={{ width: '90%', height: '90%' }}/>\r\n                        </Grid>\r\n                }\r\n            </Grid>\r\n            <Link to=\"/recipebook/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\nimport { UserSelectInputComponent } from \"../Global/UserSelectInputComponent\";\r\nimport { Dialog, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\r\nimport { PreparationStepsInputComponent } from \"./preparationStepsInputComponent\";\r\nimport { RequirementsInputComponent } from \"./RequirementsInputComponent\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    },\r\n    inputComponent: {\r\n        marginBottom: '15px',\r\n    }\r\n}));\r\n\r\nexport default function EditRecipePage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Edit Recipe\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const { recipeId } = useParams();\r\n\r\n    const [currentRecipe, setCurrentRecipe] = useState(new Recipe());\r\n\r\n    const [updateRecipe, setUpdateRecipe] = useState(new Recipe());\r\n\r\n    useEffect(() => {\r\n        Api.Recipes.GetById(recipeId).then((recipe) => {\r\n            if (recipe === \"Error\") { return; }\r\n        \r\n            setCurrentRecipe(recipe);\r\n            setUpdateRecipe(recipe);\r\n        });\r\n    }, [Api.Recipes, recipeId]);\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onRecipeEdited = (update) => {\r\n        setUpdateRecipe({\r\n            ...updateRecipe,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        var correctedRecipe = { ...updateRecipe };\r\n\r\n        correctedRecipe.RequirementsList = {\r\n            Ingredients: updateRecipe.RequirementsList,\r\n            RecipeId: updateRecipe.Id,\r\n        };\r\n\r\n        Api.Recipes.Update(recipeId, correctedRecipe);\r\n\r\n        history.push('/recipebook/custom/index');\r\n    };\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid className={classes.paper}>\r\n            <Dialog open={preparationStepsOpen} onClose={() => setPreparationStepsOpen(false)}>\r\n                <DialogTitle>Preparation Steps</DialogTitle>\r\n                <DialogContent>\r\n                    <PreparationStepsInputComponent\r\n                        name=\"Preparation Step\"\r\n                        defaultValue={currentRecipe.PreparationSteps}\r\n                        onChange={(value) => { onRecipeEdited({ PreparationSteps: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog open={requirementsListOpen} onClose={() => setRequirementsListOpen(false)}>\r\n                <DialogTitle>RequirementsList</DialogTitle>\r\n                <DialogContent>\r\n                    <RequirementsInputComponent\r\n                        Api={Api}\r\n                        defaultValues={currentRecipe.RequirementsList}\r\n                        parentRecipe={updateRecipe}\r\n                        onChange={(value) => { onRecipeEdited({ RequirementsList: value }); }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Edit Recipe:<br />{currentRecipe.Name}\r\n            </Typography>\r\n            <Grid style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px' }}>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.Name}\r\n                        name=\"Name\"\r\n                        onChange={(value) => onRecipeEdited({ Name: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        name=\"Description\"\r\n                        defaultValue={currentRecipe?.Description}\r\n                        onChange={(value) => { onRecipeEdited({ Description: value }); }}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.ImageLocation}\r\n                        name=\"Image\"\r\n                        onChange={(value) => onRecipeEdited({ ImageLocation: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserInputComponent\r\n                        defaultValue={currentRecipe.VideoTutorialLink}\r\n                        name=\"Tutorial Video\"\r\n                        onChange={(value) => onRecipeEdited({ VideoTutorialLink: value })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button variant=\"outlined\" onClick={() => setPreparationStepsOpen(true)}>\r\n                        {updateRecipe.PreparationSteps.split('{NEXT}').length} Steps\r\n                    </Button>\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button variant=\"outlined\" onClick={() => setRequirementsListOpen(true)}>\r\n                        {updateRecipe.RequirementsList.length} Requirements\r\n                    </Button>\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserSelectInputComponent\r\n                        defaultValue={currentRecipe.IsPublic}\r\n                        Name={\"Public?\"}\r\n                        options={[\r\n                            { name: \"Public\", value: true },\r\n                            { name: \"Private\", value: false },\r\n                        ]}\r\n                        onChange={(value) => { onRecipeEdited({ IsPublic: value }) }}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <UserMultiSelectInputComponent\r\n                        defaultValues={currentRecipe.Categories.map(category => category.CountId)}\r\n                        name=\"Categories\"\r\n                        options={categories.map(category => { return { name: category.Name, value: category.CountId }; })}\r\n                        onChange={(values) => onRecipeEdited({ Categories: values })}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.inputComponent}>\r\n                    <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/recipebook/custom/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Recipe, RecipeCategory } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CreateRecipePage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Create Recipe\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [recipe, setRecipe] = useState(new Recipe());\r\n\r\n    const [categories, setCategories] = useState([new RecipeCategory()]);\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((categories) => {\r\n            if (categories === \"Error\") { return; }\r\n        \r\n            setCategories(categories);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onRecipeValueEdited = (update) => {\r\n        setRecipe({\r\n            ...recipe,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onCreate = () => {\r\n        var correctedRecipe = { ...recipe };\r\n\r\n        correctedRecipe.RequirementsList = {\r\n            Ingredients: recipe.RequirementsList,\r\n            RecipeId: recipe.Id,\r\n        };\r\n\r\n        Api.Recipes.Create(correctedRecipe);\r\n\r\n        history.push('/recipebok/custom/index');\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Create New Recipe\r\n            </Typography>\r\n            <div>\r\n                <Grid container direction=\"row\" style={{ marginTop: '15px' }}>\r\n                    <UserInputComponent\r\n                        name=\"Name\"\r\n                        defaultValue={recipe?.Name}\r\n                        onChange={(value) => { onRecipeValueEdited({ Name: value }); }}\r\n                    />\r\n                </Grid>\r\n                    <Grid container direction=\"row\" style={{ marginTop: '15px' }}>\r\n                    <UserInputComponent\r\n                        name=\"Description\"\r\n                        defaultValue={recipe?.Description}\r\n                        onChange={(value) => { onRecipeValueEdited({ Description: value }); }}\r\n                    />\r\n                </Grid>\r\n                <UserMultiSelectInputComponent\r\n                    name=\"Categories\"\r\n                    options={categories.map(category => { return { name: category.Name, value: category.Id }; })}\r\n                    onChange={(values) => onRecipeValueEdited({ Category: values })}\r\n                />\r\n                <Button onClick={onCreate} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </div>\r\n            <Link to=\"/recipebook/custom/index\">\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to Recipes</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Button, Card, Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n}));\r\n\r\nexport default function AccountsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Accounts\");\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [removeUser, setRemoveUser] = useState({ user: {}, dialogOpened: false });\r\n\r\n    const [users, setUsers] = useState([\r\n        {\r\n            Id: '',\r\n            Name: '',\r\n            Roles: [\r\n                {\r\n                    Id: '',\r\n                    Name: '',\r\n                }\r\n            ],\r\n            Email: '',\r\n            PhoneNumber: '',\r\n        }\r\n    ]);\r\n    if (users.length === 1 && users[0].Id === '') {\r\n        users.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetAll().then((users) => {\r\n            if (users === \"Error\") { return; }\r\n        \r\n            setUsers(users);\r\n        });\r\n    }, [Api.Users]);\r\n\r\n    const onDetails = (userId) => {\r\n        history.push('/accounts/details/' + userId);\r\n    };\r\n\r\n    const onEdit = (userId) => {\r\n        history.push('/accounts/edit/' + userId);\r\n    };\r\n\r\n    const ToggleRemove = (userId) => {\r\n        setRemoveUser({ user: users.find(x => x.Id === userId), dialogOpened: !removeUser.dialogOpened });\r\n    };\r\n\r\n    const onRemove = (userId) => {\r\n        const user = users.find(x => x.Id === userId);\r\n\r\n        Api.Users.Delete(userId, user);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={removeUser.dialogOpened} onClose={() => setRemoveUser(removeUser => { removeUser.dialogOpened = false; return removeUser })}>\r\n                <DialogTitle>Remove user {removeUser.user?.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove user: {removeUser.user?.Name}<br />\r\n                    <Button onClick={() => onRemove(removeUser.user.Id)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faBan} style={{ marginRight: '5px' }}/> Ban</Button>\r\n                    <Button onClick={() => ToggleRemove(removeUser.user.Id)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Accounts\r\n            </Typography>\r\n            <div className={classes.form}>\r\n                <EntityList\r\n                    columns={[\r\n                        { id: 'name', label:'Name', minWidth: 50 },\r\n                        { id: 'email', label:'Email', minWidth: 50 },\r\n                        { id: 'roles', label:'Roles', minWidth: 150 },\r\n                        { id: 'actions', label: 'Actions', minWidth: 100 },\r\n                    ]}\r\n                    rows={users.map(user => {\r\n                        return {\r\n                            id: user.Id,\r\n                            name: user.Name,\r\n                            email: user.Email,\r\n                            roles: user.Roles.map(role => { return <Card key={role.Id} style={{ margin: '2px', padding: '3px' }}>{role.Name}</Card>; }),\r\n                            actions: <RowActions rowEntityId={user.Id} rowEntity={user} onDetails={onDetails} onEdit={onEdit} onRemove={ToggleRemove} />\r\n                        }\r\n                    })}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\nimport { UserMultiSelectInputComponent } from \"../Global/UserMultiSelectInputComponent\";\r\n\r\nimport { Role, User } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function EditAccountPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Edit Account\");\r\n    });\r\n\r\n    const { userId } = useParams();\r\n\r\n    const [currentUser, setCurrentUser] = useState(new User());\r\n\r\n    const [updateUser, setUpdateUser] = useState(new User());\r\n    const [roles, setRoles] = useState([new Role()])\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetById(userId).then((user) => {\r\n            if (user === \"Error\") { return; }\r\n        \r\n            setCurrentUser(user);\r\n            setUpdateUser(user);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    useEffect(() => {\r\n        Api.Roles.GetAll().then((roles) => {\r\n            if (roles === \"Error\") { return; }\r\n        \r\n            setRoles(roles);\r\n        });\r\n    }, [Api.Roles]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onUserEdited = (update) => {\r\n        setUpdateUser({\r\n            ...updateUser,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        Api.Users.Update(updateUser);\r\n    };\r\n\r\n    const minimumAge = 13;\r\n    var d = new Date();\r\n    const defaultMinimumAgeDate = `${d.getFullYear() - minimumAge}-${(d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : (d.getMonth() + 1)}-${d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate()}`;\r\n\r\n    var db = currentUser.DateOfBirth;\r\n    let defaultDate = db && db === typeof Date ?\r\n        `${(db.getFullYear() < 1000 ? db.getFullYear() < 100 ? db.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + db.getFullYear()}-${(db.getMonth() + 1) < 10 ? \"0\" + (db.getMonth() + 1) : (db.getMonth() + 1)}-${db.getDate() < 10 ? \"0\" + db.getDate() : db.getDate()}`\r\n         : defaultMinimumAgeDate;\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Edit {currentUser.Name}\r\n            </Typography>\r\n            <div>\r\n                <UserInputComponent\r\n                    \r\n                    defaultValue={currentUser.Name}\r\n                    name=\"Name\"\r\n                    onChange={(value) => onUserEdited({ Name: value })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={currentUser.Email}\r\n                    name=\"Email\"\r\n                    onChange={(value) => onUserEdited({ Email: value })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={defaultDate}\r\n                    name=\"Date Of Birth\"\r\n                    type=\"date\"\r\n                    inputProps={{ min: defaultMinimumAgeDate }}\r\n                    onChange={(value) => onUserEdited({ DateOfBirth: new Date(Date.parse(value)) })}\r\n                />\r\n                <UserInputComponent\r\n                    defaultValue={currentUser.PhoneNumber}\r\n                    name=\"Phone\"\r\n                    onChange={(value) => onUserEdited({ PhoneNumber: value })}\r\n                />\r\n                <UserMultiSelectInputComponent\r\n                    defaultValues={currentUser.Roles.map(role => role.Id)}\r\n                    name=\"Roles\"\r\n                    options={roles.map(role => { return { name: role.Name, value: role.Id }; })}\r\n                    onChange={(values) => onUserEdited({ Roles: values })}\r\n                />\r\n                <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle, faCross } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\n\r\nimport { User, UserAction } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function AccountDetailsPage({ setTitle, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Account Details\");\r\n    });\r\n\r\n    const { userId } = useParams();\r\n\r\n    const [userDetails, setUserDetails] = useState(new User());\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetById(userId).then((user) => {\r\n            if (user === \"Error\") { return; }\r\n        \r\n            setUserDetails(user);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    const [userActions, setUserActions] = useState([new UserAction()]);\r\n\r\n    useEffect(() => {\r\n        Api.Users.GetActionsByUserId(userId).then((userActions) => {\r\n            if (userActions === \"Error\") { return; }\r\n        \r\n            setUserActions(userActions);\r\n        });\r\n    }, [Api.Users, userId]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const db = userDetails.DateOfBirth;\r\n    const cd = userDetails.CreationDate;\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {userDetails.Name} Details\r\n            </Typography>\r\n            {\r\n                userDetails.CountId > 0 ?\r\n                <div>\r\n                    <Typography>\r\n                        Name: {userDetails.Name}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Email: {userDetails.Email}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Phone: {userDetails.PhoneNumber}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Date Of Birth: {`${db.getDate() < 10 ? \"0\" + db.getDate() : db.getDate()}-${(db.getMonth() + 1) < 10 ? \"0\" + (db.getMonth() + 1) : (db.getMonth() + 1)}-${(db.getFullYear() < 1000 ? db.getFullYear() < 100 ? db.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + db.getFullYear()}`}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Creation Date: {`${cd.getDate() < 10 ? \"0\" + cd.getDate() : cd.getDate()}-${(cd.getMonth() + 1) < 10 ? \"0\" + (cd.getMonth() + 1) : (cd.getMonth() + 1)}-${(cd.getFullYear() < 1000 ? cd.getFullYear() < 100 ? cd.getFullYear() < 10 ? \"000\" : \"00\" : \"0\" : \"\") + cd.getFullYear()}` +\r\n                        ` ${cd.getHours() < 10 ? \"0\" + cd.getHours() : cd.getHours()}:${cd.getMinutes() < 10 ? \"0\" + cd.getMinutes() : cd.getMinutes()}`}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Roles:\r\n                    </Typography>\r\n                        {userDetails.Roles.map(role => <Card key={role.Id} style={{ margin: '2px', padding: '3px' }}>{role.Name}</Card>)}\r\n                    <Typography>\r\n                        Actions:\r\n                    </Typography>\r\n                    {\r\n                        userActions && userActions.length > 0 ?\r\n                        <EntityList\r\n                            columns={[\r\n                                { id: 'description', label:'Description', minWidth: 100 },\r\n                                { id: 'endpoint', label:'Endpoint', minWidth: 50 },\r\n                                { id: 'onTable', label:'Table', minWidth: 50 },\r\n                                { id: 'refObject', label:'Object', minWidth: 100,\r\n                                    format: (obj) => {\r\n                                        return Object.keys(obj).map((key) => { return \"(\" + key + \"): [ \" + obj[key]?.toString() + \" ]\" }).join(\", \");\r\n                                    },\r\n                                },\r\n                                { id: 'success', label:'Was successful?', minWidth: 50 },\r\n                            ]}\r\n                            rows={userActions.map((userAction) => {\r\n                                return {\r\n                                    id: userAction.CountId,\r\n                                    description: userAction.Description,\r\n                                    endpoint: userAction.Endpoint,\r\n                                    refObject: userAction.RefObject,\r\n                                    onTable: userAction.ActionPerformedOnTable,\r\n                                    success: userAction.Success ? <FontAwesomeIcon icon={faCheckCircle} style={{ color: 'forestgreen' }} /> : <FontAwesomeIcon icon={faCross} style={{ color: 'red' }} />,\r\n                                };\r\n                            })}\r\n                        /> :\r\n                        <Typography>\r\n                            No actions have been logged for this user.\r\n                        </Typography>\r\n                    }\r\n                </div>\r\n                : <></>\r\n            }\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Dialog, DialogContent, DialogTitle, Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCross, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Thumbnail } from \"../Global/Thumbnail\";\r\nimport { RowActions } from \"../Global/RowActions\";\r\n\r\nimport { EntityList } from \"../Global/EntityList\";\r\n\r\nimport { Ingredient, IngredientCategory, Recipe, RecipeCategory, RequirementsListIngredient, UnitType, User } from \"../../models\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction CRUDPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"CRUD \" + TableName);\r\n    });\r\n\r\n    const [entityGroup] = useState(Api[TableName]);\r\n    \r\n    const history = useHistory();\r\n\r\n    const [entityListData, setEntityListData] = useState({ columns: [], rows: [] });\r\n\r\n    const onDetails = useCallback((id) => {\r\n        history.push(`/${TableName}/details/${id}`);\r\n    }, [TableName, history]);\r\n\r\n    const onEdit = useCallback((id) => {\r\n        history.push(`/${TableName}/edit/${id}`);\r\n    }, [TableName, history]);\r\n\r\n    const [removeItem, setRemoveItem] = useState({ item: {}, dialogOpened: false });\r\n\r\n    const ToggleRemove = useCallback((id) => {\r\n        const item = entityListData.rows.find(x => x.Id === id || x.CountId === id);\r\n\r\n        if (item) {\r\n            setRemoveItem({ item: item, dialogOpened: !removeItem.dialogOpened });\r\n        }\r\n        else {\r\n            console.log(`No item found with key '${id}'!`);\r\n        }\r\n    }, [removeItem.dialogOpened, entityListData.rows]);\r\n\r\n    const onRemove = (id) => {\r\n        entityGroup.Delete(id);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        entityGroup.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            const columns = [];\r\n            const rows = [];\r\n\r\n            if (items.length > 0) {\r\n                var keys = Object.keys(items[0]);\r\n\r\n                keys.forEach(key => {\r\n                    columns.push({\r\n                        id: key,\r\n                        label: key,\r\n                        align: 'center',\r\n                        minWidth: 50,\r\n                    });\r\n                });\r\n                columns.push({\r\n                    id: 'actions',\r\n                    label: 'Actions',\r\n                    align: 'center',\r\n                    minWidth: 100,\r\n                });\r\n\r\n                items.forEach((item) => {\r\n                    var obj = {};\r\n\r\n                    keys.forEach((key) => {\r\n                        var value;\r\n\r\n                        if (Array.isArray(item[key])) {\r\n                            value = item[key].map(el => (el instanceof IngredientCategory || el instanceof RecipeCategory) ? <Card key={el.Name + \"-\" + el.CountId} style={{ margin: '2px', padding: '3px' }}>{el.Name}</Card> :\r\n                                                         el instanceof UnitType ? <Card key={el.Name + \"-\" + el.CountId} style={{ margin: '2px', padding: '3px' }}>{el.Name} ({el.AllowDecimals ? \"decimals\" : \"integers\"})</Card> :\r\n                                                         el instanceof RequirementsListIngredient ? <Card key={el.Ingredient.Id} style={{ margin: '2px', padding: '3px' }}>{el.Ingredient.Name} ({el.Units} {el.UnitType.Name})</Card> : <Card key={el} style={{ margin: '2px', padding: '3px' }}>{el}</Card>);\r\n                        }\r\n                        else if (item[key]instanceof Object ||\r\n                                 item[key] instanceof Ingredient ||\r\n                                 item[key] instanceof IngredientCategory ||\r\n                                 item[key] instanceof UnitType ||\r\n                                 item[key] instanceof Recipe ||\r\n                                 item[key] instanceof RecipeCategory ||\r\n                                 item[key] instanceof User) {\r\n                            value = item[key].Name;\r\n                        }\r\n                        else if (key === \"ImageLocation\") {\r\n                            value = <>\r\n                                        <Thumbnail source={item[key]} size={50}/>\r\n                                        <a href={item[key]}>to location</a>\r\n                                    </>\r\n                        }\r\n                        else value = item[key];\r\n\r\n                        obj[key] = value;\r\n                    });\r\n\r\n                    obj.actions = <RowActions rowEntity={item} rowEntityId={item.Id ?? item.CountId} onDetails={onDetails} onEdit={onEdit} onRemove={ToggleRemove} />\r\n\r\n                    rows.push(obj);\r\n                });\r\n            }\r\n\r\n            setEntityListData({ columns: columns, rows: rows });\r\n        });\r\n    }, [entityGroup, ToggleRemove, onEdit, onDetails]);\r\n\r\n    return (\r\n        <Grid className={classes.form}>\r\n            <Dialog open={removeItem.dialogOpened} onClose={() => setRemoveItem(removeItem => { removeItem.dialogOpened = false; return removeItem })}>\r\n                <DialogTitle>Remove item {removeItem.item.Name}</DialogTitle>\r\n                <DialogContent>\r\n                    Are you sure you want to remove this item: {removeItem.item.Name} ?<br />\r\n                    <Button onClick={() => onRemove(removeItem.item.Id ?? removeItem.item.CountId)} style={{ backgroundColor: 'red', marginRight: '1rem', marginTop: '1rem' }}><FontAwesomeIcon icon={faCross} style={{ marginRight: '5px' }}/> Remove</Button>\r\n                    <Button onClick={() => ToggleRemove(removeItem.item.Id ?? removeItem.item.CountId)} style={{ backgroundColor: 'forestgreen', marginTop: '1rem' }}>Cancel</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Typography className={classes.txt} variant=\"h3\">\r\n                {DisplayName} CRUD\r\n            </Typography>\r\n\r\n            {entityListData.rows.length < 1 ?\r\n                \"No items found in this table.\" :\r\n                <EntityList\r\n                    columns={[...entityListData.columns]}\r\n                    rows={[...entityListData.rows]}\r\n                />\r\n            }\r\n            <Link to={`/${TableName}/create`}>\r\n                <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faPlus} style={{ marginRight: '5px' }} /> Add {DisplayName}</Button>\r\n            </Link>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { CRUDPage };","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n}));\r\n\r\nexport default function CRUDDetailsPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Details\");\r\n    });\r\n\r\n    const { id } = useParams();\r\n\r\n    const [currentItem, setCurrentItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        Api[TableName].GetById(id).then((obj) => {\r\n            if (obj === \"Error\") { return; }\r\n        \r\n            setCurrentItem(obj);\r\n        });\r\n    }, [Api, TableName, id]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Details:<br />{currentItem.Name}\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getDetailsPage(currentItem.CountId && currentItem.CountId > 0 ? currentItem : null)\r\n                }\r\n                <Link to={`/${TableName}/edit/${id}`}>\r\n                    <Button style={{ backgroundColor: 'yellow' }}>Edit</Button>\r\n                </Link>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\n\r\nimport { Ingredient, IngredientCategory, RecipeCategory, UnitType } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CRUDEditPage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Edit\");\r\n    });\r\n\r\n    const { id } = useParams();\r\n\r\n    const [currentItem, setCurrentItem] = useState({});\r\n\r\n    const [updateItem, setUpdateItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        Api[TableName].GetById(id).then((obj) => {\r\n            if (obj === \"Error\") { return; }\r\n        \r\n            setCurrentItem(obj);\r\n            setUpdateItem(obj);\r\n        });\r\n    }, [Api, TableName, id]);\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1) {\r\n        unitTypes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setUnitTypes(items);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1) {\r\n        ingredients.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredients(items);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [ingredientCategories, setIngredientCategories] = useState([new IngredientCategory()]);\r\n    if (ingredientCategories.length === 1 && ingredientCategories[0].CountId === -1) {\r\n        ingredientCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredientCategories(items);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [recipeCategories, setRecipeCategories] = useState([new RecipeCategory()]);\r\n    if (recipeCategories.length === 1 && recipeCategories[0].CountId === -1) {\r\n        recipeCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setRecipeCategories(items);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onItemEdited = (update) => {\r\n        setUpdateItem({\r\n            ...updateItem,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onEdit = () => {\r\n        if (TableName === \"Recipes\") {\r\n            var correctedRecipe = { ...updateItem };\r\n\r\n            correctedRecipe.RequirementsList = {\r\n                Ingredients: updateItem.RequirementsList,\r\n                RecipeId: updateItem.Id,\r\n            };\r\n\r\n            Api[TableName].Update(id, correctedRecipe);\r\n        }\r\n        else {\r\n            Api[TableName].Update(id, updateItem);\r\n        }\r\n    };\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Edit:<br />{currentItem.Name}\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getEditPage(currentItem.CountId && currentItem.CountId > 0 ? currentItem : null, { unitTypes, ingredients, ingredientCategories, recipeCategories },\r\n                        onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen,\r\n                                             preparationStepsCount: updateItem?.PreparationSteps?.split('{NEXT}').length ?? currentItem?.PreparationSteps?.split('{NEXT}').length,\r\n                                             requirementsCount: updateItem?.RequirementsList?.length ?? currentItem?.RequirementsList?.length })\r\n                }\r\n                <Button onClick={onEdit} style={{ backgroundColor: 'forestgreen' }}>Save</Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport CRUDPagesInfo from \"../../API/CRUDPagesInfo\";\r\nimport { Ingredient, IngredientCategory, RecipeCategory, UnitType } from \"../../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function CRUDCreatePage({ setTitle, Api, TableName, DisplayName }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(DisplayName + \" CRUD Create\");\r\n    });\r\n\r\n    const [item, setItem] = useState({});\r\n\r\n    const [unitTypes, setUnitTypes] = useState([new UnitType()]);\r\n    if (unitTypes.length === 1 && unitTypes[0].CountId === -1) {\r\n        unitTypes.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.UnitTypes.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setUnitTypes(items);\r\n        });\r\n    }, [Api.UnitTypes]);\r\n\r\n    const [ingredients, setIngredients] = useState([new Ingredient()]);\r\n    if (ingredients.length === 1 && ingredients[0].CountId === -1) {\r\n        ingredients.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.Ingredients.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredients(items);\r\n        });\r\n    }, [Api.Ingredients]);\r\n\r\n    const [ingredientCategories, setIngredientCategories] = useState([new IngredientCategory()]);\r\n    if (ingredientCategories.length === 1 && ingredientCategories[0].CountId === -1) {\r\n        ingredientCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.IngredientCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setIngredientCategories(items);\r\n        });\r\n    }, [Api.IngredientCategories]);\r\n\r\n    const [recipeCategories, setRecipeCategories] = useState([new RecipeCategory()]);\r\n    if (recipeCategories.length === 1 && recipeCategories[0].CountId === -1) {\r\n        recipeCategories.pop();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Api.RecipeCategories.GetAll().then((items) => {\r\n            if (items === \"Error\") { return; }\r\n        \r\n            setRecipeCategories(items);\r\n        });\r\n    }, [Api.RecipeCategories]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onItemEdited = (update) => {\r\n        setItem({\r\n            ...item,\r\n            ...update,\r\n        });\r\n    }\r\n\r\n    const onCreate = () => {\r\n        if (TableName === \"Recipes\") {\r\n            var correctedRecipe = { ...item };\r\n\r\n            correctedRecipe.RequirementsList = {\r\n                Ingredients: item.RequirementsList,\r\n                RecipeId: item.Id,\r\n            };\r\n\r\n            Api[TableName].Create(correctedRecipe);\r\n        }\r\n        else {\r\n            Api[TableName].Create(item);\r\n        }\r\n    };\r\n\r\n    const CRUDInfo = CRUDPagesInfo.Pages[TableName];\r\n\r\n    const [preparationStepsOpen, setPreparationStepsOpen] = useState(false);\r\n    const [requirementsListOpen, setRequirementsListOpen] = useState(false);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                {DisplayName} CRUD Create\r\n            </Typography>\r\n            <Grid container direction=\"row\" style={{  borderBottom: 'solid 1px', marginBottom: '10px', padding: '5px', justifyContent: 'center' }}>\r\n                {\r\n                    CRUDInfo.getEditPage(null, { unitTypes, ingredients, ingredientCategories, recipeCategories },\r\n                        onItemEdited, Api, { preparationStepsOpen, setPreparationStepsOpen, requirementsListOpen, setRequirementsListOpen,\r\n                                             preparationStepsCount: item?.PreparationSteps?.split('{NEXT}').length ?? item?.PreparationSteps?.split('{NEXT}').length,\r\n                                             requirementsCount: item?.RequirementsList?.length })\r\n                }\r\n                <Button onClick={onCreate} style={{ backgroundColor: 'forestgreen' }}>Create</Button>\r\n            </Grid>\r\n            <Grid container direction=\"row\" style={{ justifyContent: 'center' }}>\r\n                <Link to={`/${TableName}/index`}>\r\n                    <Button variant=\"outlined\" style={{ color: 'forestgreen' }}><FontAwesomeIcon icon={faBackward} style={{ marginRight: '5px' }} /> Back to {DisplayName}</Button>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nfunction AuthorizationCallback({ Api }) {\r\n    const history = useHistory();\r\n\r\n    function getParam(key) {\r\n        const segments = window.location.search.substr(1).split('&');\r\n\r\n        var value;\r\n\r\n        segments.forEach((segment) => {\r\n            var keyToValue = segment.split('=');\r\n\r\n            var param = { key: keyToValue[0], value: keyToValue[1] };\r\n\r\n            if (param.key === key) {\r\n                value = param.value;\r\n                return;\r\n            }\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    if (getParam(\"Error\"))\r\n    {\r\n        return (\r\n            <div>\r\n                <Typography\r\n                    variant=\"h1\"\r\n                >\r\n                    Error occurred during authorization!\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        history.push('/home/index');\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            Login completed!\r\n            <Link to=\"/home/index\">\r\n                <Button variant=\"outlined\">Go on</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { AuthorizationCallback }","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { drawerWidth } from \"./components/Drawer/AppDrawer\";\r\n\r\nimport { HomePage } from \"./components/Home/Index\";\r\n\r\nimport { KitchenHomePage } from \"./components/Kitchen/index\";\r\nimport { AddIngredients } from \"./components/Kitchen/AddIngredients\";\r\nimport { WhatToBuyPage } from \"./components/Kitchen/WhatToBuy\";\r\n\r\nimport { RecipeBookHomePage } from \"./components/RecipeBook/index\";\r\nimport RecipeDetailsPage from \"./components/RecipeBook/details\";\r\nimport RecipeTutorialPage from \"./components/RecipeBook/tutorial\";\r\nimport RecipeEditPage from \"./components/RecipeBook/edit\";\r\nimport RecipeCreatePage from \"./components/RecipeBook/create\";\r\n\r\nimport AccountsPage from \"./components/Accounts/index\";\r\nimport EditAccountPage from \"./components/Accounts/update\";\r\nimport AccountDetailsPage from \"./components/Accounts/details\";\r\n\r\nimport { CRUDPage } from \"./components/CRUD/CRUDPage\";\r\nimport CRUDPagesInfo from \"./API/CRUDPagesInfo\";\r\nimport CRUDDetailsPage from \"./components/CRUD/details\";\r\nimport CRUDEditPage from \"./components/CRUD/edit\";\r\nimport CRUDCreatePage from \"./components/CRUD/create\";\r\nimport { AuthorizationCallback } from \"./components/Onboarding/AuthorizationCallback\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction MainContent({ setTitle, drawerOpen, isRegistered, name, userId, Api, isAdmin, isCreator, isCook }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: drawerOpen\r\n            })}\r\n        >\r\n            <div className={classes.drawerHeader} />\r\n            <div\r\n                style={{\r\n                    width: \"70%\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    overflowY: \"auto\",\r\n                }}\r\n            >\r\n                <Switch>\r\n                    <Route path={Api.AuthReturnUrlPath}>\r\n                        <AuthorizationCallback Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/home/index\">\r\n                        <HomePage setTitle={setTitle} name={name} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/kitchen/index\">\r\n                        <KitchenHomePage setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/kitchen/add\">\r\n                        <AddIngredients setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/kitchen/whattobuy\">\r\n                        <WhatToBuyPage setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/grocerylist/whattobuy\">\r\n                        <WhatToBuyPage setTitle={setTitle} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/recipebook/index\">\r\n                        <RecipeBookHomePage setTitle={setTitle} isCook={isCook} userId={userId} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/recipebook/details/:recipeId\">\r\n                        <RecipeDetailsPage setTitle={setTitle} Api={Api} />\r\n                    </Route>\r\n                    <Route path=\"/recipebook/tutorial/:recipeId\">\r\n                        <RecipeTutorialPage setTitle={setTitle} Api={Api} />\r\n                    </Route>\r\n                    {\r\n                        isRegistered ? (\r\n                            <Redirect exact strict from=\"/\" to=\"/home/index\" />\r\n                        ) : (\r\n                            <></>\r\n                        )\r\n                    }\r\n                </Switch>\r\n                {\r\n                    isCook ?\r\n                    <Switch>\r\n                        <Route path=\"/recipebook/custom/index\">\r\n                            <RecipeBookHomePage setTitle={setTitle} isCook={isCook} userId={userId} Api={Api} defaultRecipeListState={0} />\r\n                        </Route>\r\n                        <Route path=\"/recipebook/custom/edit/:recipeId\">\r\n                            <RecipeEditPage setTitle={setTitle} userId={userId} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/recipebook/custom/create\">\r\n                            <RecipeCreatePage setTitle={setTitle} userId={userId} Api={Api} />\r\n                        </Route>\r\n                    </Switch>\r\n                    : null\r\n                }\r\n                {\r\n                    isCreator ?\r\n                    Object.keys(CRUDPagesInfo.Pages).map((CRUD, index) => {\r\n                        return (\r\n                            <Switch key={`CRUDSwitch-${index}`}>\r\n                                <Route path={`/${CRUD}/index`}>\r\n                                    <CRUDPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/details/:id`}>\r\n                                    <CRUDDetailsPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/edit/:id`}>\r\n                                    <CRUDEditPage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                                <Route path={`/${CRUD}/create`}>\r\n                                    <CRUDCreatePage setTitle={setTitle} TableName={CRUD} DisplayName={CRUDPagesInfo.Pages[CRUD].DisplayName} Api={Api} />\r\n                                </Route>\r\n                            </Switch>\r\n                        );\r\n                    })\r\n                    : null\r\n                }\r\n                {\r\n                    isAdmin ?\r\n                    <Switch>\r\n                         <Route path=\"/accounts/index\">\r\n                             <AccountsPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/accounts/edit/:userId\">\r\n                            <EditAccountPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                        <Route path=\"/accounts/details/:userId\">\r\n                            <AccountDetailsPage setTitle={setTitle} Api={Api} />\r\n                        </Route>\r\n                    </Switch>\r\n                    : null\r\n                }\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport { MainContent };","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\n\r\nimport { useAccount, CreateAccount } from \"../../API/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"red\" },\r\n    form: {\r\n\r\n    },\r\n    btn: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nexport default function RegisterPage({ setTitle, onSuccess, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Register\");\r\n    });\r\n\r\n    const minimumAge = 13;\r\n    var d = new Date();\r\n    const defaultMinimumAgeDate = `${d.getFullYear() - minimumAge}-${(d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : (d.getMonth + 1)}-${d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate()}`;\r\n\r\n    const { updateByLogIn } = useAccount();\r\n\r\n    const [errorMsgs, setErrorMsgs] = useState([]);\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [DOB, setDOB] = useState(defaultMinimumAgeDate);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    async function Register(username, email, DOB, password, confirmpassword) {\r\n        var newErrors = [''];\r\n        newErrors.pop();\r\n\r\n        if (password !== confirmpassword) {\r\n            newErrors.push('Passwords are not equal!');\r\n        }\r\n        if (userName.length < 2) {\r\n            newErrors.push('Invalid username!');\r\n        }\r\n        if (email.indexOf('@') === -1 || email.indexOf('.') === -1) {\r\n            newErrors.push('Invalid email!');\r\n        }\r\n\r\n        var parts = DOB.split(' ');\r\n        let year = parseInt(parts[3]);\r\n        let month = ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'].indexOf(parts[1]);\r\n        let date = parseInt(parts[2]);\r\n        var dateOfBirth = new Date(year, month, date, 0, 0, 0, 0);\r\n        var d = new Date();\r\n        const minimumAgeYear = d.getFullYear() - minimumAge;\r\n        if (dateOfBirth.getFullYear() > minimumAgeYear ||\r\n        (dateOfBirth.getFullYear() === minimumAgeYear && dateOfBirth.getMonth() > d.getMonth()) ||\r\n        (dateOfBirth.getFullYear() === minimumAgeYear && dateOfBirth.getMonth() === d.getMonth() && dateOfBirth.getDate() > d.getDate()))\r\n        {\r\n            newErrors.push(`You need to be older than ${minimumAge} years to create an account!`);\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrorMsgs(newErrors);\r\n        } else {\r\n            const success = await CreateAccount(username, email, password, updateByLogIn, Api);\r\n            if (success)\r\n            {\r\n                onSuccess();\r\n            }\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Register\r\n            </Typography>\r\n            <div className={classes.form}>\r\n            {\r\n                    errorMsgs.length > 0 ? (\r\n                        <div className={classes.errorTxt}>\r\n                            <ul>\r\n                                {\r\n                                    errorMsgs.map((error, key) =>\r\n                                        (<li>{error}</li>)\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n                \r\n\r\n                <UserInputComponent name=\"Email\" onChange={(value) => { setEmail(value); }} />\r\n                <UserInputComponent name=\"UserName\" onChange={(value) => { setUserName(value); }} />\r\n                <UserInputComponent name=\"Date of Birth\" type=\"date\" defaultValue={defaultMinimumAgeDate} onChange={(value) => { setDOB(value); }} />\r\n                <UserInputComponent name=\"Password\" type=\"password\" onChange={(value) => { setPassword(value); }} />\r\n                <UserInputComponent name=\"ConfirmPassword\" type=\"password\" onChange={(value) => { setConfirmPassword(value); }} />\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Button\r\n                        className={classes.btn}\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={async () => { await Register(userName, email, DOB, password, confirmPassword); }}\r\n                    >\r\n                        Register\r\n                    </Button>\r\n                </Grid>\r\n                \r\n                <Typography\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Already have an account? <Link to=\"/signin/login\">login here</Link>\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { UserInputComponent } from \"../Global/UserInputComponent\";\r\n\r\nimport { useAccount, GetUserIdByName } from \"../../API/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    errorTxt: { textAlign: \"center\", color: \"#ff0000\" },\r\n    form: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    btn: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nexport default function LogInPage({ setTitle, isAdmin, onSuccess, Api }) {\r\n    useEffect(() => {\r\n        setTitle && setTitle(\"Log In\");\r\n    });\r\n\r\n    const { LogIn } = useAccount();\r\n\r\n    const [errorMsgs, setErrorMsgs] = useState([]);\r\n\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    async function AttemptLogIn(username, password) {\r\n        var newErrorMsgs = [''];\r\n        newErrorMsgs.pop();\r\n\r\n        var userId = await GetUserIdByName(username, Api.Users);\r\n\r\n        if (!userId) {\r\n            newErrorMsgs.push(\"Either username or password are misspelled!\");\r\n            return false;\r\n        }\r\n\r\n        let success = await LogIn(userId, password);\r\n        \r\n        if (success) {\r\n            onSuccess();\r\n            window.location.href = \"/\";\r\n        } else {\r\n            newErrorMsgs.push(\"Either username or password are misspelled!\");\r\n            setErrorMsgs(newErrorMsgs);\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Typography className={classes.txt} variant=\"h2\">\r\n                Log In\r\n            </Typography>\r\n            <div className={classes.form}>\r\n                {\r\n                    errorMsgs.length > 0 ? (\r\n                        <div className={classes.errorTxt}>\r\n                            <ul>\r\n                                {\r\n                                    errorMsgs.map((error, key) =>\r\n                                        (<li>{error}</li>)\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n                <UserInputComponent name=\"UserName\" onChange={(value) => { setUserName(value); }} />\r\n                <UserInputComponent name=\"Password\" type=\"password\" onChange={(value) => { setPassword(value); }} />\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Button\r\n                        className={classes.btn}\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={async () => { await AttemptLogIn(userName, password); }}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Typography\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Don't have an account yet? <Link to=\"/signin/register\">register here</Link>\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from  \"@material-ui/core/styles\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n}));\r\n\r\nfunction WelcomePage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.form}>\r\n            <Typography className={classes.txt} variant=\"h1\">\r\n                Welkom!\r\n            </Typography>\r\n            <Typography className={classes.txt} variant=\"subtitle1\">\r\n                to Recipe Finder!\r\n            </Typography>\r\n            <Button\r\n                className={classes.continue}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                component={Link}\r\n                to={\"/signin/register\"}\r\n            >\r\n                Register\r\n            </Button>\r\n            <Typography className={classes.txt}>\r\n                Or if you already have an account <Link to=\"/signin/login\">Log in here</Link>\r\n            </Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { WelcomePage }","export const form = {\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Register from \"../SignIn/Register\";\r\nimport LogIn from \"../SignIn/LogIn\";\r\nimport { WelcomePage } from \"./WelcomePage\";\r\nimport { AuthorizationCallback } from \"./AuthorizationCallback\";\r\n\r\nimport { form as formstyles } from \"./common-styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    form: formstyles,\r\n    txt: { textAlign: \"center\" },\r\n    continue: {\r\n        marginTop: \"20px\",\r\n        width: \"20%\",\r\n    },\r\n\r\n}));\r\n\r\nfunction Onboarding({ setTitle, Api }) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [authPageAvailable, setAuthPageAvailable] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const TestAuthPage = async () => {\r\n            const authPage = (await Api.Custom.PerformCustom('get', Api.AuthorizationPage))?.data;\r\n\r\n            console.log(\"auth page data:\", authPage);\r\n\r\n            const pageActive = authPage && authPage.length && authPage.length > 1 && authPage !== 'Error';\r\n\r\n            console.log(\"auth page: \" + (pageActive === true ? 'active' : 'inactive'));\r\n\r\n            setAuthPageAvailable(pageActive === true);\r\n        }\r\n\r\n        if (window.location.pathname.indexOf('returnAuthorization') < 0) {\r\n            TestAuthPage();\r\n        }\r\n    }, [Api.AuthorizationPage, Api.Custom]);\r\n\r\n    const handleConnectionSuccess = () => {\r\n        history.push(\"/register\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {authPageAvailable ?\r\n                <Route component={() => { \r\n                    console.log(\"redirecting to api authorization page.\")\r\n                    window.location.href = Api.AuthorizationPage; \r\n                    return null;\r\n                }}/>\r\n                    : \r\n                <Switch>\r\n                    <Route path=\"/signin/register\">\r\n                        <div className={classes.form}>\r\n                            <Register setTitle={setTitle} authPageAvailable={authPageAvailable} onSuccess={handleConnectionSuccess} Api={Api} />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/signin/login\">\r\n                        <div className={classes.form}>\r\n                            <LogIn setTitle={setTitle} authPageAvailable={authPageAvailable} onSuccess={handleConnectionSuccess} Api={Api} />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path={Api.AuthReturnUrlPath}>\r\n                        <AuthorizationCallback Api={Api} />\r\n                    </Route>\r\n                    \r\n                    <Route>\r\n                        <WelcomePage />\r\n                    </Route>\r\n                </Switch>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Onboarding };","import React, { useState } from \"react\";\r\nimport \"./app.css\";\r\nimport { Loading } from \"./components/Loading\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { AppDrawer, drawerWidth } from \"./components/Drawer/AppDrawer\";\r\nimport { MainContent } from \"./MainContent\";\r\nimport { Onboarding } from \"./components/Onboarding/Onboarding\";\r\n\r\nimport { Authenticate, useAccount, ApiProvider, useAPI } from \"./API/index\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        height: \"100%\",\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#ffbb00',\r\n        color: 'black',\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px])`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    logoutButton: {\r\n        \r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 2,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ApiProvider>\r\n            <Authenticate>\r\n                <Loading>\r\n                    <Router>\r\n                        <div className={classes.root}>\r\n                            <AppShell />\r\n                        </div>\r\n                    </Router>\r\n                </Loading>\r\n            </Authenticate>\r\n        </ApiProvider>\r\n    );\r\n};\r\n\r\nfunction AppShell() {\r\n    const { id, name, registered, loaded, roles, logOut } = useAccount();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const classes = useStyles();\r\n\r\n    const { Api } = useAPI();\r\n\r\n    if (!loaded) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!registered) {\r\n        return <Onboarding setTitle={setTitle} Api={Api} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={() => setOpen(true)}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" noWrap className={classes.title}>\r\n                        logged in as: {name}\r\n                    </Typography>\r\n                    <Button\r\n                        className={classes.logoutButton}\r\n                        onClick={() => { logOut(); window.location.href = \"/signin/login\" }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faSignOutAlt} style={{ marginRight: '5px' }}/> log Out\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppDrawer\r\n                open={open}\r\n                onOpen={setOpen}\r\n                setTitle={setTitle}\r\n                isRegistered={registered}\r\n                isAdmin={roles.filter(r => r.name === 'admin') !== undefined}\r\n                isCreator={roles.filter(r => r.name === 'creator') !== undefined}\r\n                isCook={roles.filter(r => r.name === 'cook') !== undefined}\r\n            />\r\n            <MainContent setTitle={setTitle} drawerOpen={open} isRegistered={registered} name={name} userId={id ?? \"unknown\"} Api={Api}\r\n                isAdmin={roles.filter(r => r.name === 'admin') !== undefined}\r\n                isCreator={roles.filter(r => r.name === 'creator') !== undefined}\r\n                isCook={roles.filter(r => r.name === 'cook') !== undefined}\r\n            />\r\n        </>\r\n    );\r\n};","\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"[::1]\" ||\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served by cache-first by a service \" +\r\n                        \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker =registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                \"tabs fpr this page are closed. See https://bit.ly/CRA-PWA\"\r\n                            );\r\n\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n};\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" },\r\n    })\r\n    .then((response) => {\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (\r\n            response.status === 404 ||\r\n            (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n        ) {\r\n            navigator.serviceWorker.ready.then((registration) => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        } else {\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n    .catch(() => {\r\n        console.log(\r\n            \"No internet connection found. App is runnning in offline mode.\"\r\n        );\r\n    });\r\n};\r\n\r\nexport function unregister() {\r\n    if (\"serviceworker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n            registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n        });\r\n    }\r\n};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}